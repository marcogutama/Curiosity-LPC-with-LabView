

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 17 18:26:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F18446
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.30
    74                           ; Generated 15/09/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F18446 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  008C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  0196                     	;# 
   205  0197                     	;# 
   206  0198                     	;# 
   207  0199                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019C                     	;# 
   211  020C                     	;# 
   212  020D                     	;# 
   213  020E                     	;# 
   214  020E                     	;# 
   215  020F                     	;# 
   216  020F                     	;# 
   217  0210                     	;# 
   218  0210                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0213                     	;# 
   223  0214                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  0218                     	;# 
   232  0219                     	;# 
   233  021A                     	;# 
   234  021A                     	;# 
   235  021B                     	;# 
   236  021B                     	;# 
   237  021C                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021D                     	;# 
   241  021E                     	;# 
   242  021F                     	;# 
   243  028C                     	;# 
   244  028C                     	;# 
   245  028D                     	;# 
   246  028D                     	;# 
   247  028E                     	;# 
   248  028F                     	;# 
   249  0290                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0292                     	;# 
   253  0293                     	;# 
   254  0293                     	;# 
   255  0294                     	;# 
   256  0295                     	;# 
   257  0296                     	;# 
   258  0297                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  0299                     	;# 
   263  029A                     	;# 
   264  029B                     	;# 
   265  029C                     	;# 
   266  029D                     	;# 
   267  029F                     	;# 
   268  030C                     	;# 
   269  030C                     	;# 
   270  030D                     	;# 
   271  030E                     	;# 
   272  030F                     	;# 
   273  0310                     	;# 
   274  0310                     	;# 
   275  0311                     	;# 
   276  0312                     	;# 
   277  0313                     	;# 
   278  0314                     	;# 
   279  0314                     	;# 
   280  0315                     	;# 
   281  0316                     	;# 
   282  0317                     	;# 
   283  0318                     	;# 
   284  0318                     	;# 
   285  0319                     	;# 
   286  031A                     	;# 
   287  031B                     	;# 
   288  038C                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  038E                     	;# 
   292  0390                     	;# 
   293  0390                     	;# 
   294  0391                     	;# 
   295  0392                     	;# 
   296  048C                     	;# 
   297  048C                     	;# 
   298  048D                     	;# 
   299  048E                     	;# 
   300  048F                     	;# 
   301  048F                     	;# 
   302  0490                     	;# 
   303  0491                     	;# 
   304  0492                     	;# 
   305  0492                     	;# 
   306  0493                     	;# 
   307  0494                     	;# 
   308  0495                     	;# 
   309  0495                     	;# 
   310  0496                     	;# 
   311  0497                     	;# 
   312  0498                     	;# 
   313  0499                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049C                     	;# 
   317  049D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  059C                     	;# 
   329  059C                     	;# 
   330  059D                     	;# 
   331  059D                     	;# 
   332  059E                     	;# 
   333  059F                     	;# 
   334  060C                     	;# 
   335  060C                     	;# 
   336  060D                     	;# 
   337  060D                     	;# 
   338  060E                     	;# 
   339  060F                     	;# 
   340  0610                     	;# 
   341  0611                     	;# 
   342  0612                     	;# 
   343  0613                     	;# 
   344  0614                     	;# 
   345  0616                     	;# 
   346  0616                     	;# 
   347  0617                     	;# 
   348  0617                     	;# 
   349  0618                     	;# 
   350  0619                     	;# 
   351  061A                     	;# 
   352  061B                     	;# 
   353  061C                     	;# 
   354  061D                     	;# 
   355  061E                     	;# 
   356  070C                     	;# 
   357  070D                     	;# 
   358  070E                     	;# 
   359  070F                     	;# 
   360  0710                     	;# 
   361  0711                     	;# 
   362  0712                     	;# 
   363  0713                     	;# 
   364  0714                     	;# 
   365  0716                     	;# 
   366  0717                     	;# 
   367  0718                     	;# 
   368  0719                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  071E                     	;# 
   374  0796                     	;# 
   375  0797                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  079A                     	;# 
   379  079B                     	;# 
   380  079C                     	;# 
   381  079D                     	;# 
   382  080C                     	;# 
   383  080D                     	;# 
   384  080E                     	;# 
   385  080F                     	;# 
   386  0810                     	;# 
   387  0811                     	;# 
   388  0812                     	;# 
   389  0813                     	;# 
   390  0814                     	;# 
   391  081A                     	;# 
   392  081A                     	;# 
   393  081B                     	;# 
   394  081C                     	;# 
   395  081C                     	;# 
   396  081D                     	;# 
   397  081E                     	;# 
   398  081F                     	;# 
   399  088C                     	;# 
   400  088D                     	;# 
   401  088E                     	;# 
   402  088F                     	;# 
   403  0890                     	;# 
   404  0891                     	;# 
   405  0892                     	;# 
   406  0893                     	;# 
   407  0895                     	;# 
   408  0896                     	;# 
   409  0897                     	;# 
   410  0898                     	;# 
   411  0899                     	;# 
   412  089A                     	;# 
   413  089B                     	;# 
   414  090C                     	;# 
   415  090E                     	;# 
   416  090F                     	;# 
   417  091F                     	;# 
   418  098F                     	;# 
   419  098F                     	;# 
   420  0990                     	;# 
   421  0991                     	;# 
   422  0992                     	;# 
   423  0993                     	;# 
   424  0994                     	;# 
   425  0995                     	;# 
   426  0996                     	;# 
   427  0997                     	;# 
   428  1E0F                     	;# 
   429  1E10                     	;# 
   430  1E11                     	;# 
   431  1E12                     	;# 
   432  1E13                     	;# 
   433  1E14                     	;# 
   434  1E15                     	;# 
   435  1E16                     	;# 
   436  1E17                     	;# 
   437  1E18                     	;# 
   438  1E19                     	;# 
   439  1E1A                     	;# 
   440  1E1B                     	;# 
   441  1E1C                     	;# 
   442  1E1D                     	;# 
   443  1E1E                     	;# 
   444  1E1F                     	;# 
   445  1E20                     	;# 
   446  1E21                     	;# 
   447  1E22                     	;# 
   448  1E23                     	;# 
   449  1E24                     	;# 
   450  1E25                     	;# 
   451  1E26                     	;# 
   452  1E27                     	;# 
   453  1E28                     	;# 
   454  1E29                     	;# 
   455  1E2A                     	;# 
   456  1E2B                     	;# 
   457  1E2C                     	;# 
   458  1E2D                     	;# 
   459  1E2E                     	;# 
   460  1E2F                     	;# 
   461  1E30                     	;# 
   462  1E31                     	;# 
   463  1E32                     	;# 
   464  1E33                     	;# 
   465  1E34                     	;# 
   466  1E35                     	;# 
   467  1E36                     	;# 
   468  1E37                     	;# 
   469  1E8F                     	;# 
   470  1E90                     	;# 
   471  1E91                     	;# 
   472  1E92                     	;# 
   473  1E93                     	;# 
   474  1E94                     	;# 
   475  1E95                     	;# 
   476  1E96                     	;# 
   477  1E97                     	;# 
   478  1E9C                     	;# 
   479  1E9D                     	;# 
   480  1E9E                     	;# 
   481  1EA1                     	;# 
   482  1EA2                     	;# 
   483  1EA3                     	;# 
   484  1EA4                     	;# 
   485  1EA9                     	;# 
   486  1EAA                     	;# 
   487  1EB1                     	;# 
   488  1EB2                     	;# 
   489  1EB8                     	;# 
   490  1EB9                     	;# 
   491  1EBA                     	;# 
   492  1EBB                     	;# 
   493  1EBC                     	;# 
   494  1EBD                     	;# 
   495  1EBE                     	;# 
   496  1EC3                     	;# 
   497  1EC5                     	;# 
   498  1EC6                     	;# 
   499  1EC7                     	;# 
   500  1EC8                     	;# 
   501  1EC9                     	;# 
   502  1ECA                     	;# 
   503  1ECB                     	;# 
   504  1ECB                     	;# 
   505  1ECB                     	;# 
   506  1ECC                     	;# 
   507  1ECC                     	;# 
   508  1ECC                     	;# 
   509  1F10                     	;# 
   510  1F11                     	;# 
   511  1F12                     	;# 
   512  1F14                     	;# 
   513  1F15                     	;# 
   514  1F1C                     	;# 
   515  1F1D                     	;# 
   516  1F1E                     	;# 
   517  1F1F                     	;# 
   518  1F20                     	;# 
   519  1F21                     	;# 
   520  1F22                     	;# 
   521  1F23                     	;# 
   522  1F24                     	;# 
   523  1F25                     	;# 
   524  1F26                     	;# 
   525  1F27                     	;# 
   526  1F38                     	;# 
   527  1F39                     	;# 
   528  1F3A                     	;# 
   529  1F3B                     	;# 
   530  1F3C                     	;# 
   531  1F3D                     	;# 
   532  1F3E                     	;# 
   533  1F3F                     	;# 
   534  1F43                     	;# 
   535  1F44                     	;# 
   536  1F45                     	;# 
   537  1F46                     	;# 
   538  1F47                     	;# 
   539  1F48                     	;# 
   540  1F49                     	;# 
   541  1F4A                     	;# 
   542  1F4E                     	;# 
   543  1F4F                     	;# 
   544  1F50                     	;# 
   545  1F51                     	;# 
   546  1F52                     	;# 
   547  1F53                     	;# 
   548  1F54                     	;# 
   549  1F55                     	;# 
   550  1FE4                     	;# 
   551  1FE5                     	;# 
   552  1FE6                     	;# 
   553  1FE7                     	;# 
   554  1FE8                     	;# 
   555  1FE8                     	;# 
   556  1FE9                     	;# 
   557  1FEA                     	;# 
   558  1FEB                     	;# 
   559  1FED                     	;# 
   560  1FEE                     	;# 
   561  1FEF                     	;# 
   562  0000                     	;# 
   563  0001                     	;# 
   564  0002                     	;# 
   565  0003                     	;# 
   566  0004                     	;# 
   567  0005                     	;# 
   568  0006                     	;# 
   569  0007                     	;# 
   570  0008                     	;# 
   571  0009                     	;# 
   572  000A                     	;# 
   573  000B                     	;# 
   574  000C                     	;# 
   575  000D                     	;# 
   576  000E                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  008C                     	;# 
   584  008C                     	;# 
   585  008D                     	;# 
   586  008E                     	;# 
   587  008E                     	;# 
   588  008F                     	;# 
   589  0090                     	;# 
   590  0090                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0094                     	;# 
   597  0095                     	;# 
   598  0096                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009D                     	;# 
   609  009E                     	;# 
   610  009F                     	;# 
   611  010C                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  010F                     	;# 
   616  010F                     	;# 
   617  0110                     	;# 
   618  0111                     	;# 
   619  0112                     	;# 
   620  0113                     	;# 
   621  0114                     	;# 
   622  0115                     	;# 
   623  0116                     	;# 
   624  0117                     	;# 
   625  0118                     	;# 
   626  0119                     	;# 
   627  0119                     	;# 
   628  0119                     	;# 
   629  011A                     	;# 
   630  011A                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011B                     	;# 
   634  011B                     	;# 
   635  011B                     	;# 
   636  011B                     	;# 
   637  011C                     	;# 
   638  011C                     	;# 
   639  011C                     	;# 
   640  011D                     	;# 
   641  011D                     	;# 
   642  011D                     	;# 
   643  011E                     	;# 
   644  011E                     	;# 
   645  011E                     	;# 
   646  011F                     	;# 
   647  011F                     	;# 
   648  011F                     	;# 
   649  011F                     	;# 
   650  011F                     	;# 
   651  018C                     	;# 
   652  018D                     	;# 
   653  018E                     	;# 
   654  018F                     	;# 
   655  0190                     	;# 
   656  0191                     	;# 
   657  0192                     	;# 
   658  0196                     	;# 
   659  0197                     	;# 
   660  0198                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  020C                     	;# 
   666  020D                     	;# 
   667  020E                     	;# 
   668  020E                     	;# 
   669  020F                     	;# 
   670  020F                     	;# 
   671  0210                     	;# 
   672  0210                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0216                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0217                     	;# 
   685  0218                     	;# 
   686  0219                     	;# 
   687  021A                     	;# 
   688  021A                     	;# 
   689  021B                     	;# 
   690  021B                     	;# 
   691  021C                     	;# 
   692  021C                     	;# 
   693  021D                     	;# 
   694  021D                     	;# 
   695  021E                     	;# 
   696  021F                     	;# 
   697  028C                     	;# 
   698  028C                     	;# 
   699  028D                     	;# 
   700  028D                     	;# 
   701  028E                     	;# 
   702  028F                     	;# 
   703  0290                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0292                     	;# 
   707  0293                     	;# 
   708  0293                     	;# 
   709  0294                     	;# 
   710  0295                     	;# 
   711  0296                     	;# 
   712  0297                     	;# 
   713  0298                     	;# 
   714  0298                     	;# 
   715  0299                     	;# 
   716  0299                     	;# 
   717  029A                     	;# 
   718  029B                     	;# 
   719  029C                     	;# 
   720  029D                     	;# 
   721  029F                     	;# 
   722  030C                     	;# 
   723  030C                     	;# 
   724  030D                     	;# 
   725  030E                     	;# 
   726  030F                     	;# 
   727  0310                     	;# 
   728  0310                     	;# 
   729  0311                     	;# 
   730  0312                     	;# 
   731  0313                     	;# 
   732  0314                     	;# 
   733  0314                     	;# 
   734  0315                     	;# 
   735  0316                     	;# 
   736  0317                     	;# 
   737  0318                     	;# 
   738  0318                     	;# 
   739  0319                     	;# 
   740  031A                     	;# 
   741  031B                     	;# 
   742  038C                     	;# 
   743  038C                     	;# 
   744  038D                     	;# 
   745  038E                     	;# 
   746  0390                     	;# 
   747  0390                     	;# 
   748  0391                     	;# 
   749  0392                     	;# 
   750  048C                     	;# 
   751  048C                     	;# 
   752  048D                     	;# 
   753  048E                     	;# 
   754  048F                     	;# 
   755  048F                     	;# 
   756  0490                     	;# 
   757  0491                     	;# 
   758  0492                     	;# 
   759  0492                     	;# 
   760  0493                     	;# 
   761  0494                     	;# 
   762  0495                     	;# 
   763  0495                     	;# 
   764  0496                     	;# 
   765  0497                     	;# 
   766  0498                     	;# 
   767  0499                     	;# 
   768  049A                     	;# 
   769  049B                     	;# 
   770  049C                     	;# 
   771  049D                     	;# 
   772  058C                     	;# 
   773  058C                     	;# 
   774  058D                     	;# 
   775  058E                     	;# 
   776  058F                     	;# 
   777  058F                     	;# 
   778  0590                     	;# 
   779  0591                     	;# 
   780  0592                     	;# 
   781  0593                     	;# 
   782  059C                     	;# 
   783  059C                     	;# 
   784  059D                     	;# 
   785  059D                     	;# 
   786  059E                     	;# 
   787  059F                     	;# 
   788  060C                     	;# 
   789  060C                     	;# 
   790  060D                     	;# 
   791  060D                     	;# 
   792  060E                     	;# 
   793  060F                     	;# 
   794  0610                     	;# 
   795  0611                     	;# 
   796  0612                     	;# 
   797  0613                     	;# 
   798  0614                     	;# 
   799  0616                     	;# 
   800  0616                     	;# 
   801  0617                     	;# 
   802  0617                     	;# 
   803  0618                     	;# 
   804  0619                     	;# 
   805  061A                     	;# 
   806  061B                     	;# 
   807  061C                     	;# 
   808  061D                     	;# 
   809  061E                     	;# 
   810  070C                     	;# 
   811  070D                     	;# 
   812  070E                     	;# 
   813  070F                     	;# 
   814  0710                     	;# 
   815  0711                     	;# 
   816  0712                     	;# 
   817  0713                     	;# 
   818  0714                     	;# 
   819  0716                     	;# 
   820  0717                     	;# 
   821  0718                     	;# 
   822  0719                     	;# 
   823  071A                     	;# 
   824  071B                     	;# 
   825  071C                     	;# 
   826  071D                     	;# 
   827  071E                     	;# 
   828  0796                     	;# 
   829  0797                     	;# 
   830  0798                     	;# 
   831  0799                     	;# 
   832  079A                     	;# 
   833  079B                     	;# 
   834  079C                     	;# 
   835  079D                     	;# 
   836  080C                     	;# 
   837  080D                     	;# 
   838  080E                     	;# 
   839  080F                     	;# 
   840  0810                     	;# 
   841  0811                     	;# 
   842  0812                     	;# 
   843  0813                     	;# 
   844  0814                     	;# 
   845  081A                     	;# 
   846  081A                     	;# 
   847  081B                     	;# 
   848  081C                     	;# 
   849  081C                     	;# 
   850  081D                     	;# 
   851  081E                     	;# 
   852  081F                     	;# 
   853  088C                     	;# 
   854  088D                     	;# 
   855  088E                     	;# 
   856  088F                     	;# 
   857  0890                     	;# 
   858  0891                     	;# 
   859  0892                     	;# 
   860  0893                     	;# 
   861  0895                     	;# 
   862  0896                     	;# 
   863  0897                     	;# 
   864  0898                     	;# 
   865  0899                     	;# 
   866  089A                     	;# 
   867  089B                     	;# 
   868  090C                     	;# 
   869  090E                     	;# 
   870  090F                     	;# 
   871  091F                     	;# 
   872  098F                     	;# 
   873  098F                     	;# 
   874  0990                     	;# 
   875  0991                     	;# 
   876  0992                     	;# 
   877  0993                     	;# 
   878  0994                     	;# 
   879  0995                     	;# 
   880  0996                     	;# 
   881  0997                     	;# 
   882  1E0F                     	;# 
   883  1E10                     	;# 
   884  1E11                     	;# 
   885  1E12                     	;# 
   886  1E13                     	;# 
   887  1E14                     	;# 
   888  1E15                     	;# 
   889  1E16                     	;# 
   890  1E17                     	;# 
   891  1E18                     	;# 
   892  1E19                     	;# 
   893  1E1A                     	;# 
   894  1E1B                     	;# 
   895  1E1C                     	;# 
   896  1E1D                     	;# 
   897  1E1E                     	;# 
   898  1E1F                     	;# 
   899  1E20                     	;# 
   900  1E21                     	;# 
   901  1E22                     	;# 
   902  1E23                     	;# 
   903  1E24                     	;# 
   904  1E25                     	;# 
   905  1E26                     	;# 
   906  1E27                     	;# 
   907  1E28                     	;# 
   908  1E29                     	;# 
   909  1E2A                     	;# 
   910  1E2B                     	;# 
   911  1E2C                     	;# 
   912  1E2D                     	;# 
   913  1E2E                     	;# 
   914  1E2F                     	;# 
   915  1E30                     	;# 
   916  1E31                     	;# 
   917  1E32                     	;# 
   918  1E33                     	;# 
   919  1E34                     	;# 
   920  1E35                     	;# 
   921  1E36                     	;# 
   922  1E37                     	;# 
   923  1E8F                     	;# 
   924  1E90                     	;# 
   925  1E91                     	;# 
   926  1E92                     	;# 
   927  1E93                     	;# 
   928  1E94                     	;# 
   929  1E95                     	;# 
   930  1E96                     	;# 
   931  1E97                     	;# 
   932  1E9C                     	;# 
   933  1E9D                     	;# 
   934  1E9E                     	;# 
   935  1EA1                     	;# 
   936  1EA2                     	;# 
   937  1EA3                     	;# 
   938  1EA4                     	;# 
   939  1EA9                     	;# 
   940  1EAA                     	;# 
   941  1EB1                     	;# 
   942  1EB2                     	;# 
   943  1EB8                     	;# 
   944  1EB9                     	;# 
   945  1EBA                     	;# 
   946  1EBB                     	;# 
   947  1EBC                     	;# 
   948  1EBD                     	;# 
   949  1EBE                     	;# 
   950  1EC3                     	;# 
   951  1EC5                     	;# 
   952  1EC6                     	;# 
   953  1EC7                     	;# 
   954  1EC8                     	;# 
   955  1EC9                     	;# 
   956  1ECA                     	;# 
   957  1ECB                     	;# 
   958  1ECB                     	;# 
   959  1ECB                     	;# 
   960  1ECC                     	;# 
   961  1ECC                     	;# 
   962  1ECC                     	;# 
   963  1F10                     	;# 
   964  1F11                     	;# 
   965  1F12                     	;# 
   966  1F14                     	;# 
   967  1F15                     	;# 
   968  1F1C                     	;# 
   969  1F1D                     	;# 
   970  1F1E                     	;# 
   971  1F1F                     	;# 
   972  1F20                     	;# 
   973  1F21                     	;# 
   974  1F22                     	;# 
   975  1F23                     	;# 
   976  1F24                     	;# 
   977  1F25                     	;# 
   978  1F26                     	;# 
   979  1F27                     	;# 
   980  1F38                     	;# 
   981  1F39                     	;# 
   982  1F3A                     	;# 
   983  1F3B                     	;# 
   984  1F3C                     	;# 
   985  1F3D                     	;# 
   986  1F3E                     	;# 
   987  1F3F                     	;# 
   988  1F43                     	;# 
   989  1F44                     	;# 
   990  1F45                     	;# 
   991  1F46                     	;# 
   992  1F47                     	;# 
   993  1F48                     	;# 
   994  1F49                     	;# 
   995  1F4A                     	;# 
   996  1F4E                     	;# 
   997  1F4F                     	;# 
   998  1F50                     	;# 
   999  1F51                     	;# 
  1000  1F52                     	;# 
  1001  1F53                     	;# 
  1002  1F54                     	;# 
  1003  1F55                     	;# 
  1004  1FE4                     	;# 
  1005  1FE5                     	;# 
  1006  1FE6                     	;# 
  1007  1FE7                     	;# 
  1008  1FE8                     	;# 
  1009  1FE8                     	;# 
  1010  1FE9                     	;# 
  1011  1FEA                     	;# 
  1012  1FEB                     	;# 
  1013  1FED                     	;# 
  1014  1FEE                     	;# 
  1015  1FEF                     	;# 
  1016  0000                     	;# 
  1017  0001                     	;# 
  1018  0002                     	;# 
  1019  0003                     	;# 
  1020  0004                     	;# 
  1021  0005                     	;# 
  1022  0006                     	;# 
  1023  0007                     	;# 
  1024  0008                     	;# 
  1025  0009                     	;# 
  1026  000A                     	;# 
  1027  000B                     	;# 
  1028  000C                     	;# 
  1029  000D                     	;# 
  1030  000E                     	;# 
  1031  0012                     	;# 
  1032  0013                     	;# 
  1033  0014                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  008C                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  008E                     	;# 
  1042  008F                     	;# 
  1043  0090                     	;# 
  1044  0090                     	;# 
  1045  0091                     	;# 
  1046  0092                     	;# 
  1047  0092                     	;# 
  1048  0093                     	;# 
  1049  0094                     	;# 
  1050  0094                     	;# 
  1051  0095                     	;# 
  1052  0096                     	;# 
  1053  0096                     	;# 
  1054  0097                     	;# 
  1055  0098                     	;# 
  1056  0099                     	;# 
  1057  009A                     	;# 
  1058  009B                     	;# 
  1059  009B                     	;# 
  1060  009C                     	;# 
  1061  009D                     	;# 
  1062  009D                     	;# 
  1063  009E                     	;# 
  1064  009F                     	;# 
  1065  010C                     	;# 
  1066  010C                     	;# 
  1067  010D                     	;# 
  1068  010E                     	;# 
  1069  010F                     	;# 
  1070  010F                     	;# 
  1071  0110                     	;# 
  1072  0111                     	;# 
  1073  0112                     	;# 
  1074  0113                     	;# 
  1075  0114                     	;# 
  1076  0115                     	;# 
  1077  0116                     	;# 
  1078  0117                     	;# 
  1079  0118                     	;# 
  1080  0119                     	;# 
  1081  0119                     	;# 
  1082  0119                     	;# 
  1083  011A                     	;# 
  1084  011A                     	;# 
  1085  011A                     	;# 
  1086  011B                     	;# 
  1087  011B                     	;# 
  1088  011B                     	;# 
  1089  011B                     	;# 
  1090  011B                     	;# 
  1091  011C                     	;# 
  1092  011C                     	;# 
  1093  011C                     	;# 
  1094  011D                     	;# 
  1095  011D                     	;# 
  1096  011D                     	;# 
  1097  011E                     	;# 
  1098  011E                     	;# 
  1099  011E                     	;# 
  1100  011F                     	;# 
  1101  011F                     	;# 
  1102  011F                     	;# 
  1103  011F                     	;# 
  1104  011F                     	;# 
  1105  018C                     	;# 
  1106  018D                     	;# 
  1107  018E                     	;# 
  1108  018F                     	;# 
  1109  0190                     	;# 
  1110  0191                     	;# 
  1111  0192                     	;# 
  1112  0196                     	;# 
  1113  0197                     	;# 
  1114  0198                     	;# 
  1115  0199                     	;# 
  1116  019A                     	;# 
  1117  019B                     	;# 
  1118  019C                     	;# 
  1119  020C                     	;# 
  1120  020D                     	;# 
  1121  020E                     	;# 
  1122  020E                     	;# 
  1123  020F                     	;# 
  1124  020F                     	;# 
  1125  0210                     	;# 
  1126  0210                     	;# 
  1127  0211                     	;# 
  1128  0211                     	;# 
  1129  0212                     	;# 
  1130  0213                     	;# 
  1131  0214                     	;# 
  1132  0214                     	;# 
  1133  0215                     	;# 
  1134  0215                     	;# 
  1135  0216                     	;# 
  1136  0216                     	;# 
  1137  0217                     	;# 
  1138  0217                     	;# 
  1139  0218                     	;# 
  1140  0219                     	;# 
  1141  021A                     	;# 
  1142  021A                     	;# 
  1143  021B                     	;# 
  1144  021B                     	;# 
  1145  021C                     	;# 
  1146  021C                     	;# 
  1147  021D                     	;# 
  1148  021D                     	;# 
  1149  021E                     	;# 
  1150  021F                     	;# 
  1151  028C                     	;# 
  1152  028C                     	;# 
  1153  028D                     	;# 
  1154  028D                     	;# 
  1155  028E                     	;# 
  1156  028F                     	;# 
  1157  0290                     	;# 
  1158  0291                     	;# 
  1159  0292                     	;# 
  1160  0292                     	;# 
  1161  0293                     	;# 
  1162  0293                     	;# 
  1163  0294                     	;# 
  1164  0295                     	;# 
  1165  0296                     	;# 
  1166  0297                     	;# 
  1167  0298                     	;# 
  1168  0298                     	;# 
  1169  0299                     	;# 
  1170  0299                     	;# 
  1171  029A                     	;# 
  1172  029B                     	;# 
  1173  029C                     	;# 
  1174  029D                     	;# 
  1175  029F                     	;# 
  1176  030C                     	;# 
  1177  030C                     	;# 
  1178  030D                     	;# 
  1179  030E                     	;# 
  1180  030F                     	;# 
  1181  0310                     	;# 
  1182  0310                     	;# 
  1183  0311                     	;# 
  1184  0312                     	;# 
  1185  0313                     	;# 
  1186  0314                     	;# 
  1187  0314                     	;# 
  1188  0315                     	;# 
  1189  0316                     	;# 
  1190  0317                     	;# 
  1191  0318                     	;# 
  1192  0318                     	;# 
  1193  0319                     	;# 
  1194  031A                     	;# 
  1195  031B                     	;# 
  1196  038C                     	;# 
  1197  038C                     	;# 
  1198  038D                     	;# 
  1199  038E                     	;# 
  1200  0390                     	;# 
  1201  0390                     	;# 
  1202  0391                     	;# 
  1203  0392                     	;# 
  1204  048C                     	;# 
  1205  048C                     	;# 
  1206  048D                     	;# 
  1207  048E                     	;# 
  1208  048F                     	;# 
  1209  048F                     	;# 
  1210  0490                     	;# 
  1211  0491                     	;# 
  1212  0492                     	;# 
  1213  0492                     	;# 
  1214  0493                     	;# 
  1215  0494                     	;# 
  1216  0495                     	;# 
  1217  0495                     	;# 
  1218  0496                     	;# 
  1219  0497                     	;# 
  1220  0498                     	;# 
  1221  0499                     	;# 
  1222  049A                     	;# 
  1223  049B                     	;# 
  1224  049C                     	;# 
  1225  049D                     	;# 
  1226  058C                     	;# 
  1227  058C                     	;# 
  1228  058D                     	;# 
  1229  058E                     	;# 
  1230  058F                     	;# 
  1231  058F                     	;# 
  1232  0590                     	;# 
  1233  0591                     	;# 
  1234  0592                     	;# 
  1235  0593                     	;# 
  1236  059C                     	;# 
  1237  059C                     	;# 
  1238  059D                     	;# 
  1239  059D                     	;# 
  1240  059E                     	;# 
  1241  059F                     	;# 
  1242  060C                     	;# 
  1243  060C                     	;# 
  1244  060D                     	;# 
  1245  060D                     	;# 
  1246  060E                     	;# 
  1247  060F                     	;# 
  1248  0610                     	;# 
  1249  0611                     	;# 
  1250  0612                     	;# 
  1251  0613                     	;# 
  1252  0614                     	;# 
  1253  0616                     	;# 
  1254  0616                     	;# 
  1255  0617                     	;# 
  1256  0617                     	;# 
  1257  0618                     	;# 
  1258  0619                     	;# 
  1259  061A                     	;# 
  1260  061B                     	;# 
  1261  061C                     	;# 
  1262  061D                     	;# 
  1263  061E                     	;# 
  1264  070C                     	;# 
  1265  070D                     	;# 
  1266  070E                     	;# 
  1267  070F                     	;# 
  1268  0710                     	;# 
  1269  0711                     	;# 
  1270  0712                     	;# 
  1271  0713                     	;# 
  1272  0714                     	;# 
  1273  0716                     	;# 
  1274  0717                     	;# 
  1275  0718                     	;# 
  1276  0719                     	;# 
  1277  071A                     	;# 
  1278  071B                     	;# 
  1279  071C                     	;# 
  1280  071D                     	;# 
  1281  071E                     	;# 
  1282  0796                     	;# 
  1283  0797                     	;# 
  1284  0798                     	;# 
  1285  0799                     	;# 
  1286  079A                     	;# 
  1287  079B                     	;# 
  1288  079C                     	;# 
  1289  079D                     	;# 
  1290  080C                     	;# 
  1291  080D                     	;# 
  1292  080E                     	;# 
  1293  080F                     	;# 
  1294  0810                     	;# 
  1295  0811                     	;# 
  1296  0812                     	;# 
  1297  0813                     	;# 
  1298  0814                     	;# 
  1299  081A                     	;# 
  1300  081A                     	;# 
  1301  081B                     	;# 
  1302  081C                     	;# 
  1303  081C                     	;# 
  1304  081D                     	;# 
  1305  081E                     	;# 
  1306  081F                     	;# 
  1307  088C                     	;# 
  1308  088D                     	;# 
  1309  088E                     	;# 
  1310  088F                     	;# 
  1311  0890                     	;# 
  1312  0891                     	;# 
  1313  0892                     	;# 
  1314  0893                     	;# 
  1315  0895                     	;# 
  1316  0896                     	;# 
  1317  0897                     	;# 
  1318  0898                     	;# 
  1319  0899                     	;# 
  1320  089A                     	;# 
  1321  089B                     	;# 
  1322  090C                     	;# 
  1323  090E                     	;# 
  1324  090F                     	;# 
  1325  091F                     	;# 
  1326  098F                     	;# 
  1327  098F                     	;# 
  1328  0990                     	;# 
  1329  0991                     	;# 
  1330  0992                     	;# 
  1331  0993                     	;# 
  1332  0994                     	;# 
  1333  0995                     	;# 
  1334  0996                     	;# 
  1335  0997                     	;# 
  1336  1E0F                     	;# 
  1337  1E10                     	;# 
  1338  1E11                     	;# 
  1339  1E12                     	;# 
  1340  1E13                     	;# 
  1341  1E14                     	;# 
  1342  1E15                     	;# 
  1343  1E16                     	;# 
  1344  1E17                     	;# 
  1345  1E18                     	;# 
  1346  1E19                     	;# 
  1347  1E1A                     	;# 
  1348  1E1B                     	;# 
  1349  1E1C                     	;# 
  1350  1E1D                     	;# 
  1351  1E1E                     	;# 
  1352  1E1F                     	;# 
  1353  1E20                     	;# 
  1354  1E21                     	;# 
  1355  1E22                     	;# 
  1356  1E23                     	;# 
  1357  1E24                     	;# 
  1358  1E25                     	;# 
  1359  1E26                     	;# 
  1360  1E27                     	;# 
  1361  1E28                     	;# 
  1362  1E29                     	;# 
  1363  1E2A                     	;# 
  1364  1E2B                     	;# 
  1365  1E2C                     	;# 
  1366  1E2D                     	;# 
  1367  1E2E                     	;# 
  1368  1E2F                     	;# 
  1369  1E30                     	;# 
  1370  1E31                     	;# 
  1371  1E32                     	;# 
  1372  1E33                     	;# 
  1373  1E34                     	;# 
  1374  1E35                     	;# 
  1375  1E36                     	;# 
  1376  1E37                     	;# 
  1377  1E8F                     	;# 
  1378  1E90                     	;# 
  1379  1E91                     	;# 
  1380  1E92                     	;# 
  1381  1E93                     	;# 
  1382  1E94                     	;# 
  1383  1E95                     	;# 
  1384  1E96                     	;# 
  1385  1E97                     	;# 
  1386  1E9C                     	;# 
  1387  1E9D                     	;# 
  1388  1E9E                     	;# 
  1389  1EA1                     	;# 
  1390  1EA2                     	;# 
  1391  1EA3                     	;# 
  1392  1EA4                     	;# 
  1393  1EA9                     	;# 
  1394  1EAA                     	;# 
  1395  1EB1                     	;# 
  1396  1EB2                     	;# 
  1397  1EB8                     	;# 
  1398  1EB9                     	;# 
  1399  1EBA                     	;# 
  1400  1EBB                     	;# 
  1401  1EBC                     	;# 
  1402  1EBD                     	;# 
  1403  1EBE                     	;# 
  1404  1EC3                     	;# 
  1405  1EC5                     	;# 
  1406  1EC6                     	;# 
  1407  1EC7                     	;# 
  1408  1EC8                     	;# 
  1409  1EC9                     	;# 
  1410  1ECA                     	;# 
  1411  1ECB                     	;# 
  1412  1ECB                     	;# 
  1413  1ECB                     	;# 
  1414  1ECC                     	;# 
  1415  1ECC                     	;# 
  1416  1ECC                     	;# 
  1417  1F10                     	;# 
  1418  1F11                     	;# 
  1419  1F12                     	;# 
  1420  1F14                     	;# 
  1421  1F15                     	;# 
  1422  1F1C                     	;# 
  1423  1F1D                     	;# 
  1424  1F1E                     	;# 
  1425  1F1F                     	;# 
  1426  1F20                     	;# 
  1427  1F21                     	;# 
  1428  1F22                     	;# 
  1429  1F23                     	;# 
  1430  1F24                     	;# 
  1431  1F25                     	;# 
  1432  1F26                     	;# 
  1433  1F27                     	;# 
  1434  1F38                     	;# 
  1435  1F39                     	;# 
  1436  1F3A                     	;# 
  1437  1F3B                     	;# 
  1438  1F3C                     	;# 
  1439  1F3D                     	;# 
  1440  1F3E                     	;# 
  1441  1F3F                     	;# 
  1442  1F43                     	;# 
  1443  1F44                     	;# 
  1444  1F45                     	;# 
  1445  1F46                     	;# 
  1446  1F47                     	;# 
  1447  1F48                     	;# 
  1448  1F49                     	;# 
  1449  1F4A                     	;# 
  1450  1F4E                     	;# 
  1451  1F4F                     	;# 
  1452  1F50                     	;# 
  1453  1F51                     	;# 
  1454  1F52                     	;# 
  1455  1F53                     	;# 
  1456  1F54                     	;# 
  1457  1F55                     	;# 
  1458  1FE4                     	;# 
  1459  1FE5                     	;# 
  1460  1FE6                     	;# 
  1461  1FE7                     	;# 
  1462  1FE8                     	;# 
  1463  1FE8                     	;# 
  1464  1FE9                     	;# 
  1465  1FEA                     	;# 
  1466  1FEB                     	;# 
  1467  1FED                     	;# 
  1468  1FEE                     	;# 
  1469  1FEF                     	;# 
  1470  0000                     	;# 
  1471  0001                     	;# 
  1472  0002                     	;# 
  1473  0003                     	;# 
  1474  0004                     	;# 
  1475  0005                     	;# 
  1476  0006                     	;# 
  1477  0007                     	;# 
  1478  0008                     	;# 
  1479  0009                     	;# 
  1480  000A                     	;# 
  1481  000B                     	;# 
  1482  000C                     	;# 
  1483  000D                     	;# 
  1484  000E                     	;# 
  1485  0012                     	;# 
  1486  0013                     	;# 
  1487  0014                     	;# 
  1488  0018                     	;# 
  1489  0019                     	;# 
  1490  001A                     	;# 
  1491  008C                     	;# 
  1492  008C                     	;# 
  1493  008D                     	;# 
  1494  008E                     	;# 
  1495  008E                     	;# 
  1496  008F                     	;# 
  1497  0090                     	;# 
  1498  0090                     	;# 
  1499  0091                     	;# 
  1500  0092                     	;# 
  1501  0092                     	;# 
  1502  0093                     	;# 
  1503  0094                     	;# 
  1504  0094                     	;# 
  1505  0095                     	;# 
  1506  0096                     	;# 
  1507  0096                     	;# 
  1508  0097                     	;# 
  1509  0098                     	;# 
  1510  0099                     	;# 
  1511  009A                     	;# 
  1512  009B                     	;# 
  1513  009B                     	;# 
  1514  009C                     	;# 
  1515  009D                     	;# 
  1516  009D                     	;# 
  1517  009E                     	;# 
  1518  009F                     	;# 
  1519  010C                     	;# 
  1520  010C                     	;# 
  1521  010D                     	;# 
  1522  010E                     	;# 
  1523  010F                     	;# 
  1524  010F                     	;# 
  1525  0110                     	;# 
  1526  0111                     	;# 
  1527  0112                     	;# 
  1528  0113                     	;# 
  1529  0114                     	;# 
  1530  0115                     	;# 
  1531  0116                     	;# 
  1532  0117                     	;# 
  1533  0118                     	;# 
  1534  0119                     	;# 
  1535  0119                     	;# 
  1536  0119                     	;# 
  1537  011A                     	;# 
  1538  011A                     	;# 
  1539  011A                     	;# 
  1540  011B                     	;# 
  1541  011B                     	;# 
  1542  011B                     	;# 
  1543  011B                     	;# 
  1544  011B                     	;# 
  1545  011C                     	;# 
  1546  011C                     	;# 
  1547  011C                     	;# 
  1548  011D                     	;# 
  1549  011D                     	;# 
  1550  011D                     	;# 
  1551  011E                     	;# 
  1552  011E                     	;# 
  1553  011E                     	;# 
  1554  011F                     	;# 
  1555  011F                     	;# 
  1556  011F                     	;# 
  1557  011F                     	;# 
  1558  011F                     	;# 
  1559  018C                     	;# 
  1560  018D                     	;# 
  1561  018E                     	;# 
  1562  018F                     	;# 
  1563  0190                     	;# 
  1564  0191                     	;# 
  1565  0192                     	;# 
  1566  0196                     	;# 
  1567  0197                     	;# 
  1568  0198                     	;# 
  1569  0199                     	;# 
  1570  019A                     	;# 
  1571  019B                     	;# 
  1572  019C                     	;# 
  1573  020C                     	;# 
  1574  020D                     	;# 
  1575  020E                     	;# 
  1576  020E                     	;# 
  1577  020F                     	;# 
  1578  020F                     	;# 
  1579  0210                     	;# 
  1580  0210                     	;# 
  1581  0211                     	;# 
  1582  0211                     	;# 
  1583  0212                     	;# 
  1584  0213                     	;# 
  1585  0214                     	;# 
  1586  0214                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0216                     	;# 
  1590  0216                     	;# 
  1591  0217                     	;# 
  1592  0217                     	;# 
  1593  0218                     	;# 
  1594  0219                     	;# 
  1595  021A                     	;# 
  1596  021A                     	;# 
  1597  021B                     	;# 
  1598  021B                     	;# 
  1599  021C                     	;# 
  1600  021C                     	;# 
  1601  021D                     	;# 
  1602  021D                     	;# 
  1603  021E                     	;# 
  1604  021F                     	;# 
  1605  028C                     	;# 
  1606  028C                     	;# 
  1607  028D                     	;# 
  1608  028D                     	;# 
  1609  028E                     	;# 
  1610  028F                     	;# 
  1611  0290                     	;# 
  1612  0291                     	;# 
  1613  0292                     	;# 
  1614  0292                     	;# 
  1615  0293                     	;# 
  1616  0293                     	;# 
  1617  0294                     	;# 
  1618  0295                     	;# 
  1619  0296                     	;# 
  1620  0297                     	;# 
  1621  0298                     	;# 
  1622  0298                     	;# 
  1623  0299                     	;# 
  1624  0299                     	;# 
  1625  029A                     	;# 
  1626  029B                     	;# 
  1627  029C                     	;# 
  1628  029D                     	;# 
  1629  029F                     	;# 
  1630  030C                     	;# 
  1631  030C                     	;# 
  1632  030D                     	;# 
  1633  030E                     	;# 
  1634  030F                     	;# 
  1635  0310                     	;# 
  1636  0310                     	;# 
  1637  0311                     	;# 
  1638  0312                     	;# 
  1639  0313                     	;# 
  1640  0314                     	;# 
  1641  0314                     	;# 
  1642  0315                     	;# 
  1643  0316                     	;# 
  1644  0317                     	;# 
  1645  0318                     	;# 
  1646  0318                     	;# 
  1647  0319                     	;# 
  1648  031A                     	;# 
  1649  031B                     	;# 
  1650  038C                     	;# 
  1651  038C                     	;# 
  1652  038D                     	;# 
  1653  038E                     	;# 
  1654  0390                     	;# 
  1655  0390                     	;# 
  1656  0391                     	;# 
  1657  0392                     	;# 
  1658  048C                     	;# 
  1659  048C                     	;# 
  1660  048D                     	;# 
  1661  048E                     	;# 
  1662  048F                     	;# 
  1663  048F                     	;# 
  1664  0490                     	;# 
  1665  0491                     	;# 
  1666  0492                     	;# 
  1667  0492                     	;# 
  1668  0493                     	;# 
  1669  0494                     	;# 
  1670  0495                     	;# 
  1671  0495                     	;# 
  1672  0496                     	;# 
  1673  0497                     	;# 
  1674  0498                     	;# 
  1675  0499                     	;# 
  1676  049A                     	;# 
  1677  049B                     	;# 
  1678  049C                     	;# 
  1679  049D                     	;# 
  1680  058C                     	;# 
  1681  058C                     	;# 
  1682  058D                     	;# 
  1683  058E                     	;# 
  1684  058F                     	;# 
  1685  058F                     	;# 
  1686  0590                     	;# 
  1687  0591                     	;# 
  1688  0592                     	;# 
  1689  0593                     	;# 
  1690  059C                     	;# 
  1691  059C                     	;# 
  1692  059D                     	;# 
  1693  059D                     	;# 
  1694  059E                     	;# 
  1695  059F                     	;# 
  1696  060C                     	;# 
  1697  060C                     	;# 
  1698  060D                     	;# 
  1699  060D                     	;# 
  1700  060E                     	;# 
  1701  060F                     	;# 
  1702  0610                     	;# 
  1703  0611                     	;# 
  1704  0612                     	;# 
  1705  0613                     	;# 
  1706  0614                     	;# 
  1707  0616                     	;# 
  1708  0616                     	;# 
  1709  0617                     	;# 
  1710  0617                     	;# 
  1711  0618                     	;# 
  1712  0619                     	;# 
  1713  061A                     	;# 
  1714  061B                     	;# 
  1715  061C                     	;# 
  1716  061D                     	;# 
  1717  061E                     	;# 
  1718  070C                     	;# 
  1719  070D                     	;# 
  1720  070E                     	;# 
  1721  070F                     	;# 
  1722  0710                     	;# 
  1723  0711                     	;# 
  1724  0712                     	;# 
  1725  0713                     	;# 
  1726  0714                     	;# 
  1727  0716                     	;# 
  1728  0717                     	;# 
  1729  0718                     	;# 
  1730  0719                     	;# 
  1731  071A                     	;# 
  1732  071B                     	;# 
  1733  071C                     	;# 
  1734  071D                     	;# 
  1735  071E                     	;# 
  1736  0796                     	;# 
  1737  0797                     	;# 
  1738  0798                     	;# 
  1739  0799                     	;# 
  1740  079A                     	;# 
  1741  079B                     	;# 
  1742  079C                     	;# 
  1743  079D                     	;# 
  1744  080C                     	;# 
  1745  080D                     	;# 
  1746  080E                     	;# 
  1747  080F                     	;# 
  1748  0810                     	;# 
  1749  0811                     	;# 
  1750  0812                     	;# 
  1751  0813                     	;# 
  1752  0814                     	;# 
  1753  081A                     	;# 
  1754  081A                     	;# 
  1755  081B                     	;# 
  1756  081C                     	;# 
  1757  081C                     	;# 
  1758  081D                     	;# 
  1759  081E                     	;# 
  1760  081F                     	;# 
  1761  088C                     	;# 
  1762  088D                     	;# 
  1763  088E                     	;# 
  1764  088F                     	;# 
  1765  0890                     	;# 
  1766  0891                     	;# 
  1767  0892                     	;# 
  1768  0893                     	;# 
  1769  0895                     	;# 
  1770  0896                     	;# 
  1771  0897                     	;# 
  1772  0898                     	;# 
  1773  0899                     	;# 
  1774  089A                     	;# 
  1775  089B                     	;# 
  1776  090C                     	;# 
  1777  090E                     	;# 
  1778  090F                     	;# 
  1779  091F                     	;# 
  1780  098F                     	;# 
  1781  098F                     	;# 
  1782  0990                     	;# 
  1783  0991                     	;# 
  1784  0992                     	;# 
  1785  0993                     	;# 
  1786  0994                     	;# 
  1787  0995                     	;# 
  1788  0996                     	;# 
  1789  0997                     	;# 
  1790  1E0F                     	;# 
  1791  1E10                     	;# 
  1792  1E11                     	;# 
  1793  1E12                     	;# 
  1794  1E13                     	;# 
  1795  1E14                     	;# 
  1796  1E15                     	;# 
  1797  1E16                     	;# 
  1798  1E17                     	;# 
  1799  1E18                     	;# 
  1800  1E19                     	;# 
  1801  1E1A                     	;# 
  1802  1E1B                     	;# 
  1803  1E1C                     	;# 
  1804  1E1D                     	;# 
  1805  1E1E                     	;# 
  1806  1E1F                     	;# 
  1807  1E20                     	;# 
  1808  1E21                     	;# 
  1809  1E22                     	;# 
  1810  1E23                     	;# 
  1811  1E24                     	;# 
  1812  1E25                     	;# 
  1813  1E26                     	;# 
  1814  1E27                     	;# 
  1815  1E28                     	;# 
  1816  1E29                     	;# 
  1817  1E2A                     	;# 
  1818  1E2B                     	;# 
  1819  1E2C                     	;# 
  1820  1E2D                     	;# 
  1821  1E2E                     	;# 
  1822  1E2F                     	;# 
  1823  1E30                     	;# 
  1824  1E31                     	;# 
  1825  1E32                     	;# 
  1826  1E33                     	;# 
  1827  1E34                     	;# 
  1828  1E35                     	;# 
  1829  1E36                     	;# 
  1830  1E37                     	;# 
  1831  1E8F                     	;# 
  1832  1E90                     	;# 
  1833  1E91                     	;# 
  1834  1E92                     	;# 
  1835  1E93                     	;# 
  1836  1E94                     	;# 
  1837  1E95                     	;# 
  1838  1E96                     	;# 
  1839  1E97                     	;# 
  1840  1E9C                     	;# 
  1841  1E9D                     	;# 
  1842  1E9E                     	;# 
  1843  1EA1                     	;# 
  1844  1EA2                     	;# 
  1845  1EA3                     	;# 
  1846  1EA4                     	;# 
  1847  1EA9                     	;# 
  1848  1EAA                     	;# 
  1849  1EB1                     	;# 
  1850  1EB2                     	;# 
  1851  1EB8                     	;# 
  1852  1EB9                     	;# 
  1853  1EBA                     	;# 
  1854  1EBB                     	;# 
  1855  1EBC                     	;# 
  1856  1EBD                     	;# 
  1857  1EBE                     	;# 
  1858  1EC3                     	;# 
  1859  1EC5                     	;# 
  1860  1EC6                     	;# 
  1861  1EC7                     	;# 
  1862  1EC8                     	;# 
  1863  1EC9                     	;# 
  1864  1ECA                     	;# 
  1865  1ECB                     	;# 
  1866  1ECB                     	;# 
  1867  1ECB                     	;# 
  1868  1ECC                     	;# 
  1869  1ECC                     	;# 
  1870  1ECC                     	;# 
  1871  1F10                     	;# 
  1872  1F11                     	;# 
  1873  1F12                     	;# 
  1874  1F14                     	;# 
  1875  1F15                     	;# 
  1876  1F1C                     	;# 
  1877  1F1D                     	;# 
  1878  1F1E                     	;# 
  1879  1F1F                     	;# 
  1880  1F20                     	;# 
  1881  1F21                     	;# 
  1882  1F22                     	;# 
  1883  1F23                     	;# 
  1884  1F24                     	;# 
  1885  1F25                     	;# 
  1886  1F26                     	;# 
  1887  1F27                     	;# 
  1888  1F38                     	;# 
  1889  1F39                     	;# 
  1890  1F3A                     	;# 
  1891  1F3B                     	;# 
  1892  1F3C                     	;# 
  1893  1F3D                     	;# 
  1894  1F3E                     	;# 
  1895  1F3F                     	;# 
  1896  1F43                     	;# 
  1897  1F44                     	;# 
  1898  1F45                     	;# 
  1899  1F46                     	;# 
  1900  1F47                     	;# 
  1901  1F48                     	;# 
  1902  1F49                     	;# 
  1903  1F4A                     	;# 
  1904  1F4E                     	;# 
  1905  1F4F                     	;# 
  1906  1F50                     	;# 
  1907  1F51                     	;# 
  1908  1F52                     	;# 
  1909  1F53                     	;# 
  1910  1F54                     	;# 
  1911  1F55                     	;# 
  1912  1FE4                     	;# 
  1913  1FE5                     	;# 
  1914  1FE6                     	;# 
  1915  1FE7                     	;# 
  1916  1FE8                     	;# 
  1917  1FE8                     	;# 
  1918  1FE9                     	;# 
  1919  1FEA                     	;# 
  1920  1FEB                     	;# 
  1921  1FED                     	;# 
  1922  1FEE                     	;# 
  1923  1FEF                     	;# 
  1924  0000                     	;# 
  1925  0001                     	;# 
  1926  0002                     	;# 
  1927  0003                     	;# 
  1928  0004                     	;# 
  1929  0005                     	;# 
  1930  0006                     	;# 
  1931  0007                     	;# 
  1932  0008                     	;# 
  1933  0009                     	;# 
  1934  000A                     	;# 
  1935  000B                     	;# 
  1936  000C                     	;# 
  1937  000D                     	;# 
  1938  000E                     	;# 
  1939  0012                     	;# 
  1940  0013                     	;# 
  1941  0014                     	;# 
  1942  0018                     	;# 
  1943  0019                     	;# 
  1944  001A                     	;# 
  1945  008C                     	;# 
  1946  008C                     	;# 
  1947  008D                     	;# 
  1948  008E                     	;# 
  1949  008E                     	;# 
  1950  008F                     	;# 
  1951  0090                     	;# 
  1952  0090                     	;# 
  1953  0091                     	;# 
  1954  0092                     	;# 
  1955  0092                     	;# 
  1956  0093                     	;# 
  1957  0094                     	;# 
  1958  0094                     	;# 
  1959  0095                     	;# 
  1960  0096                     	;# 
  1961  0096                     	;# 
  1962  0097                     	;# 
  1963  0098                     	;# 
  1964  0099                     	;# 
  1965  009A                     	;# 
  1966  009B                     	;# 
  1967  009B                     	;# 
  1968  009C                     	;# 
  1969  009D                     	;# 
  1970  009D                     	;# 
  1971  009E                     	;# 
  1972  009F                     	;# 
  1973  010C                     	;# 
  1974  010C                     	;# 
  1975  010D                     	;# 
  1976  010E                     	;# 
  1977  010F                     	;# 
  1978  010F                     	;# 
  1979  0110                     	;# 
  1980  0111                     	;# 
  1981  0112                     	;# 
  1982  0113                     	;# 
  1983  0114                     	;# 
  1984  0115                     	;# 
  1985  0116                     	;# 
  1986  0117                     	;# 
  1987  0118                     	;# 
  1988  0119                     	;# 
  1989  0119                     	;# 
  1990  0119                     	;# 
  1991  011A                     	;# 
  1992  011A                     	;# 
  1993  011A                     	;# 
  1994  011B                     	;# 
  1995  011B                     	;# 
  1996  011B                     	;# 
  1997  011B                     	;# 
  1998  011B                     	;# 
  1999  011C                     	;# 
  2000  011C                     	;# 
  2001  011C                     	;# 
  2002  011D                     	;# 
  2003  011D                     	;# 
  2004  011D                     	;# 
  2005  011E                     	;# 
  2006  011E                     	;# 
  2007  011E                     	;# 
  2008  011F                     	;# 
  2009  011F                     	;# 
  2010  011F                     	;# 
  2011  011F                     	;# 
  2012  011F                     	;# 
  2013  018C                     	;# 
  2014  018D                     	;# 
  2015  018E                     	;# 
  2016  018F                     	;# 
  2017  0190                     	;# 
  2018  0191                     	;# 
  2019  0192                     	;# 
  2020  0196                     	;# 
  2021  0197                     	;# 
  2022  0198                     	;# 
  2023  0199                     	;# 
  2024  019A                     	;# 
  2025  019B                     	;# 
  2026  019C                     	;# 
  2027  020C                     	;# 
  2028  020D                     	;# 
  2029  020E                     	;# 
  2030  020E                     	;# 
  2031  020F                     	;# 
  2032  020F                     	;# 
  2033  0210                     	;# 
  2034  0210                     	;# 
  2035  0211                     	;# 
  2036  0211                     	;# 
  2037  0212                     	;# 
  2038  0213                     	;# 
  2039  0214                     	;# 
  2040  0214                     	;# 
  2041  0215                     	;# 
  2042  0215                     	;# 
  2043  0216                     	;# 
  2044  0216                     	;# 
  2045  0217                     	;# 
  2046  0217                     	;# 
  2047  0218                     	;# 
  2048  0219                     	;# 
  2049  021A                     	;# 
  2050  021A                     	;# 
  2051  021B                     	;# 
  2052  021B                     	;# 
  2053  021C                     	;# 
  2054  021C                     	;# 
  2055  021D                     	;# 
  2056  021D                     	;# 
  2057  021E                     	;# 
  2058  021F                     	;# 
  2059  028C                     	;# 
  2060  028C                     	;# 
  2061  028D                     	;# 
  2062  028D                     	;# 
  2063  028E                     	;# 
  2064  028F                     	;# 
  2065  0290                     	;# 
  2066  0291                     	;# 
  2067  0292                     	;# 
  2068  0292                     	;# 
  2069  0293                     	;# 
  2070  0293                     	;# 
  2071  0294                     	;# 
  2072  0295                     	;# 
  2073  0296                     	;# 
  2074  0297                     	;# 
  2075  0298                     	;# 
  2076  0298                     	;# 
  2077  0299                     	;# 
  2078  0299                     	;# 
  2079  029A                     	;# 
  2080  029B                     	;# 
  2081  029C                     	;# 
  2082  029D                     	;# 
  2083  029F                     	;# 
  2084  030C                     	;# 
  2085  030C                     	;# 
  2086  030D                     	;# 
  2087  030E                     	;# 
  2088  030F                     	;# 
  2089  0310                     	;# 
  2090  0310                     	;# 
  2091  0311                     	;# 
  2092  0312                     	;# 
  2093  0313                     	;# 
  2094  0314                     	;# 
  2095  0314                     	;# 
  2096  0315                     	;# 
  2097  0316                     	;# 
  2098  0317                     	;# 
  2099  0318                     	;# 
  2100  0318                     	;# 
  2101  0319                     	;# 
  2102  031A                     	;# 
  2103  031B                     	;# 
  2104  038C                     	;# 
  2105  038C                     	;# 
  2106  038D                     	;# 
  2107  038E                     	;# 
  2108  0390                     	;# 
  2109  0390                     	;# 
  2110  0391                     	;# 
  2111  0392                     	;# 
  2112  048C                     	;# 
  2113  048C                     	;# 
  2114  048D                     	;# 
  2115  048E                     	;# 
  2116  048F                     	;# 
  2117  048F                     	;# 
  2118  0490                     	;# 
  2119  0491                     	;# 
  2120  0492                     	;# 
  2121  0492                     	;# 
  2122  0493                     	;# 
  2123  0494                     	;# 
  2124  0495                     	;# 
  2125  0495                     	;# 
  2126  0496                     	;# 
  2127  0497                     	;# 
  2128  0498                     	;# 
  2129  0499                     	;# 
  2130  049A                     	;# 
  2131  049B                     	;# 
  2132  049C                     	;# 
  2133  049D                     	;# 
  2134  058C                     	;# 
  2135  058C                     	;# 
  2136  058D                     	;# 
  2137  058E                     	;# 
  2138  058F                     	;# 
  2139  058F                     	;# 
  2140  0590                     	;# 
  2141  0591                     	;# 
  2142  0592                     	;# 
  2143  0593                     	;# 
  2144  059C                     	;# 
  2145  059C                     	;# 
  2146  059D                     	;# 
  2147  059D                     	;# 
  2148  059E                     	;# 
  2149  059F                     	;# 
  2150  060C                     	;# 
  2151  060C                     	;# 
  2152  060D                     	;# 
  2153  060D                     	;# 
  2154  060E                     	;# 
  2155  060F                     	;# 
  2156  0610                     	;# 
  2157  0611                     	;# 
  2158  0612                     	;# 
  2159  0613                     	;# 
  2160  0614                     	;# 
  2161  0616                     	;# 
  2162  0616                     	;# 
  2163  0617                     	;# 
  2164  0617                     	;# 
  2165  0618                     	;# 
  2166  0619                     	;# 
  2167  061A                     	;# 
  2168  061B                     	;# 
  2169  061C                     	;# 
  2170  061D                     	;# 
  2171  061E                     	;# 
  2172  070C                     	;# 
  2173  070D                     	;# 
  2174  070E                     	;# 
  2175  070F                     	;# 
  2176  0710                     	;# 
  2177  0711                     	;# 
  2178  0712                     	;# 
  2179  0713                     	;# 
  2180  0714                     	;# 
  2181  0716                     	;# 
  2182  0717                     	;# 
  2183  0718                     	;# 
  2184  0719                     	;# 
  2185  071A                     	;# 
  2186  071B                     	;# 
  2187  071C                     	;# 
  2188  071D                     	;# 
  2189  071E                     	;# 
  2190  0796                     	;# 
  2191  0797                     	;# 
  2192  0798                     	;# 
  2193  0799                     	;# 
  2194  079A                     	;# 
  2195  079B                     	;# 
  2196  079C                     	;# 
  2197  079D                     	;# 
  2198  080C                     	;# 
  2199  080D                     	;# 
  2200  080E                     	;# 
  2201  080F                     	;# 
  2202  0810                     	;# 
  2203  0811                     	;# 
  2204  0812                     	;# 
  2205  0813                     	;# 
  2206  0814                     	;# 
  2207  081A                     	;# 
  2208  081A                     	;# 
  2209  081B                     	;# 
  2210  081C                     	;# 
  2211  081C                     	;# 
  2212  081D                     	;# 
  2213  081E                     	;# 
  2214  081F                     	;# 
  2215  088C                     	;# 
  2216  088D                     	;# 
  2217  088E                     	;# 
  2218  088F                     	;# 
  2219  0890                     	;# 
  2220  0891                     	;# 
  2221  0892                     	;# 
  2222  0893                     	;# 
  2223  0895                     	;# 
  2224  0896                     	;# 
  2225  0897                     	;# 
  2226  0898                     	;# 
  2227  0899                     	;# 
  2228  089A                     	;# 
  2229  089B                     	;# 
  2230  090C                     	;# 
  2231  090E                     	;# 
  2232  090F                     	;# 
  2233  091F                     	;# 
  2234  098F                     	;# 
  2235  098F                     	;# 
  2236  0990                     	;# 
  2237  0991                     	;# 
  2238  0992                     	;# 
  2239  0993                     	;# 
  2240  0994                     	;# 
  2241  0995                     	;# 
  2242  0996                     	;# 
  2243  0997                     	;# 
  2244  1E0F                     	;# 
  2245  1E10                     	;# 
  2246  1E11                     	;# 
  2247  1E12                     	;# 
  2248  1E13                     	;# 
  2249  1E14                     	;# 
  2250  1E15                     	;# 
  2251  1E16                     	;# 
  2252  1E17                     	;# 
  2253  1E18                     	;# 
  2254  1E19                     	;# 
  2255  1E1A                     	;# 
  2256  1E1B                     	;# 
  2257  1E1C                     	;# 
  2258  1E1D                     	;# 
  2259  1E1E                     	;# 
  2260  1E1F                     	;# 
  2261  1E20                     	;# 
  2262  1E21                     	;# 
  2263  1E22                     	;# 
  2264  1E23                     	;# 
  2265  1E24                     	;# 
  2266  1E25                     	;# 
  2267  1E26                     	;# 
  2268  1E27                     	;# 
  2269  1E28                     	;# 
  2270  1E29                     	;# 
  2271  1E2A                     	;# 
  2272  1E2B                     	;# 
  2273  1E2C                     	;# 
  2274  1E2D                     	;# 
  2275  1E2E                     	;# 
  2276  1E2F                     	;# 
  2277  1E30                     	;# 
  2278  1E31                     	;# 
  2279  1E32                     	;# 
  2280  1E33                     	;# 
  2281  1E34                     	;# 
  2282  1E35                     	;# 
  2283  1E36                     	;# 
  2284  1E37                     	;# 
  2285  1E8F                     	;# 
  2286  1E90                     	;# 
  2287  1E91                     	;# 
  2288  1E92                     	;# 
  2289  1E93                     	;# 
  2290  1E94                     	;# 
  2291  1E95                     	;# 
  2292  1E96                     	;# 
  2293  1E97                     	;# 
  2294  1E9C                     	;# 
  2295  1E9D                     	;# 
  2296  1E9E                     	;# 
  2297  1EA1                     	;# 
  2298  1EA2                     	;# 
  2299  1EA3                     	;# 
  2300  1EA4                     	;# 
  2301  1EA9                     	;# 
  2302  1EAA                     	;# 
  2303  1EB1                     	;# 
  2304  1EB2                     	;# 
  2305  1EB8                     	;# 
  2306  1EB9                     	;# 
  2307  1EBA                     	;# 
  2308  1EBB                     	;# 
  2309  1EBC                     	;# 
  2310  1EBD                     	;# 
  2311  1EBE                     	;# 
  2312  1EC3                     	;# 
  2313  1EC5                     	;# 
  2314  1EC6                     	;# 
  2315  1EC7                     	;# 
  2316  1EC8                     	;# 
  2317  1EC9                     	;# 
  2318  1ECA                     	;# 
  2319  1ECB                     	;# 
  2320  1ECB                     	;# 
  2321  1ECB                     	;# 
  2322  1ECC                     	;# 
  2323  1ECC                     	;# 
  2324  1ECC                     	;# 
  2325  1F10                     	;# 
  2326  1F11                     	;# 
  2327  1F12                     	;# 
  2328  1F14                     	;# 
  2329  1F15                     	;# 
  2330  1F1C                     	;# 
  2331  1F1D                     	;# 
  2332  1F1E                     	;# 
  2333  1F1F                     	;# 
  2334  1F20                     	;# 
  2335  1F21                     	;# 
  2336  1F22                     	;# 
  2337  1F23                     	;# 
  2338  1F24                     	;# 
  2339  1F25                     	;# 
  2340  1F26                     	;# 
  2341  1F27                     	;# 
  2342  1F38                     	;# 
  2343  1F39                     	;# 
  2344  1F3A                     	;# 
  2345  1F3B                     	;# 
  2346  1F3C                     	;# 
  2347  1F3D                     	;# 
  2348  1F3E                     	;# 
  2349  1F3F                     	;# 
  2350  1F43                     	;# 
  2351  1F44                     	;# 
  2352  1F45                     	;# 
  2353  1F46                     	;# 
  2354  1F47                     	;# 
  2355  1F48                     	;# 
  2356  1F49                     	;# 
  2357  1F4A                     	;# 
  2358  1F4E                     	;# 
  2359  1F4F                     	;# 
  2360  1F50                     	;# 
  2361  1F51                     	;# 
  2362  1F52                     	;# 
  2363  1F53                     	;# 
  2364  1F54                     	;# 
  2365  1F55                     	;# 
  2366  1FE4                     	;# 
  2367  1FE5                     	;# 
  2368  1FE6                     	;# 
  2369  1FE7                     	;# 
  2370  1FE8                     	;# 
  2371  1FE8                     	;# 
  2372  1FE9                     	;# 
  2373  1FEA                     	;# 
  2374  1FEB                     	;# 
  2375  1FED                     	;# 
  2376  1FEE                     	;# 
  2377  1FEF                     	;# 
  2378  0000                     	;# 
  2379  0001                     	;# 
  2380  0002                     	;# 
  2381  0003                     	;# 
  2382  0004                     	;# 
  2383  0005                     	;# 
  2384  0006                     	;# 
  2385  0007                     	;# 
  2386  0008                     	;# 
  2387  0009                     	;# 
  2388  000A                     	;# 
  2389  000B                     	;# 
  2390  000C                     	;# 
  2391  000D                     	;# 
  2392  000E                     	;# 
  2393  0012                     	;# 
  2394  0013                     	;# 
  2395  0014                     	;# 
  2396  0018                     	;# 
  2397  0019                     	;# 
  2398  001A                     	;# 
  2399  008C                     	;# 
  2400  008C                     	;# 
  2401  008D                     	;# 
  2402  008E                     	;# 
  2403  008E                     	;# 
  2404  008F                     	;# 
  2405  0090                     	;# 
  2406  0090                     	;# 
  2407  0091                     	;# 
  2408  0092                     	;# 
  2409  0092                     	;# 
  2410  0093                     	;# 
  2411  0094                     	;# 
  2412  0094                     	;# 
  2413  0095                     	;# 
  2414  0096                     	;# 
  2415  0096                     	;# 
  2416  0097                     	;# 
  2417  0098                     	;# 
  2418  0099                     	;# 
  2419  009A                     	;# 
  2420  009B                     	;# 
  2421  009B                     	;# 
  2422  009C                     	;# 
  2423  009D                     	;# 
  2424  009D                     	;# 
  2425  009E                     	;# 
  2426  009F                     	;# 
  2427  010C                     	;# 
  2428  010C                     	;# 
  2429  010D                     	;# 
  2430  010E                     	;# 
  2431  010F                     	;# 
  2432  010F                     	;# 
  2433  0110                     	;# 
  2434  0111                     	;# 
  2435  0112                     	;# 
  2436  0113                     	;# 
  2437  0114                     	;# 
  2438  0115                     	;# 
  2439  0116                     	;# 
  2440  0117                     	;# 
  2441  0118                     	;# 
  2442  0119                     	;# 
  2443  0119                     	;# 
  2444  0119                     	;# 
  2445  011A                     	;# 
  2446  011A                     	;# 
  2447  011A                     	;# 
  2448  011B                     	;# 
  2449  011B                     	;# 
  2450  011B                     	;# 
  2451  011B                     	;# 
  2452  011B                     	;# 
  2453  011C                     	;# 
  2454  011C                     	;# 
  2455  011C                     	;# 
  2456  011D                     	;# 
  2457  011D                     	;# 
  2458  011D                     	;# 
  2459  011E                     	;# 
  2460  011E                     	;# 
  2461  011E                     	;# 
  2462  011F                     	;# 
  2463  011F                     	;# 
  2464  011F                     	;# 
  2465  011F                     	;# 
  2466  011F                     	;# 
  2467  018C                     	;# 
  2468  018D                     	;# 
  2469  018E                     	;# 
  2470  018F                     	;# 
  2471  0190                     	;# 
  2472  0191                     	;# 
  2473  0192                     	;# 
  2474  0196                     	;# 
  2475  0197                     	;# 
  2476  0198                     	;# 
  2477  0199                     	;# 
  2478  019A                     	;# 
  2479  019B                     	;# 
  2480  019C                     	;# 
  2481  020C                     	;# 
  2482  020D                     	;# 
  2483  020E                     	;# 
  2484  020E                     	;# 
  2485  020F                     	;# 
  2486  020F                     	;# 
  2487  0210                     	;# 
  2488  0210                     	;# 
  2489  0211                     	;# 
  2490  0211                     	;# 
  2491  0212                     	;# 
  2492  0213                     	;# 
  2493  0214                     	;# 
  2494  0214                     	;# 
  2495  0215                     	;# 
  2496  0215                     	;# 
  2497  0216                     	;# 
  2498  0216                     	;# 
  2499  0217                     	;# 
  2500  0217                     	;# 
  2501  0218                     	;# 
  2502  0219                     	;# 
  2503  021A                     	;# 
  2504  021A                     	;# 
  2505  021B                     	;# 
  2506  021B                     	;# 
  2507  021C                     	;# 
  2508  021C                     	;# 
  2509  021D                     	;# 
  2510  021D                     	;# 
  2511  021E                     	;# 
  2512  021F                     	;# 
  2513  028C                     	;# 
  2514  028C                     	;# 
  2515  028D                     	;# 
  2516  028D                     	;# 
  2517  028E                     	;# 
  2518  028F                     	;# 
  2519  0290                     	;# 
  2520  0291                     	;# 
  2521  0292                     	;# 
  2522  0292                     	;# 
  2523  0293                     	;# 
  2524  0293                     	;# 
  2525  0294                     	;# 
  2526  0295                     	;# 
  2527  0296                     	;# 
  2528  0297                     	;# 
  2529  0298                     	;# 
  2530  0298                     	;# 
  2531  0299                     	;# 
  2532  0299                     	;# 
  2533  029A                     	;# 
  2534  029B                     	;# 
  2535  029C                     	;# 
  2536  029D                     	;# 
  2537  029F                     	;# 
  2538  030C                     	;# 
  2539  030C                     	;# 
  2540  030D                     	;# 
  2541  030E                     	;# 
  2542  030F                     	;# 
  2543  0310                     	;# 
  2544  0310                     	;# 
  2545  0311                     	;# 
  2546  0312                     	;# 
  2547  0313                     	;# 
  2548  0314                     	;# 
  2549  0314                     	;# 
  2550  0315                     	;# 
  2551  0316                     	;# 
  2552  0317                     	;# 
  2553  0318                     	;# 
  2554  0318                     	;# 
  2555  0319                     	;# 
  2556  031A                     	;# 
  2557  031B                     	;# 
  2558  038C                     	;# 
  2559  038C                     	;# 
  2560  038D                     	;# 
  2561  038E                     	;# 
  2562  0390                     	;# 
  2563  0390                     	;# 
  2564  0391                     	;# 
  2565  0392                     	;# 
  2566  048C                     	;# 
  2567  048C                     	;# 
  2568  048D                     	;# 
  2569  048E                     	;# 
  2570  048F                     	;# 
  2571  048F                     	;# 
  2572  0490                     	;# 
  2573  0491                     	;# 
  2574  0492                     	;# 
  2575  0492                     	;# 
  2576  0493                     	;# 
  2577  0494                     	;# 
  2578  0495                     	;# 
  2579  0495                     	;# 
  2580  0496                     	;# 
  2581  0497                     	;# 
  2582  0498                     	;# 
  2583  0499                     	;# 
  2584  049A                     	;# 
  2585  049B                     	;# 
  2586  049C                     	;# 
  2587  049D                     	;# 
  2588  058C                     	;# 
  2589  058C                     	;# 
  2590  058D                     	;# 
  2591  058E                     	;# 
  2592  058F                     	;# 
  2593  058F                     	;# 
  2594  0590                     	;# 
  2595  0591                     	;# 
  2596  0592                     	;# 
  2597  0593                     	;# 
  2598  059C                     	;# 
  2599  059C                     	;# 
  2600  059D                     	;# 
  2601  059D                     	;# 
  2602  059E                     	;# 
  2603  059F                     	;# 
  2604  060C                     	;# 
  2605  060C                     	;# 
  2606  060D                     	;# 
  2607  060D                     	;# 
  2608  060E                     	;# 
  2609  060F                     	;# 
  2610  0610                     	;# 
  2611  0611                     	;# 
  2612  0612                     	;# 
  2613  0613                     	;# 
  2614  0614                     	;# 
  2615  0616                     	;# 
  2616  0616                     	;# 
  2617  0617                     	;# 
  2618  0617                     	;# 
  2619  0618                     	;# 
  2620  0619                     	;# 
  2621  061A                     	;# 
  2622  061B                     	;# 
  2623  061C                     	;# 
  2624  061D                     	;# 
  2625  061E                     	;# 
  2626  070C                     	;# 
  2627  070D                     	;# 
  2628  070E                     	;# 
  2629  070F                     	;# 
  2630  0710                     	;# 
  2631  0711                     	;# 
  2632  0712                     	;# 
  2633  0713                     	;# 
  2634  0714                     	;# 
  2635  0716                     	;# 
  2636  0717                     	;# 
  2637  0718                     	;# 
  2638  0719                     	;# 
  2639  071A                     	;# 
  2640  071B                     	;# 
  2641  071C                     	;# 
  2642  071D                     	;# 
  2643  071E                     	;# 
  2644  0796                     	;# 
  2645  0797                     	;# 
  2646  0798                     	;# 
  2647  0799                     	;# 
  2648  079A                     	;# 
  2649  079B                     	;# 
  2650  079C                     	;# 
  2651  079D                     	;# 
  2652  080C                     	;# 
  2653  080D                     	;# 
  2654  080E                     	;# 
  2655  080F                     	;# 
  2656  0810                     	;# 
  2657  0811                     	;# 
  2658  0812                     	;# 
  2659  0813                     	;# 
  2660  0814                     	;# 
  2661  081A                     	;# 
  2662  081A                     	;# 
  2663  081B                     	;# 
  2664  081C                     	;# 
  2665  081C                     	;# 
  2666  081D                     	;# 
  2667  081E                     	;# 
  2668  081F                     	;# 
  2669  088C                     	;# 
  2670  088D                     	;# 
  2671  088E                     	;# 
  2672  088F                     	;# 
  2673  0890                     	;# 
  2674  0891                     	;# 
  2675  0892                     	;# 
  2676  0893                     	;# 
  2677  0895                     	;# 
  2678  0896                     	;# 
  2679  0897                     	;# 
  2680  0898                     	;# 
  2681  0899                     	;# 
  2682  089A                     	;# 
  2683  089B                     	;# 
  2684  090C                     	;# 
  2685  090E                     	;# 
  2686  090F                     	;# 
  2687  091F                     	;# 
  2688  098F                     	;# 
  2689  098F                     	;# 
  2690  0990                     	;# 
  2691  0991                     	;# 
  2692  0992                     	;# 
  2693  0993                     	;# 
  2694  0994                     	;# 
  2695  0995                     	;# 
  2696  0996                     	;# 
  2697  0997                     	;# 
  2698  1E0F                     	;# 
  2699  1E10                     	;# 
  2700  1E11                     	;# 
  2701  1E12                     	;# 
  2702  1E13                     	;# 
  2703  1E14                     	;# 
  2704  1E15                     	;# 
  2705  1E16                     	;# 
  2706  1E17                     	;# 
  2707  1E18                     	;# 
  2708  1E19                     	;# 
  2709  1E1A                     	;# 
  2710  1E1B                     	;# 
  2711  1E1C                     	;# 
  2712  1E1D                     	;# 
  2713  1E1E                     	;# 
  2714  1E1F                     	;# 
  2715  1E20                     	;# 
  2716  1E21                     	;# 
  2717  1E22                     	;# 
  2718  1E23                     	;# 
  2719  1E24                     	;# 
  2720  1E25                     	;# 
  2721  1E26                     	;# 
  2722  1E27                     	;# 
  2723  1E28                     	;# 
  2724  1E29                     	;# 
  2725  1E2A                     	;# 
  2726  1E2B                     	;# 
  2727  1E2C                     	;# 
  2728  1E2D                     	;# 
  2729  1E2E                     	;# 
  2730  1E2F                     	;# 
  2731  1E30                     	;# 
  2732  1E31                     	;# 
  2733  1E32                     	;# 
  2734  1E33                     	;# 
  2735  1E34                     	;# 
  2736  1E35                     	;# 
  2737  1E36                     	;# 
  2738  1E37                     	;# 
  2739  1E8F                     	;# 
  2740  1E90                     	;# 
  2741  1E91                     	;# 
  2742  1E92                     	;# 
  2743  1E93                     	;# 
  2744  1E94                     	;# 
  2745  1E95                     	;# 
  2746  1E96                     	;# 
  2747  1E97                     	;# 
  2748  1E9C                     	;# 
  2749  1E9D                     	;# 
  2750  1E9E                     	;# 
  2751  1EA1                     	;# 
  2752  1EA2                     	;# 
  2753  1EA3                     	;# 
  2754  1EA4                     	;# 
  2755  1EA9                     	;# 
  2756  1EAA                     	;# 
  2757  1EB1                     	;# 
  2758  1EB2                     	;# 
  2759  1EB8                     	;# 
  2760  1EB9                     	;# 
  2761  1EBA                     	;# 
  2762  1EBB                     	;# 
  2763  1EBC                     	;# 
  2764  1EBD                     	;# 
  2765  1EBE                     	;# 
  2766  1EC3                     	;# 
  2767  1EC5                     	;# 
  2768  1EC6                     	;# 
  2769  1EC7                     	;# 
  2770  1EC8                     	;# 
  2771  1EC9                     	;# 
  2772  1ECA                     	;# 
  2773  1ECB                     	;# 
  2774  1ECB                     	;# 
  2775  1ECB                     	;# 
  2776  1ECC                     	;# 
  2777  1ECC                     	;# 
  2778  1ECC                     	;# 
  2779  1F10                     	;# 
  2780  1F11                     	;# 
  2781  1F12                     	;# 
  2782  1F14                     	;# 
  2783  1F15                     	;# 
  2784  1F1C                     	;# 
  2785  1F1D                     	;# 
  2786  1F1E                     	;# 
  2787  1F1F                     	;# 
  2788  1F20                     	;# 
  2789  1F21                     	;# 
  2790  1F22                     	;# 
  2791  1F23                     	;# 
  2792  1F24                     	;# 
  2793  1F25                     	;# 
  2794  1F26                     	;# 
  2795  1F27                     	;# 
  2796  1F38                     	;# 
  2797  1F39                     	;# 
  2798  1F3A                     	;# 
  2799  1F3B                     	;# 
  2800  1F3C                     	;# 
  2801  1F3D                     	;# 
  2802  1F3E                     	;# 
  2803  1F3F                     	;# 
  2804  1F43                     	;# 
  2805  1F44                     	;# 
  2806  1F45                     	;# 
  2807  1F46                     	;# 
  2808  1F47                     	;# 
  2809  1F48                     	;# 
  2810  1F49                     	;# 
  2811  1F4A                     	;# 
  2812  1F4E                     	;# 
  2813  1F4F                     	;# 
  2814  1F50                     	;# 
  2815  1F51                     	;# 
  2816  1F52                     	;# 
  2817  1F53                     	;# 
  2818  1F54                     	;# 
  2819  1F55                     	;# 
  2820  1FE4                     	;# 
  2821  1FE5                     	;# 
  2822  1FE6                     	;# 
  2823  1FE7                     	;# 
  2824  1FE8                     	;# 
  2825  1FE8                     	;# 
  2826  1FE9                     	;# 
  2827  1FEA                     	;# 
  2828  1FEB                     	;# 
  2829  1FED                     	;# 
  2830  1FEE                     	;# 
  2831  1FEF                     	;# 
  2832  0000                     	;# 
  2833  0001                     	;# 
  2834  0002                     	;# 
  2835  0003                     	;# 
  2836  0004                     	;# 
  2837  0005                     	;# 
  2838  0006                     	;# 
  2839  0007                     	;# 
  2840  0008                     	;# 
  2841  0009                     	;# 
  2842  000A                     	;# 
  2843  000B                     	;# 
  2844  000C                     	;# 
  2845  000D                     	;# 
  2846  000E                     	;# 
  2847  0012                     	;# 
  2848  0013                     	;# 
  2849  0014                     	;# 
  2850  0018                     	;# 
  2851  0019                     	;# 
  2852  001A                     	;# 
  2853  008C                     	;# 
  2854  008C                     	;# 
  2855  008D                     	;# 
  2856  008E                     	;# 
  2857  008E                     	;# 
  2858  008F                     	;# 
  2859  0090                     	;# 
  2860  0090                     	;# 
  2861  0091                     	;# 
  2862  0092                     	;# 
  2863  0092                     	;# 
  2864  0093                     	;# 
  2865  0094                     	;# 
  2866  0094                     	;# 
  2867  0095                     	;# 
  2868  0096                     	;# 
  2869  0096                     	;# 
  2870  0097                     	;# 
  2871  0098                     	;# 
  2872  0099                     	;# 
  2873  009A                     	;# 
  2874  009B                     	;# 
  2875  009B                     	;# 
  2876  009C                     	;# 
  2877  009D                     	;# 
  2878  009D                     	;# 
  2879  009E                     	;# 
  2880  009F                     	;# 
  2881  010C                     	;# 
  2882  010C                     	;# 
  2883  010D                     	;# 
  2884  010E                     	;# 
  2885  010F                     	;# 
  2886  010F                     	;# 
  2887  0110                     	;# 
  2888  0111                     	;# 
  2889  0112                     	;# 
  2890  0113                     	;# 
  2891  0114                     	;# 
  2892  0115                     	;# 
  2893  0116                     	;# 
  2894  0117                     	;# 
  2895  0118                     	;# 
  2896  0119                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  011A                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011C                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011D                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011E                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  018C                     	;# 
  2922  018D                     	;# 
  2923  018E                     	;# 
  2924  018F                     	;# 
  2925  0190                     	;# 
  2926  0191                     	;# 
  2927  0192                     	;# 
  2928  0196                     	;# 
  2929  0197                     	;# 
  2930  0198                     	;# 
  2931  0199                     	;# 
  2932  019A                     	;# 
  2933  019B                     	;# 
  2934  019C                     	;# 
  2935  020C                     	;# 
  2936  020D                     	;# 
  2937  020E                     	;# 
  2938  020E                     	;# 
  2939  020F                     	;# 
  2940  020F                     	;# 
  2941  0210                     	;# 
  2942  0210                     	;# 
  2943  0211                     	;# 
  2944  0211                     	;# 
  2945  0212                     	;# 
  2946  0213                     	;# 
  2947  0214                     	;# 
  2948  0214                     	;# 
  2949  0215                     	;# 
  2950  0215                     	;# 
  2951  0216                     	;# 
  2952  0216                     	;# 
  2953  0217                     	;# 
  2954  0217                     	;# 
  2955  0218                     	;# 
  2956  0219                     	;# 
  2957  021A                     	;# 
  2958  021A                     	;# 
  2959  021B                     	;# 
  2960  021B                     	;# 
  2961  021C                     	;# 
  2962  021C                     	;# 
  2963  021D                     	;# 
  2964  021D                     	;# 
  2965  021E                     	;# 
  2966  021F                     	;# 
  2967  028C                     	;# 
  2968  028C                     	;# 
  2969  028D                     	;# 
  2970  028D                     	;# 
  2971  028E                     	;# 
  2972  028F                     	;# 
  2973  0290                     	;# 
  2974  0291                     	;# 
  2975  0292                     	;# 
  2976  0292                     	;# 
  2977  0293                     	;# 
  2978  0293                     	;# 
  2979  0294                     	;# 
  2980  0295                     	;# 
  2981  0296                     	;# 
  2982  0297                     	;# 
  2983  0298                     	;# 
  2984  0298                     	;# 
  2985  0299                     	;# 
  2986  0299                     	;# 
  2987  029A                     	;# 
  2988  029B                     	;# 
  2989  029C                     	;# 
  2990  029D                     	;# 
  2991  029F                     	;# 
  2992  030C                     	;# 
  2993  030C                     	;# 
  2994  030D                     	;# 
  2995  030E                     	;# 
  2996  030F                     	;# 
  2997  0310                     	;# 
  2998  0310                     	;# 
  2999  0311                     	;# 
  3000  0312                     	;# 
  3001  0313                     	;# 
  3002  0314                     	;# 
  3003  0314                     	;# 
  3004  0315                     	;# 
  3005  0316                     	;# 
  3006  0317                     	;# 
  3007  0318                     	;# 
  3008  0318                     	;# 
  3009  0319                     	;# 
  3010  031A                     	;# 
  3011  031B                     	;# 
  3012  038C                     	;# 
  3013  038C                     	;# 
  3014  038D                     	;# 
  3015  038E                     	;# 
  3016  0390                     	;# 
  3017  0390                     	;# 
  3018  0391                     	;# 
  3019  0392                     	;# 
  3020  048C                     	;# 
  3021  048C                     	;# 
  3022  048D                     	;# 
  3023  048E                     	;# 
  3024  048F                     	;# 
  3025  048F                     	;# 
  3026  0490                     	;# 
  3027  0491                     	;# 
  3028  0492                     	;# 
  3029  0492                     	;# 
  3030  0493                     	;# 
  3031  0494                     	;# 
  3032  0495                     	;# 
  3033  0495                     	;# 
  3034  0496                     	;# 
  3035  0497                     	;# 
  3036  0498                     	;# 
  3037  0499                     	;# 
  3038  049A                     	;# 
  3039  049B                     	;# 
  3040  049C                     	;# 
  3041  049D                     	;# 
  3042  058C                     	;# 
  3043  058C                     	;# 
  3044  058D                     	;# 
  3045  058E                     	;# 
  3046  058F                     	;# 
  3047  058F                     	;# 
  3048  0590                     	;# 
  3049  0591                     	;# 
  3050  0592                     	;# 
  3051  0593                     	;# 
  3052  059C                     	;# 
  3053  059C                     	;# 
  3054  059D                     	;# 
  3055  059D                     	;# 
  3056  059E                     	;# 
  3057  059F                     	;# 
  3058  060C                     	;# 
  3059  060C                     	;# 
  3060  060D                     	;# 
  3061  060D                     	;# 
  3062  060E                     	;# 
  3063  060F                     	;# 
  3064  0610                     	;# 
  3065  0611                     	;# 
  3066  0612                     	;# 
  3067  0613                     	;# 
  3068  0614                     	;# 
  3069  0616                     	;# 
  3070  0616                     	;# 
  3071  0617                     	;# 
  3072  0617                     	;# 
  3073  0618                     	;# 
  3074  0619                     	;# 
  3075  061A                     	;# 
  3076  061B                     	;# 
  3077  061C                     	;# 
  3078  061D                     	;# 
  3079  061E                     	;# 
  3080  070C                     	;# 
  3081  070D                     	;# 
  3082  070E                     	;# 
  3083  070F                     	;# 
  3084  0710                     	;# 
  3085  0711                     	;# 
  3086  0712                     	;# 
  3087  0713                     	;# 
  3088  0714                     	;# 
  3089  0716                     	;# 
  3090  0717                     	;# 
  3091  0718                     	;# 
  3092  0719                     	;# 
  3093  071A                     	;# 
  3094  071B                     	;# 
  3095  071C                     	;# 
  3096  071D                     	;# 
  3097  071E                     	;# 
  3098  0796                     	;# 
  3099  0797                     	;# 
  3100  0798                     	;# 
  3101  0799                     	;# 
  3102  079A                     	;# 
  3103  079B                     	;# 
  3104  079C                     	;# 
  3105  079D                     	;# 
  3106  080C                     	;# 
  3107  080D                     	;# 
  3108  080E                     	;# 
  3109  080F                     	;# 
  3110  0810                     	;# 
  3111  0811                     	;# 
  3112  0812                     	;# 
  3113  0813                     	;# 
  3114  0814                     	;# 
  3115  081A                     	;# 
  3116  081A                     	;# 
  3117  081B                     	;# 
  3118  081C                     	;# 
  3119  081C                     	;# 
  3120  081D                     	;# 
  3121  081E                     	;# 
  3122  081F                     	;# 
  3123  088C                     	;# 
  3124  088D                     	;# 
  3125  088E                     	;# 
  3126  088F                     	;# 
  3127  0890                     	;# 
  3128  0891                     	;# 
  3129  0892                     	;# 
  3130  0893                     	;# 
  3131  0895                     	;# 
  3132  0896                     	;# 
  3133  0897                     	;# 
  3134  0898                     	;# 
  3135  0899                     	;# 
  3136  089A                     	;# 
  3137  089B                     	;# 
  3138  090C                     	;# 
  3139  090E                     	;# 
  3140  090F                     	;# 
  3141  091F                     	;# 
  3142  098F                     	;# 
  3143  098F                     	;# 
  3144  0990                     	;# 
  3145  0991                     	;# 
  3146  0992                     	;# 
  3147  0993                     	;# 
  3148  0994                     	;# 
  3149  0995                     	;# 
  3150  0996                     	;# 
  3151  0997                     	;# 
  3152  1E0F                     	;# 
  3153  1E10                     	;# 
  3154  1E11                     	;# 
  3155  1E12                     	;# 
  3156  1E13                     	;# 
  3157  1E14                     	;# 
  3158  1E15                     	;# 
  3159  1E16                     	;# 
  3160  1E17                     	;# 
  3161  1E18                     	;# 
  3162  1E19                     	;# 
  3163  1E1A                     	;# 
  3164  1E1B                     	;# 
  3165  1E1C                     	;# 
  3166  1E1D                     	;# 
  3167  1E1E                     	;# 
  3168  1E1F                     	;# 
  3169  1E20                     	;# 
  3170  1E21                     	;# 
  3171  1E22                     	;# 
  3172  1E23                     	;# 
  3173  1E24                     	;# 
  3174  1E25                     	;# 
  3175  1E26                     	;# 
  3176  1E27                     	;# 
  3177  1E28                     	;# 
  3178  1E29                     	;# 
  3179  1E2A                     	;# 
  3180  1E2B                     	;# 
  3181  1E2C                     	;# 
  3182  1E2D                     	;# 
  3183  1E2E                     	;# 
  3184  1E2F                     	;# 
  3185  1E30                     	;# 
  3186  1E31                     	;# 
  3187  1E32                     	;# 
  3188  1E33                     	;# 
  3189  1E34                     	;# 
  3190  1E35                     	;# 
  3191  1E36                     	;# 
  3192  1E37                     	;# 
  3193  1E8F                     	;# 
  3194  1E90                     	;# 
  3195  1E91                     	;# 
  3196  1E92                     	;# 
  3197  1E93                     	;# 
  3198  1E94                     	;# 
  3199  1E95                     	;# 
  3200  1E96                     	;# 
  3201  1E97                     	;# 
  3202  1E9C                     	;# 
  3203  1E9D                     	;# 
  3204  1E9E                     	;# 
  3205  1EA1                     	;# 
  3206  1EA2                     	;# 
  3207  1EA3                     	;# 
  3208  1EA4                     	;# 
  3209  1EA9                     	;# 
  3210  1EAA                     	;# 
  3211  1EB1                     	;# 
  3212  1EB2                     	;# 
  3213  1EB8                     	;# 
  3214  1EB9                     	;# 
  3215  1EBA                     	;# 
  3216  1EBB                     	;# 
  3217  1EBC                     	;# 
  3218  1EBD                     	;# 
  3219  1EBE                     	;# 
  3220  1EC3                     	;# 
  3221  1EC5                     	;# 
  3222  1EC6                     	;# 
  3223  1EC7                     	;# 
  3224  1EC8                     	;# 
  3225  1EC9                     	;# 
  3226  1ECA                     	;# 
  3227  1ECB                     	;# 
  3228  1ECB                     	;# 
  3229  1ECB                     	;# 
  3230  1ECC                     	;# 
  3231  1ECC                     	;# 
  3232  1ECC                     	;# 
  3233  1F10                     	;# 
  3234  1F11                     	;# 
  3235  1F12                     	;# 
  3236  1F14                     	;# 
  3237  1F15                     	;# 
  3238  1F1C                     	;# 
  3239  1F1D                     	;# 
  3240  1F1E                     	;# 
  3241  1F1F                     	;# 
  3242  1F20                     	;# 
  3243  1F21                     	;# 
  3244  1F22                     	;# 
  3245  1F23                     	;# 
  3246  1F24                     	;# 
  3247  1F25                     	;# 
  3248  1F26                     	;# 
  3249  1F27                     	;# 
  3250  1F38                     	;# 
  3251  1F39                     	;# 
  3252  1F3A                     	;# 
  3253  1F3B                     	;# 
  3254  1F3C                     	;# 
  3255  1F3D                     	;# 
  3256  1F3E                     	;# 
  3257  1F3F                     	;# 
  3258  1F43                     	;# 
  3259  1F44                     	;# 
  3260  1F45                     	;# 
  3261  1F46                     	;# 
  3262  1F47                     	;# 
  3263  1F48                     	;# 
  3264  1F49                     	;# 
  3265  1F4A                     	;# 
  3266  1F4E                     	;# 
  3267  1F4F                     	;# 
  3268  1F50                     	;# 
  3269  1F51                     	;# 
  3270  1F52                     	;# 
  3271  1F53                     	;# 
  3272  1F54                     	;# 
  3273  1F55                     	;# 
  3274  1FE4                     	;# 
  3275  1FE5                     	;# 
  3276  1FE6                     	;# 
  3277  1FE7                     	;# 
  3278  1FE8                     	;# 
  3279  1FE8                     	;# 
  3280  1FE9                     	;# 
  3281  1FEA                     	;# 
  3282  1FEB                     	;# 
  3283  1FED                     	;# 
  3284  1FEE                     	;# 
  3285  1FEF                     	;# 
  3286  0000                     	;# 
  3287  0001                     	;# 
  3288  0002                     	;# 
  3289  0003                     	;# 
  3290  0004                     	;# 
  3291  0005                     	;# 
  3292  0006                     	;# 
  3293  0007                     	;# 
  3294  0008                     	;# 
  3295  0009                     	;# 
  3296  000A                     	;# 
  3297  000B                     	;# 
  3298  000C                     	;# 
  3299  000D                     	;# 
  3300  000E                     	;# 
  3301  0012                     	;# 
  3302  0013                     	;# 
  3303  0014                     	;# 
  3304  0018                     	;# 
  3305  0019                     	;# 
  3306  001A                     	;# 
  3307  008C                     	;# 
  3308  008C                     	;# 
  3309  008D                     	;# 
  3310  008E                     	;# 
  3311  008E                     	;# 
  3312  008F                     	;# 
  3313  0090                     	;# 
  3314  0090                     	;# 
  3315  0091                     	;# 
  3316  0092                     	;# 
  3317  0092                     	;# 
  3318  0093                     	;# 
  3319  0094                     	;# 
  3320  0094                     	;# 
  3321  0095                     	;# 
  3322  0096                     	;# 
  3323  0096                     	;# 
  3324  0097                     	;# 
  3325  0098                     	;# 
  3326  0099                     	;# 
  3327  009A                     	;# 
  3328  009B                     	;# 
  3329  009B                     	;# 
  3330  009C                     	;# 
  3331  009D                     	;# 
  3332  009D                     	;# 
  3333  009E                     	;# 
  3334  009F                     	;# 
  3335  010C                     	;# 
  3336  010C                     	;# 
  3337  010D                     	;# 
  3338  010E                     	;# 
  3339  010F                     	;# 
  3340  010F                     	;# 
  3341  0110                     	;# 
  3342  0111                     	;# 
  3343  0112                     	;# 
  3344  0113                     	;# 
  3345  0114                     	;# 
  3346  0115                     	;# 
  3347  0116                     	;# 
  3348  0117                     	;# 
  3349  0118                     	;# 
  3350  0119                     	;# 
  3351  0119                     	;# 
  3352  0119                     	;# 
  3353  011A                     	;# 
  3354  011A                     	;# 
  3355  011A                     	;# 
  3356  011B                     	;# 
  3357  011B                     	;# 
  3358  011B                     	;# 
  3359  011B                     	;# 
  3360  011B                     	;# 
  3361  011C                     	;# 
  3362  011C                     	;# 
  3363  011C                     	;# 
  3364  011D                     	;# 
  3365  011D                     	;# 
  3366  011D                     	;# 
  3367  011E                     	;# 
  3368  011E                     	;# 
  3369  011E                     	;# 
  3370  011F                     	;# 
  3371  011F                     	;# 
  3372  011F                     	;# 
  3373  011F                     	;# 
  3374  011F                     	;# 
  3375  018C                     	;# 
  3376  018D                     	;# 
  3377  018E                     	;# 
  3378  018F                     	;# 
  3379  0190                     	;# 
  3380  0191                     	;# 
  3381  0192                     	;# 
  3382  0196                     	;# 
  3383  0197                     	;# 
  3384  0198                     	;# 
  3385  0199                     	;# 
  3386  019A                     	;# 
  3387  019B                     	;# 
  3388  019C                     	;# 
  3389  020C                     	;# 
  3390  020D                     	;# 
  3391  020E                     	;# 
  3392  020E                     	;# 
  3393  020F                     	;# 
  3394  020F                     	;# 
  3395  0210                     	;# 
  3396  0210                     	;# 
  3397  0211                     	;# 
  3398  0211                     	;# 
  3399  0212                     	;# 
  3400  0213                     	;# 
  3401  0214                     	;# 
  3402  0214                     	;# 
  3403  0215                     	;# 
  3404  0215                     	;# 
  3405  0216                     	;# 
  3406  0216                     	;# 
  3407  0217                     	;# 
  3408  0217                     	;# 
  3409  0218                     	;# 
  3410  0219                     	;# 
  3411  021A                     	;# 
  3412  021A                     	;# 
  3413  021B                     	;# 
  3414  021B                     	;# 
  3415  021C                     	;# 
  3416  021C                     	;# 
  3417  021D                     	;# 
  3418  021D                     	;# 
  3419  021E                     	;# 
  3420  021F                     	;# 
  3421  028C                     	;# 
  3422  028C                     	;# 
  3423  028D                     	;# 
  3424  028D                     	;# 
  3425  028E                     	;# 
  3426  028F                     	;# 
  3427  0290                     	;# 
  3428  0291                     	;# 
  3429  0292                     	;# 
  3430  0292                     	;# 
  3431  0293                     	;# 
  3432  0293                     	;# 
  3433  0294                     	;# 
  3434  0295                     	;# 
  3435  0296                     	;# 
  3436  0297                     	;# 
  3437  0298                     	;# 
  3438  0298                     	;# 
  3439  0299                     	;# 
  3440  0299                     	;# 
  3441  029A                     	;# 
  3442  029B                     	;# 
  3443  029C                     	;# 
  3444  029D                     	;# 
  3445  029F                     	;# 
  3446  030C                     	;# 
  3447  030C                     	;# 
  3448  030D                     	;# 
  3449  030E                     	;# 
  3450  030F                     	;# 
  3451  0310                     	;# 
  3452  0310                     	;# 
  3453  0311                     	;# 
  3454  0312                     	;# 
  3455  0313                     	;# 
  3456  0314                     	;# 
  3457  0314                     	;# 
  3458  0315                     	;# 
  3459  0316                     	;# 
  3460  0317                     	;# 
  3461  0318                     	;# 
  3462  0318                     	;# 
  3463  0319                     	;# 
  3464  031A                     	;# 
  3465  031B                     	;# 
  3466  038C                     	;# 
  3467  038C                     	;# 
  3468  038D                     	;# 
  3469  038E                     	;# 
  3470  0390                     	;# 
  3471  0390                     	;# 
  3472  0391                     	;# 
  3473  0392                     	;# 
  3474  048C                     	;# 
  3475  048C                     	;# 
  3476  048D                     	;# 
  3477  048E                     	;# 
  3478  048F                     	;# 
  3479  048F                     	;# 
  3480  0490                     	;# 
  3481  0491                     	;# 
  3482  0492                     	;# 
  3483  0492                     	;# 
  3484  0493                     	;# 
  3485  0494                     	;# 
  3486  0495                     	;# 
  3487  0495                     	;# 
  3488  0496                     	;# 
  3489  0497                     	;# 
  3490  0498                     	;# 
  3491  0499                     	;# 
  3492  049A                     	;# 
  3493  049B                     	;# 
  3494  049C                     	;# 
  3495  049D                     	;# 
  3496  058C                     	;# 
  3497  058C                     	;# 
  3498  058D                     	;# 
  3499  058E                     	;# 
  3500  058F                     	;# 
  3501  058F                     	;# 
  3502  0590                     	;# 
  3503  0591                     	;# 
  3504  0592                     	;# 
  3505  0593                     	;# 
  3506  059C                     	;# 
  3507  059C                     	;# 
  3508  059D                     	;# 
  3509  059D                     	;# 
  3510  059E                     	;# 
  3511  059F                     	;# 
  3512  060C                     	;# 
  3513  060C                     	;# 
  3514  060D                     	;# 
  3515  060D                     	;# 
  3516  060E                     	;# 
  3517  060F                     	;# 
  3518  0610                     	;# 
  3519  0611                     	;# 
  3520  0612                     	;# 
  3521  0613                     	;# 
  3522  0614                     	;# 
  3523  0616                     	;# 
  3524  0616                     	;# 
  3525  0617                     	;# 
  3526  0617                     	;# 
  3527  0618                     	;# 
  3528  0619                     	;# 
  3529  061A                     	;# 
  3530  061B                     	;# 
  3531  061C                     	;# 
  3532  061D                     	;# 
  3533  061E                     	;# 
  3534  070C                     	;# 
  3535  070D                     	;# 
  3536  070E                     	;# 
  3537  070F                     	;# 
  3538  0710                     	;# 
  3539  0711                     	;# 
  3540  0712                     	;# 
  3541  0713                     	;# 
  3542  0714                     	;# 
  3543  0716                     	;# 
  3544  0717                     	;# 
  3545  0718                     	;# 
  3546  0719                     	;# 
  3547  071A                     	;# 
  3548  071B                     	;# 
  3549  071C                     	;# 
  3550  071D                     	;# 
  3551  071E                     	;# 
  3552  0796                     	;# 
  3553  0797                     	;# 
  3554  0798                     	;# 
  3555  0799                     	;# 
  3556  079A                     	;# 
  3557  079B                     	;# 
  3558  079C                     	;# 
  3559  079D                     	;# 
  3560  080C                     	;# 
  3561  080D                     	;# 
  3562  080E                     	;# 
  3563  080F                     	;# 
  3564  0810                     	;# 
  3565  0811                     	;# 
  3566  0812                     	;# 
  3567  0813                     	;# 
  3568  0814                     	;# 
  3569  081A                     	;# 
  3570  081A                     	;# 
  3571  081B                     	;# 
  3572  081C                     	;# 
  3573  081C                     	;# 
  3574  081D                     	;# 
  3575  081E                     	;# 
  3576  081F                     	;# 
  3577  088C                     	;# 
  3578  088D                     	;# 
  3579  088E                     	;# 
  3580  088F                     	;# 
  3581  0890                     	;# 
  3582  0891                     	;# 
  3583  0892                     	;# 
  3584  0893                     	;# 
  3585  0895                     	;# 
  3586  0896                     	;# 
  3587  0897                     	;# 
  3588  0898                     	;# 
  3589  0899                     	;# 
  3590  089A                     	;# 
  3591  089B                     	;# 
  3592  090C                     	;# 
  3593  090E                     	;# 
  3594  090F                     	;# 
  3595  091F                     	;# 
  3596  098F                     	;# 
  3597  098F                     	;# 
  3598  0990                     	;# 
  3599  0991                     	;# 
  3600  0992                     	;# 
  3601  0993                     	;# 
  3602  0994                     	;# 
  3603  0995                     	;# 
  3604  0996                     	;# 
  3605  0997                     	;# 
  3606  1E0F                     	;# 
  3607  1E10                     	;# 
  3608  1E11                     	;# 
  3609  1E12                     	;# 
  3610  1E13                     	;# 
  3611  1E14                     	;# 
  3612  1E15                     	;# 
  3613  1E16                     	;# 
  3614  1E17                     	;# 
  3615  1E18                     	;# 
  3616  1E19                     	;# 
  3617  1E1A                     	;# 
  3618  1E1B                     	;# 
  3619  1E1C                     	;# 
  3620  1E1D                     	;# 
  3621  1E1E                     	;# 
  3622  1E1F                     	;# 
  3623  1E20                     	;# 
  3624  1E21                     	;# 
  3625  1E22                     	;# 
  3626  1E23                     	;# 
  3627  1E24                     	;# 
  3628  1E25                     	;# 
  3629  1E26                     	;# 
  3630  1E27                     	;# 
  3631  1E28                     	;# 
  3632  1E29                     	;# 
  3633  1E2A                     	;# 
  3634  1E2B                     	;# 
  3635  1E2C                     	;# 
  3636  1E2D                     	;# 
  3637  1E2E                     	;# 
  3638  1E2F                     	;# 
  3639  1E30                     	;# 
  3640  1E31                     	;# 
  3641  1E32                     	;# 
  3642  1E33                     	;# 
  3643  1E34                     	;# 
  3644  1E35                     	;# 
  3645  1E36                     	;# 
  3646  1E37                     	;# 
  3647  1E8F                     	;# 
  3648  1E90                     	;# 
  3649  1E91                     	;# 
  3650  1E92                     	;# 
  3651  1E93                     	;# 
  3652  1E94                     	;# 
  3653  1E95                     	;# 
  3654  1E96                     	;# 
  3655  1E97                     	;# 
  3656  1E9C                     	;# 
  3657  1E9D                     	;# 
  3658  1E9E                     	;# 
  3659  1EA1                     	;# 
  3660  1EA2                     	;# 
  3661  1EA3                     	;# 
  3662  1EA4                     	;# 
  3663  1EA9                     	;# 
  3664  1EAA                     	;# 
  3665  1EB1                     	;# 
  3666  1EB2                     	;# 
  3667  1EB8                     	;# 
  3668  1EB9                     	;# 
  3669  1EBA                     	;# 
  3670  1EBB                     	;# 
  3671  1EBC                     	;# 
  3672  1EBD                     	;# 
  3673  1EBE                     	;# 
  3674  1EC3                     	;# 
  3675  1EC5                     	;# 
  3676  1EC6                     	;# 
  3677  1EC7                     	;# 
  3678  1EC8                     	;# 
  3679  1EC9                     	;# 
  3680  1ECA                     	;# 
  3681  1ECB                     	;# 
  3682  1ECB                     	;# 
  3683  1ECB                     	;# 
  3684  1ECC                     	;# 
  3685  1ECC                     	;# 
  3686  1ECC                     	;# 
  3687  1F10                     	;# 
  3688  1F11                     	;# 
  3689  1F12                     	;# 
  3690  1F14                     	;# 
  3691  1F15                     	;# 
  3692  1F1C                     	;# 
  3693  1F1D                     	;# 
  3694  1F1E                     	;# 
  3695  1F1F                     	;# 
  3696  1F20                     	;# 
  3697  1F21                     	;# 
  3698  1F22                     	;# 
  3699  1F23                     	;# 
  3700  1F24                     	;# 
  3701  1F25                     	;# 
  3702  1F26                     	;# 
  3703  1F27                     	;# 
  3704  1F38                     	;# 
  3705  1F39                     	;# 
  3706  1F3A                     	;# 
  3707  1F3B                     	;# 
  3708  1F3C                     	;# 
  3709  1F3D                     	;# 
  3710  1F3E                     	;# 
  3711  1F3F                     	;# 
  3712  1F43                     	;# 
  3713  1F44                     	;# 
  3714  1F45                     	;# 
  3715  1F46                     	;# 
  3716  1F47                     	;# 
  3717  1F48                     	;# 
  3718  1F49                     	;# 
  3719  1F4A                     	;# 
  3720  1F4E                     	;# 
  3721  1F4F                     	;# 
  3722  1F50                     	;# 
  3723  1F51                     	;# 
  3724  1F52                     	;# 
  3725  1F53                     	;# 
  3726  1F54                     	;# 
  3727  1F55                     	;# 
  3728  1FE4                     	;# 
  3729  1FE5                     	;# 
  3730  1FE6                     	;# 
  3731  1FE7                     	;# 
  3732  1FE8                     	;# 
  3733  1FE8                     	;# 
  3734  1FE9                     	;# 
  3735  1FEA                     	;# 
  3736  1FEB                     	;# 
  3737  1FED                     	;# 
  3738  1FEE                     	;# 
  3739  1FEF                     	;# 
  3740                           
  3741                           	psect	idataBANK1
  3742  0DB5                     __pidataBANK1:
  3743                           
  3744                           ;initializer for _periodoE
  3745  0DB5  3401               	retlw	1
  3746  0DB6  3400               	retlw	0
  3747                           
  3748                           ;initializer for _periodoD
  3749  0DB7  3401               	retlw	1
  3750  0DB8  3400               	retlw	0
  3751                           
  3752                           ;initializer for _periodoC
  3753  0DB9  3401               	retlw	1
  3754  0DBA  3400               	retlw	0
  3755                           
  3756                           ;initializer for _periodoB
  3757  0DBB  3401               	retlw	1
  3758  0DBC  3400               	retlw	0
  3759                           
  3760                           ;initializer for _periodoA
  3761  0DBD  3401               	retlw	1
  3762  0DBE  3400               	retlw	0
  3763                           
  3764                           	psect	nvBANK1
  3765  00CE                     __pnvBANK1:
  3766  00CE                     _TMR0_InterruptHandler:
  3767  00CE                     	ds	2
  3768  00D0                     _EUSART1_ErrorHandler:
  3769  00D0                     	ds	2
  3770  00D2                     _EUSART1_OverrunErrorHandler:
  3771  00D2                     	ds	2
  3772  00D4                     _EUSART1_FramingErrorHandler:
  3773  00D4                     	ds	2
  3774  00D6                     _EUSART1_RxDefaultInterruptHandler:
  3775  00D6                     	ds	2
  3776  000B                     _INTCONbits	set	11
  3777  0014                     _TRISC	set	20
  3778  0013                     _TRISB	set	19
  3779  0012                     _TRISA	set	18
  3780  001A                     _LATC	set	26
  3781  0019                     _LATB	set	25
  3782  0018                     _LATA	set	24
  3783  0090                     _ADERRL	set	144
  3784  0091                     _ADERRH	set	145
  3785  009B                     _ADPREVL	set	155
  3786  009C                     _ADPREVH	set	156
  3787  0094                     _ADFLTRL	set	148
  3788  0095                     _ADFLTRH	set	149
  3789  0096                     _ADACCL	set	150
  3790  0097                     _ADACCH	set	151
  3791  0099                     _ADCNT	set	153
  3792  009D                     _ADRESL	set	157
  3793  009E                     _ADRESH	set	158
  3794  009F                     _ADPCH	set	159
  3795  009A                     _ADRPT	set	154
  3796  0098                     _ADACCU	set	152
  3797  0093                     _ADSTPTH	set	147
  3798  0092                     _ADSTPTL	set	146
  3799  008F                     _ADUTHH	set	143
  3800  008E                     _ADUTHL	set	142
  3801  008D                     _ADLTHH	set	141
  3802  008C                     _ADLTHL	set	140
  3803  0112                     _ADCON1bits	set	274
  3804  0115                     _ADSTATbits	set	277
  3805  0113                     _ADCON2bits	set	275
  3806  0114                     _ADCON3bits	set	276
  3807  0111                     _ADCON0bits	set	273
  3808  0111                     _ADCON0	set	273
  3809  0118                     _ADCLK	set	280
  3810  0117                     _ADACT	set	279
  3811  0116                     _ADREF	set	278
  3812  0115                     _ADSTAT	set	277
  3813  0114                     _ADCON3	set	276
  3814  0113                     _ADCON2	set	275
  3815  0112                     _ADCON1	set	274
  3816  0110                     _ADPREH	set	272
  3817  010F                     _ADPREL	set	271
  3818  010E                     _ADCAP	set	270
  3819  010D                     _ADACQH	set	269
  3820  010C                     _ADACQL	set	268
  3821  0119                     _RC1REG	set	281
  3822  011D                     _RC1STAbits	set	285
  3823  011A                     _TX1REG	set	282
  3824  011E                     _TX1STAbits	set	286
  3825  011C                     _SP1BRGH	set	284
  3826  011B                     _SP1BRGL	set	283
  3827  011E                     _TX1STA	set	286
  3828  011D                     _RC1STA	set	285
  3829  011F                     _BAUD1CON	set	287
  3830  059E                     _T0CON0bits	set	1438
  3831  059E                     _T0CON0	set	1438
  3832  059C                     _TMR0L	set	1436
  3833  059D                     _TMR0H	set	1437
  3834  059F                     _T0CON1	set	1439
  3835  070C                     _PIR0bits	set	1804
  3836  0716                     _PIE0bits	set	1814
  3837  070F                     _PIR3bits	set	1807
  3838  0719                     _PIE3bits	set	1817
  3839  079D                     _PMD7	set	1949
  3840  079C                     _PMD6	set	1948
  3841  079B                     _PMD5	set	1947
  3842  079A                     _PMD4	set	1946
  3843  0799                     _PMD3	set	1945
  3844  0798                     _PMD2	set	1944
  3845  0797                     _PMD1	set	1943
  3846  0796                     _PMD0	set	1942
  3847  0892                     _OSCTUNE	set	2194
  3848  0893                     _OSCFRQ	set	2195
  3849  0891                     _OSCEN	set	2193
  3850  088F                     _OSCCON3	set	2191
  3851  088D                     _OSCCON1	set	2189
  3852  1ECB                     _RX1DTPPS	set	7883
  3853  1F1C                     _RB4PPS	set	7964
  3854  1F52                     _INLVLC	set	8018
  3855  1F47                     _INLVLB	set	8007
  3856  1F3C                     _INLVLA	set	7996
  3857  1F51                     _SLRCONC	set	8017
  3858  1F46                     _SLRCONB	set	8006
  3859  1F3B                     _SLRCONA	set	7995
  3860  1F50                     _ODCONC	set	8016
  3861  1F45                     _ODCONB	set	8005
  3862  1F3A                     _ODCONA	set	7994
  3863  1F4F                     _WPUC	set	8015
  3864  1F39                     _WPUA	set	7993
  3865  1F44                     _WPUB	set	8004
  3866  1F38                     _ANSELA	set	7992
  3867  1F43                     _ANSELB	set	8003
  3868  1F4E                     _ANSELC	set	8014
  3869                           
  3870                           	psect	stringtext1
  3871  1000                     __pstringtext1:
  3872  1000                     STR_1:
  3873  1000  3449               	retlw	73	;'I'
  3874  1001  344E               	retlw	78	;'N'
  3875  1002  3449               	retlw	73	;'I'
  3876  1003  3443               	retlw	67	;'C'
  3877  1004  3449               	retlw	73	;'I'
  3878  1005  344F               	retlw	79	;'O'
  3879  1006  340A               	retlw	10
  3880  1007  340D               	retlw	13
  3881  1008  3400               	retlw	0
  3882                           
  3883                           	psect	stringtext2
  3884  1009                     __pstringtext2:
  3885  1009                     STR_2:
  3886  1009  3441               	retlw	65	;'A'
  3887  100A  3425               	retlw	37	;'%'
  3888  100B  3464               	retlw	100	;'d'
  3889  100C  340D               	retlw	13
  3890  100D  340A               	retlw	10
  3891  100E  3400               	retlw	0
  3892                           
  3893                           	psect	stringtext3
  3894  100F                     __pstringtext3:
  3895  100F                     STR_3:
  3896  100F  3442               	retlw	66	;'B'
  3897  1010  3425               	retlw	37	;'%'
  3898  1011  3464               	retlw	100	;'d'
  3899  1012  340D               	retlw	13
  3900  1013  340A               	retlw	10
  3901  1014  3400               	retlw	0
  3902                           
  3903                           	psect	stringtext4
  3904  1015                     __pstringtext4:
  3905  1015                     STR_4:
  3906  1015  3443               	retlw	67	;'C'
  3907  1016  3425               	retlw	37	;'%'
  3908  1017  3464               	retlw	100	;'d'
  3909  1018  340D               	retlw	13
  3910  1019  340A               	retlw	10
  3911  101A  3400               	retlw	0
  3912                           
  3913                           	psect	stringtext5
  3914  101B                     __pstringtext5:
  3915  101B                     STR_5:
  3916  101B  3444               	retlw	68	;'D'
  3917  101C  3425               	retlw	37	;'%'
  3918  101D  3464               	retlw	100	;'d'
  3919  101E  340D               	retlw	13
  3920  101F  340A               	retlw	10
  3921  1020  3400               	retlw	0
  3922                           
  3923                           	psect	stringtext6
  3924  1021                     __pstringtext6:
  3925  1021                     STR_6:
  3926  1021  3445               	retlw	69	;'E'
  3927  1022  3425               	retlw	37	;'%'
  3928  1023  3464               	retlw	100	;'d'
  3929  1024  340D               	retlw	13
  3930  1025  340A               	retlw	10
  3931  1026  3400               	retlw	0
  3932                           
  3933                           	psect	stringtext7
  3934  0000                     __pstringtext7:
  3935                           
  3936                           	psect	cinit
  3937  002A                     start_initialization:	
  3938                           ; #config settings
  3939                           
  3940  002A                     __initialization:
  3941                           
  3942                           ; Initialize objects allocated to BANK1
  3943  002A  30B5               	movlw	low __pidataBANK1
  3944  002B  0084               	movwf	4
  3945  002C  308D               	movlw	(high __pidataBANK1)| (0+128)
  3946  002D  0085               	movwf	5
  3947  002E  30D8               	movlw	low __pdataBANK1
  3948  002F  0086               	movwf	6
  3949  0030  3000               	movlw	high __pdataBANK1
  3950  0031  0087               	movwf	7
  3951  0032  300A               	movlw	10
  3952  0033  318D  257B  3180   	fcall	init_ram
  3953                           
  3954                           ; Clear objects allocated to COMMON
  3955  0036  01FA               	clrf	__pbssCOMMON& (0+127)
  3956  0037  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3957  0038  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  3958  0039  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  3959                           
  3960                           ; Clear objects allocated to BANK1
  3961  003A  30A0               	movlw	low __pbssBANK1
  3962  003B  0084               	movwf	4
  3963  003C  3000               	movlw	high __pbssBANK1
  3964  003D  0085               	movwf	5
  3965  003E  302E               	movlw	46
  3966  003F  318D  2575  3180   	fcall	clear_ram0
  3967                           
  3968                           ; Clear objects allocated to BANK2
  3969  0042  3020               	movlw	low __pbssBANK2
  3970  0043  0084               	movwf	4
  3971  0044  3001               	movlw	high __pbssBANK2
  3972  0045  0085               	movwf	5
  3973  0046  3020               	movlw	32
  3974  0047  318D  2575  3180   	fcall	clear_ram0
  3975  004A                     end_of_initialization:	
  3976                           ;End of C runtime variable initialization code
  3977                           
  3978  004A                     __end_of__initialization:
  3979  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3980  004B  0140               	movlb	0
  3981  004C  3182  2AC2         	ljmp	_main	;jump to C main() function
  3982                           
  3983                           	psect	bssCOMMON
  3984  007A                     __pbssCOMMON:
  3985  007A                     _rxData:
  3986  007A                     	ds	1
  3987  007B                     _eusart1RxCount:
  3988  007B                     	ds	1
  3989  007C                     _eusart1RxTail:
  3990  007C                     	ds	1
  3991  007D                     _eusart1RxHead:
  3992  007D                     	ds	1
  3993                           
  3994                           	psect	bssBANK1
  3995  00A0                     __pbssBANK1:
  3996  00A0                     _eusart1RxStatusBuffer:
  3997  00A0                     	ds	8
  3998  00A8                     _eusart1RxBuffer:
  3999  00A8                     	ds	8
  4000  00B0                     _nout:
  4001  00B0                     	ds	2
  4002  00B2                     _width:
  4003  00B2                     	ds	2
  4004  00B4                     _prec:
  4005  00B4                     	ds	2
  4006  00B6                     _flags:
  4007  00B6                     	ds	2
  4008  00B8                     _cont1segE:
  4009  00B8                     	ds	2
  4010  00BA                     _cont1segD:
  4011  00BA                     	ds	2
  4012  00BC                     _cont1segC:
  4013  00BC                     	ds	2
  4014  00BE                     _cont1segB:
  4015  00BE                     	ds	2
  4016  00C0                     _cont1segA:
  4017  00C0                     	ds	2
  4018  00C2                     TMR0_ISR@CountCallBack:
  4019  00C2                     	ds	2
  4020  00C4                     _i:
  4021  00C4                     	ds	1
  4022  00C5                     _eusart1RxLastError:
  4023  00C5                     	ds	1
  4024  00C6                     _strNum:
  4025  00C6                     	ds	8
  4026                           
  4027                           	psect	dataBANK1
  4028  00D8                     __pdataBANK1:
  4029  00D8                     _periodoE:
  4030  00D8                     	ds	2
  4031  00DA                     _periodoD:
  4032  00DA                     	ds	2
  4033  00DC                     _periodoC:
  4034  00DC                     	ds	2
  4035  00DE                     _periodoB:
  4036  00DE                     	ds	2
  4037  00E0                     _periodoA:
  4038  00E0                     	ds	2
  4039                           
  4040                           	psect	bssBANK2
  4041  0120                     __pbssBANK2:
  4042  0120                     _dbuf:
  4043  0120                     	ds	32
  4044                           
  4045                           	psect	inittext
  4046  0D7B                     init_ram:
  4047  0D7B  00FE               	movwf	btemp
  4048  0D7C                     initloop:
  4049  0D7C  0012               	moviw fsr0++
  4050  0D7D  001E               	movwi fsr1++
  4051  0D7E  0BFE               	decfsz	btemp,f
  4052  0D7F  2D7C               	goto	initloop
  4053  0D80  3400               	retlw	0
  4054                           
  4055                           	psect	clrtext
  4056  0D75                     clear_ram0:	
  4057                           ;	Called with FSR0 containing the base address, and
  4058                           ;	WREG with the size to clear
  4059                           
  4060  0D75  0064               	clrwdt	;clear the watchdog before getting into this loop
  4061  0D76                     clrloop0:
  4062  0D76  0180               	clrf	0	;clear RAM location pointed to by FSR
  4063  0D77  3101               	addfsr 0,1
  4064  0D78  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4065  0D79  2D76               	goto	clrloop0	;have we reached the end yet?
  4066  0D7A  3400               	retlw	0	;all done for this memory range, return
  4067                           
  4068                           	psect	cstackBANK1
  4069  00E2                     __pcstackBANK1:
  4070  00E2                     ?_printf:
  4071  00E2                     printf@fmt:	
  4072                           ; 2 bytes @ 0x0
  4073                           
  4074                           
  4075                           ; 2 bytes @ 0x0
  4076  00E2                     	ds	4
  4077  00E6                     ??_printf:
  4078                           
  4079                           ; 1 bytes @ 0x4
  4080  00E6                     	ds	3
  4081  00E9                     printf@ap:
  4082                           
  4083                           ; 1 bytes @ 0x7
  4084  00E9                     	ds	1
  4085  00EA                     main@convertedValue:
  4086                           
  4087                           ; 2 bytes @ 0x8
  4088  00EA                     	ds	2
  4089                           
  4090                           	psect	cstackCOMMON
  4091  0070                     __pcstackCOMMON:
  4092  0070                     ?_PMD_Initialize:
  4093  0070                     ?_PIN_MANAGER_Initialize:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  0070                     ?_OSCILLATOR_Initialize:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0070                     ?_ADCC_Initialize:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0070                     ?_TMR0_Initialize:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0070                     ?_EUSART1_Initialize:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0070                     ?_EUSART1_Receive_ISR:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0070                     ?_EUSART1_DefaultErrorHandler:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0070                     ?_EUSART1_RxDataHandler:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ??_EUSART1_RxDataHandler:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ?_TMR0_ISR:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ??_TMR0_ISR:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ?_TMR0_DefaultInterruptHandler:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     ??_TMR0_DefaultInterruptHandler:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     ?_TMR0_CallBack:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147  0070                     ??_TMR0_CallBack:	
  4148                           ; 1 bytes @ 0x0
  4149                           
  4150  0070                     ?_miTimer0ISR:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153  0070                     ??_miTimer0ISR:	
  4154                           ; 1 bytes @ 0x0
  4155                           
  4156  0070                     ?_rxSerialISR:	
  4157                           ; 1 bytes @ 0x0
  4158                           
  4159  0070                     ?_memset:	
  4160                           ; 1 bytes @ 0x0
  4161                           
  4162  0070                     ?_SYSTEM_Initialize:	
  4163                           ; 1 bytes @ 0x0
  4164                           
  4165  0070                     ?_EUSART1_is_rx_ready:	
  4166                           ; 1 bytes @ 0x0
  4167                           
  4168  0070                     ??_EUSART1_is_rx_ready:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171  0070                     ?_EUSART1_Read:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174  0070                     ??_EUSART1_Read:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177  0070                     ?_EUSART1_Write:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180  0070                     ?_putch:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183  0070                     ?_ADCC_StartConversion:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186  0070                     ?_ADCC_IsConversionDone:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189  0070                     ?_INTERRUPT_InterruptManager:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192  0070                     ?_main:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195  0070                     ?_isspace:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198  0070                     ?_isdigit:	
  4199                           ; 2 bytes @ 0x0
  4200                           
  4201  0070                     ?___wmul:	
  4202                           ; 2 bytes @ 0x0
  4203                           
  4204  0070                     ___wmul@multiplier:	
  4205                           ; 2 bytes @ 0x0
  4206                           
  4207  0070                     isdigit@c:	
  4208                           ; 2 bytes @ 0x0
  4209                           
  4210  0070                     isspace@c:	
  4211                           ; 2 bytes @ 0x0
  4212                           
  4213  0070                     memset@c:	
  4214                           ; 2 bytes @ 0x0
  4215                           
  4216                           
  4217                           ; 2 bytes @ 0x0
  4218  0070                     	ds	1
  4219  0071                     ??_EUSART1_Receive_ISR:
  4220  0071                     ??_EUSART1_DefaultErrorHandler:	
  4221                           ; 1 bytes @ 0x1
  4222                           
  4223  0071                     EUSART1_Read@readValue:	
  4224                           ; 1 bytes @ 0x1
  4225                           
  4226                           
  4227                           ; 1 bytes @ 0x1
  4228  0071                     	ds	1
  4229  0072                     ??_rxSerialISR:
  4230  0072                     ??_isspace:	
  4231                           ; 1 bytes @ 0x2
  4232                           
  4233  0072                     ??_isdigit:	
  4234                           ; 1 bytes @ 0x2
  4235                           
  4236  0072                     ___wmul@multiplicand:	
  4237                           ; 1 bytes @ 0x2
  4238                           
  4239  0072                     memset@n:	
  4240                           ; 2 bytes @ 0x2
  4241                           
  4242                           
  4243                           ; 2 bytes @ 0x2
  4244  0072                     	ds	2
  4245  0074                     ??_PMD_Initialize:
  4246  0074                     ??_PIN_MANAGER_Initialize:	
  4247                           ; 1 bytes @ 0x4
  4248                           
  4249  0074                     ??_OSCILLATOR_Initialize:	
  4250                           ; 1 bytes @ 0x4
  4251                           
  4252  0074                     ??_ADCC_Initialize:	
  4253                           ; 1 bytes @ 0x4
  4254                           
  4255  0074                     ?_EUSART1_SetRxInterruptHandler:	
  4256                           ; 1 bytes @ 0x4
  4257                           
  4258  0074                     ?_EUSART1_SetFramingErrorHandler:	
  4259                           ; 1 bytes @ 0x4
  4260                           
  4261  0074                     ?_EUSART1_SetOverrunErrorHandler:	
  4262                           ; 1 bytes @ 0x4
  4263                           
  4264  0074                     ?_EUSART1_SetErrorHandler:	
  4265                           ; 1 bytes @ 0x4
  4266                           
  4267  0074                     ?_TMR0_SetInterruptHandler:	
  4268                           ; 1 bytes @ 0x4
  4269                           
  4270  0074                     ??_memset:	
  4271                           ; 1 bytes @ 0x4
  4272                           
  4273  0074                     ??_EUSART1_Write:	
  4274                           ; 1 bytes @ 0x4
  4275                           
  4276  0074                     ??_ADCC_StartConversion:	
  4277                           ; 1 bytes @ 0x4
  4278                           
  4279  0074                     ??_ADCC_IsConversionDone:	
  4280                           ; 1 bytes @ 0x4
  4281                           
  4282  0074                     ??_INTERRUPT_InterruptManager:	
  4283                           ; 1 bytes @ 0x4
  4284                           
  4285  0074                     ??___wmul:	
  4286                           ; 1 bytes @ 0x4
  4287                           
  4288  0074                     ??___aodiv:	
  4289                           ; 1 bytes @ 0x4
  4290                           
  4291  0074                     ??___aomod:	
  4292                           ; 1 bytes @ 0x4
  4293                           
  4294  0074                     ?_strlen:	
  4295                           ; 1 bytes @ 0x4
  4296                           
  4297  0074                     ?_ADCC_GetConversionResult:	
  4298                           ; 2 bytes @ 0x4
  4299                           
  4300  0074                     EUSART1_Write@txData:	
  4301                           ; 2 bytes @ 0x4
  4302                           
  4303  0074                     ADCC_StartConversion@channel:	
  4304                           ; 1 bytes @ 0x4
  4305                           
  4306  0074                     _isspace$1468:	
  4307                           ; 1 bytes @ 0x4
  4308                           
  4309  0074                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  4310                           ; 1 bytes @ 0x4
  4311                           
  4312  0074                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  4313                           ; 2 bytes @ 0x4
  4314                           
  4315  0074                     EUSART1_SetErrorHandler@interruptHandler:	
  4316                           ; 2 bytes @ 0x4
  4317                           
  4318  0074                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  4319                           ; 2 bytes @ 0x4
  4320                           
  4321  0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  4322                           ; 2 bytes @ 0x4
  4323                           
  4324  0074                     ___wmul@product:	
  4325                           ; 2 bytes @ 0x4
  4326                           
  4327                           
  4328                           ; 2 bytes @ 0x4
  4329  0074                     	ds	1
  4330  0075                     ??_putch:
  4331  0075                     putch@txData:	
  4332                           ; 1 bytes @ 0x5
  4333                           
  4334                           
  4335                           ; 1 bytes @ 0x5
  4336  0075                     	ds	1
  4337  0076                     ??_TMR0_Initialize:
  4338  0076                     ??_EUSART1_Initialize:	
  4339                           ; 1 bytes @ 0x6
  4340                           
  4341  0076                     ??_EUSART1_SetRxInterruptHandler:	
  4342                           ; 1 bytes @ 0x6
  4343                           
  4344  0076                     ??_EUSART1_SetFramingErrorHandler:	
  4345                           ; 1 bytes @ 0x6
  4346                           
  4347  0076                     ??_EUSART1_SetOverrunErrorHandler:	
  4348                           ; 1 bytes @ 0x6
  4349                           
  4350  0076                     ??_EUSART1_SetErrorHandler:	
  4351                           ; 1 bytes @ 0x6
  4352                           
  4353  0076                     ??_TMR0_SetInterruptHandler:	
  4354                           ; 1 bytes @ 0x6
  4355                           
  4356  0076                     ??_SYSTEM_Initialize:	
  4357                           ; 1 bytes @ 0x6
  4358                           
  4359  0076                     ??_ADCC_GetConversionResult:	
  4360                           ; 1 bytes @ 0x6
  4361                           
  4362  0076                     ??_main:	
  4363                           ; 1 bytes @ 0x6
  4364                           
  4365  0076                     ?_atoi:	
  4366                           ; 1 bytes @ 0x6
  4367                           
  4368  0076                     memset@k:	
  4369                           ; 2 bytes @ 0x6
  4370                           
  4371                           
  4372                           ; 2 bytes @ 0x6
  4373  0076                     	ds	2
  4374  0078                     memset@dest:
  4375                           
  4376                           ; 1 bytes @ 0x8
  4377  0078                     	ds	1
  4378  0079                     memset@s:
  4379                           
  4380                           ; 1 bytes @ 0x9
  4381  0079                     	ds	1
  4382                           
  4383                           	psect	cstackBANK0
  4384  0020                     __pcstackBANK0:
  4385  0020                     ??_atoi:
  4386  0020                     ??_strlen:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0020                     ?_fputc:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0020                     ?___aodiv:	
  4393                           ; 2 bytes @ 0x0
  4394                           
  4395  0020                     ?___aomod:	
  4396                           ; 8 bytes @ 0x0
  4397                           
  4398  0020                     fputc@c:	
  4399                           ; 8 bytes @ 0x0
  4400                           
  4401  0020                     ___aodiv@divisor:	
  4402                           ; 2 bytes @ 0x0
  4403                           
  4404  0020                     ___aomod@divisor:	
  4405                           ; 8 bytes @ 0x0
  4406                           
  4407                           
  4408                           ; 8 bytes @ 0x0
  4409  0020                     	ds	1
  4410  0021                     strlen@a:
  4411                           
  4412                           ; 1 bytes @ 0x1
  4413  0021                     	ds	1
  4414  0022                     fputc@fp:
  4415  0022                     strlen@s:	
  4416                           ; 1 bytes @ 0x2
  4417                           
  4418                           
  4419                           ; 1 bytes @ 0x2
  4420  0022                     	ds	1
  4421  0023                     ??_fputc:
  4422                           
  4423                           ; 1 bytes @ 0x3
  4424  0023                     	ds	1
  4425  0024                     atoi@neg:
  4426                           
  4427                           ; 2 bytes @ 0x4
  4428  0024                     	ds	2
  4429  0026                     _atoi$1450:
  4430                           
  4431                           ; 2 bytes @ 0x6
  4432  0026                     	ds	2
  4433  0028                     ?_fputs:
  4434  0028                     fputs@fp:	
  4435                           ; 2 bytes @ 0x8
  4436                           
  4437  0028                     _atoi$1452:	
  4438                           ; 1 bytes @ 0x8
  4439                           
  4440  0028                     ___aodiv@dividend:	
  4441                           ; 2 bytes @ 0x8
  4442                           
  4443  0028                     ___aomod@dividend:	
  4444                           ; 8 bytes @ 0x8
  4445                           
  4446                           
  4447                           ; 8 bytes @ 0x8
  4448  0028                     	ds	1
  4449  0029                     ??_fputs:
  4450                           
  4451                           ; 1 bytes @ 0x9
  4452  0029                     	ds	1
  4453  002A                     _atoi$1451:
  4454                           
  4455                           ; 1 bytes @ 0xA
  4456  002A                     	ds	1
  4457  002B                     atoi@n:
  4458                           
  4459                           ; 2 bytes @ 0xB
  4460  002B                     	ds	1
  4461  002C                     fputs@c:
  4462                           
  4463                           ; 1 bytes @ 0xC
  4464  002C                     	ds	1
  4465  002D                     atoi@s:
  4466  002D                     fputs@i:	
  4467                           ; 1 bytes @ 0xD
  4468                           
  4469                           
  4470                           ; 2 bytes @ 0xD
  4471  002D                     	ds	2
  4472  002F                     fputs@s:
  4473                           
  4474                           ; 1 bytes @ 0xF
  4475  002F                     	ds	1
  4476  0030                     ?_pad:
  4477  0030                     ___aodiv@counter:	
  4478                           ; 2 bytes @ 0x10
  4479                           
  4480  0030                     ___aomod@counter:	
  4481                           ; 1 bytes @ 0x10
  4482                           
  4483  0030                     pad@buf:	
  4484                           ; 1 bytes @ 0x10
  4485                           
  4486                           
  4487                           ; 1 bytes @ 0x10
  4488  0030                     	ds	1
  4489  0031                     ___aodiv@sign:
  4490  0031                     ___aomod@sign:	
  4491                           ; 1 bytes @ 0x11
  4492                           
  4493  0031                     pad@p:	
  4494                           ; 1 bytes @ 0x11
  4495                           
  4496                           
  4497                           ; 2 bytes @ 0x11
  4498  0031                     	ds	1
  4499  0032                     ?_abs:
  4500  0032                     abs@a:	
  4501                           ; 2 bytes @ 0x12
  4502                           
  4503  0032                     ___aodiv@quotient:	
  4504                           ; 2 bytes @ 0x12
  4505                           
  4506                           
  4507                           ; 8 bytes @ 0x12
  4508  0032                     	ds	1
  4509  0033                     ??_pad:
  4510                           
  4511                           ; 1 bytes @ 0x13
  4512  0033                     	ds	1
  4513  0034                     ??_abs:
  4514  0034                     pad@i:	
  4515                           ; 1 bytes @ 0x14
  4516                           
  4517                           
  4518                           ; 2 bytes @ 0x14
  4519  0034                     	ds	2
  4520  0036                     pad@w:
  4521                           
  4522                           ; 2 bytes @ 0x16
  4523  0036                     	ds	2
  4524  0038                     pad@fp:
  4525                           
  4526                           ; 1 bytes @ 0x18
  4527  0038                     	ds	2
  4528  003A                     ?_dtoa:
  4529  003A                     dtoa@d:	
  4530                           ; 2 bytes @ 0x1A
  4531                           
  4532                           
  4533                           ; 8 bytes @ 0x1A
  4534  003A                     	ds	8
  4535  0042                     ??_dtoa:
  4536                           
  4537                           ; 1 bytes @ 0x22
  4538  0042                     	ds	3
  4539  0045                     _dtoa$1547:
  4540                           
  4541                           ; 2 bytes @ 0x25
  4542  0045                     	ds	2
  4543  0047                     dtoa@fp:
  4544                           
  4545                           ; 1 bytes @ 0x27
  4546  0047                     	ds	1
  4547  0048                     dtoa@p:
  4548                           
  4549                           ; 2 bytes @ 0x28
  4550  0048                     	ds	2
  4551  004A                     dtoa@w:
  4552                           
  4553                           ; 2 bytes @ 0x2A
  4554  004A                     	ds	2
  4555  004C                     dtoa@s:
  4556                           
  4557                           ; 2 bytes @ 0x2C
  4558  004C                     	ds	2
  4559  004E                     dtoa@n:
  4560                           
  4561                           ; 8 bytes @ 0x2E
  4562  004E                     	ds	8
  4563  0056                     dtoa@i:
  4564                           
  4565                           ; 2 bytes @ 0x36
  4566  0056                     	ds	2
  4567  0058                     ?_vfpfcnvrt:
  4568  0058                     vfpfcnvrt@fmt:	
  4569                           ; 2 bytes @ 0x38
  4570                           
  4571                           
  4572                           ; 1 bytes @ 0x38
  4573  0058                     	ds	1
  4574  0059                     vfpfcnvrt@ap:
  4575                           
  4576                           ; 1 bytes @ 0x39
  4577  0059                     	ds	1
  4578  005A                     ??_vfpfcnvrt:
  4579                           
  4580                           ; 1 bytes @ 0x3A
  4581  005A                     	ds	5
  4582  005F                     vfpfcnvrt@ll:
  4583                           
  4584                           ; 8 bytes @ 0x3F
  4585  005F                     	ds	8
  4586  0067                     vfpfcnvrt@fp:
  4587                           
  4588                           ; 1 bytes @ 0x47
  4589  0067                     	ds	1
  4590  0068                     ?_vfprintf:
  4591  0068                     vfprintf@fmt:	
  4592                           ; 2 bytes @ 0x48
  4593                           
  4594                           
  4595                           ; 2 bytes @ 0x48
  4596  0068                     	ds	2
  4597  006A                     vfprintf@ap:
  4598                           
  4599                           ; 1 bytes @ 0x4A
  4600  006A                     	ds	1
  4601  006B                     ??_vfprintf:
  4602                           
  4603                           ; 1 bytes @ 0x4B
  4604  006B                     	ds	2
  4605  006D                     vfprintf@fp:
  4606                           
  4607                           ; 1 bytes @ 0x4D
  4608  006D                     	ds	1
  4609  006E                     vfprintf@cfmt:
  4610                           
  4611                           ; 2 bytes @ 0x4E
  4612  006E                     	ds	2
  4613                           
  4614                           	psect	maintext
  4615  02C2                     __pmaintext:	
  4616 ;;
  4617 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4618 ;;
  4619 ;; *************** function _main *****************
  4620 ;; Defined at:
  4621 ;;		line 23 in file "main.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  convertedVal    2    8[BANK1 ] unsigned short 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : B3F/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4636 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4638 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4639 ;;Total ram usage:        2 bytes
  4640 ;; Hardware stack levels required when called:   14
  4641 ;; This function calls:
  4642 ;;		_ADCC_GetConversionResult
  4643 ;;		_ADCC_IsConversionDone
  4644 ;;		_ADCC_StartConversion
  4645 ;;		_EUSART1_SetRxInterruptHandler
  4646 ;;		_SYSTEM_Initialize
  4647 ;;		_TMR0_SetInterruptHandler
  4648 ;;		_printf
  4649 ;; This function is called by:
  4650 ;;		Startup code after reset
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           
  4655                           ;psect for function _main
  4656  02C2                     _main:
  4657  02C2                     l3192:	
  4658                           ;incstack = 0
  4659                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4660                           
  4661                           
  4662                           ;main.c: 25:     SYSTEM_Initialize();
  4663  02C2  318D  25BF  3182   	fcall	_SYSTEM_Initialize
  4664                           
  4665                           ;main.c: 27:     TMR0_SetInterruptHandler (miTimer0ISR);
  4666  02C5  30E6               	movlw	low _miTimer0ISR
  4667  02C6  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4668  02C7  300D               	movlw	high _miTimer0ISR
  4669  02C8  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4670  02C9  318D  2569  3182   	fcall	_TMR0_SetInterruptHandler
  4671                           
  4672                           ;main.c: 28:     EUSART1_SetRxInterruptHandler(rxSerialISR);
  4673  02CC  30D1               	movlw	low _rxSerialISR
  4674  02CD  00F4               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  4675  02CE  3006               	movlw	high _rxSerialISR
  4676  02CF  00F5               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  4677  02D0  318D  2563  3182   	fcall	_EUSART1_SetRxInterruptHandler
  4678  02D3                     l3194:
  4679                           
  4680                           ;main.c: 29:     (INTCONbits.GIE = 1);
  4681  02D3  178B               	bsf	11,7	;volatile
  4682  02D4                     l3196:
  4683                           
  4684                           ;main.c: 30:     (INTCONbits.PEIE = 1);
  4685  02D4  170B               	bsf	11,6	;volatile
  4686  02D5                     l3198:
  4687                           
  4688                           ;main.c: 32:     printf("INICIO\n\r");
  4689  02D5  3000               	movlw	low (STR_1| (0+32768))
  4690  02D6  0141               	movlb	1	; select bank1
  4691  02D7  00E2               	movwf	printf@fmt^(0+128)
  4692  02D8  3090               	movlw	high (STR_1| (0+32768))
  4693  02D9  00E3               	movwf	(printf@fmt^(0+128)+1)
  4694  02DA  318E  2613  3182   	fcall	_printf
  4695  02DD                     l3200:
  4696                           
  4697                           ;main.c: 35:     {;main.c: 36:         if(cont1segA>=periodoA){
  4698  02DD  0141               	movlb	1	; select bank1
  4699  02DE  0861               	movf	(_periodoA+1)^(0+128),w
  4700  02DF  0241               	subwf	(_cont1segA+1)^(0+128),w
  4701  02E0  1D03               	skipz
  4702  02E1  2AE4               	goto	u2655
  4703  02E2  0860               	movf	_periodoA^(0+128),w
  4704  02E3  0240               	subwf	_cont1segA^(0+128),w
  4705  02E4                     u2655:
  4706  02E4  1C03               	skipc
  4707  02E5  2AE7               	goto	u2651
  4708  02E6  2AE8               	goto	u2650
  4709  02E7                     u2651:
  4710  02E7  2B0A               	goto	l3212
  4711  02E8                     u2650:
  4712  02E8                     l3202:
  4713                           
  4714                           ;main.c: 37:             ADCC_StartConversion(channel_ANA0);
  4715  02E8  3000               	movlw	0
  4716  02E9  318D  2590  3182   	fcall	_ADCC_StartConversion
  4717  02EC                     l3204:	
  4718                           ;main.c: 38:             while(!ADCC_IsConversionDone());
  4719                           
  4720  02EC  318D  2581  3182   	fcall	_ADCC_IsConversionDone
  4721  02EF  3A00               	xorlw	0
  4722  02F0  1903               	skipnz
  4723  02F1  2AF3               	goto	u2661
  4724  02F2  2AF4               	goto	u2660
  4725  02F3                     u2661:
  4726  02F3  2AEC               	goto	l3204
  4727  02F4                     u2660:
  4728  02F4                     l3206:
  4729                           
  4730                           ;main.c: 39:             convertedValue = ADCC_GetConversionResult();
  4731  02F4  318D  254B  3182   	fcall	_ADCC_GetConversionResult
  4732  02F7  0875               	movf	?_ADCC_GetConversionResult+1,w
  4733  02F8  0141               	movlb	1	; select bank1
  4734  02F9  00EB               	movwf	(main@convertedValue+1)^(0+128)
  4735  02FA  0874               	movf	?_ADCC_GetConversionResult,w
  4736  02FB  00EA               	movwf	main@convertedValue^(0+128)
  4737  02FC                     l3208:
  4738                           
  4739                           ;main.c: 40:             printf("A%d\r\n", convertedValue);
  4740  02FC  3009               	movlw	low (STR_2| (0+32768))
  4741  02FD  00E2               	movwf	printf@fmt^(0+128)
  4742  02FE  3090               	movlw	high (STR_2| (0+32768))
  4743  02FF  00E3               	movwf	(printf@fmt^(0+128)+1)
  4744  0300  086B               	movf	(main@convertedValue+1)^(0+128),w
  4745  0301  00E5               	movwf	((?_printf+1)^(0+128)+2)
  4746  0302  086A               	movf	main@convertedValue^(0+128),w
  4747  0303  00E4               	movwf	(?_printf^(0+128)+2)
  4748  0304  318E  2613  3182   	fcall	_printf
  4749  0307                     l3210:
  4750                           
  4751                           ;main.c: 41:             cont1segA=0;
  4752  0307  0141               	movlb	1	; select bank1
  4753  0308  01C0               	clrf	_cont1segA^(0+128)
  4754  0309  01C1               	clrf	(_cont1segA+1)^(0+128)
  4755  030A                     l3212:
  4756                           
  4757                           ;main.c: 43:         if(cont1segB>=periodoB){
  4758  030A  085F               	movf	(_periodoB+1)^(0+128),w
  4759  030B  023F               	subwf	(_cont1segB+1)^(0+128),w
  4760  030C  1D03               	skipz
  4761  030D  2B10               	goto	u2675
  4762  030E  085E               	movf	_periodoB^(0+128),w
  4763  030F  023E               	subwf	_cont1segB^(0+128),w
  4764  0310                     u2675:
  4765  0310  1C03               	skipc
  4766  0311  2B13               	goto	u2671
  4767  0312  2B14               	goto	u2670
  4768  0313                     u2671:
  4769  0313  2B36               	goto	l3224
  4770  0314                     u2670:
  4771  0314                     l3214:
  4772                           
  4773                           ;main.c: 44:             ADCC_StartConversion(channel_ANA1);
  4774  0314  3001               	movlw	1
  4775  0315  318D  2590  3182   	fcall	_ADCC_StartConversion
  4776  0318                     l3216:	
  4777                           ;main.c: 45:             while(!ADCC_IsConversionDone());
  4778                           
  4779  0318  318D  2581  3182   	fcall	_ADCC_IsConversionDone
  4780  031B  3A00               	xorlw	0
  4781  031C  1903               	skipnz
  4782  031D  2B1F               	goto	u2681
  4783  031E  2B20               	goto	u2680
  4784  031F                     u2681:
  4785  031F  2B18               	goto	l3216
  4786  0320                     u2680:
  4787  0320                     l3218:
  4788                           
  4789                           ;main.c: 46:             convertedValue = ADCC_GetConversionResult();
  4790  0320  318D  254B  3182   	fcall	_ADCC_GetConversionResult
  4791  0323  0875               	movf	?_ADCC_GetConversionResult+1,w
  4792  0324  0141               	movlb	1	; select bank1
  4793  0325  00EB               	movwf	(main@convertedValue+1)^(0+128)
  4794  0326  0874               	movf	?_ADCC_GetConversionResult,w
  4795  0327  00EA               	movwf	main@convertedValue^(0+128)
  4796  0328                     l3220:
  4797                           
  4798                           ;main.c: 47:             printf("B%d\r\n", convertedValue);
  4799  0328  300F               	movlw	low (STR_3| (0+32768))
  4800  0329  00E2               	movwf	printf@fmt^(0+128)
  4801  032A  3090               	movlw	high (STR_3| (0+32768))
  4802  032B  00E3               	movwf	(printf@fmt^(0+128)+1)
  4803  032C  086B               	movf	(main@convertedValue+1)^(0+128),w
  4804  032D  00E5               	movwf	((?_printf+1)^(0+128)+2)
  4805  032E  086A               	movf	main@convertedValue^(0+128),w
  4806  032F  00E4               	movwf	(?_printf^(0+128)+2)
  4807  0330  318E  2613  3182   	fcall	_printf
  4808  0333                     l3222:
  4809                           
  4810                           ;main.c: 48:             cont1segB=0;
  4811  0333  0141               	movlb	1	; select bank1
  4812  0334  01BE               	clrf	_cont1segB^(0+128)
  4813  0335  01BF               	clrf	(_cont1segB+1)^(0+128)
  4814  0336                     l3224:
  4815                           
  4816                           ;main.c: 50:         if(cont1segC>=periodoC){
  4817  0336  085D               	movf	(_periodoC+1)^(0+128),w
  4818  0337  023D               	subwf	(_cont1segC+1)^(0+128),w
  4819  0338  1D03               	skipz
  4820  0339  2B3C               	goto	u2695
  4821  033A  085C               	movf	_periodoC^(0+128),w
  4822  033B  023C               	subwf	_cont1segC^(0+128),w
  4823  033C                     u2695:
  4824  033C  1C03               	skipc
  4825  033D  2B3F               	goto	u2691
  4826  033E  2B40               	goto	u2690
  4827  033F                     u2691:
  4828  033F  2B62               	goto	l3236
  4829  0340                     u2690:
  4830  0340                     l3226:
  4831                           
  4832                           ;main.c: 51:             ADCC_StartConversion(channel_ANA2);
  4833  0340  3002               	movlw	2
  4834  0341  318D  2590  3182   	fcall	_ADCC_StartConversion
  4835  0344                     l3228:	
  4836                           ;main.c: 52:             while(!ADCC_IsConversionDone());
  4837                           
  4838  0344  318D  2581  3182   	fcall	_ADCC_IsConversionDone
  4839  0347  3A00               	xorlw	0
  4840  0348  1903               	skipnz
  4841  0349  2B4B               	goto	u2701
  4842  034A  2B4C               	goto	u2700
  4843  034B                     u2701:
  4844  034B  2B44               	goto	l3228
  4845  034C                     u2700:
  4846  034C                     l3230:
  4847                           
  4848                           ;main.c: 53:             convertedValue = ADCC_GetConversionResult();
  4849  034C  318D  254B  3182   	fcall	_ADCC_GetConversionResult
  4850  034F  0875               	movf	?_ADCC_GetConversionResult+1,w
  4851  0350  0141               	movlb	1	; select bank1
  4852  0351  00EB               	movwf	(main@convertedValue+1)^(0+128)
  4853  0352  0874               	movf	?_ADCC_GetConversionResult,w
  4854  0353  00EA               	movwf	main@convertedValue^(0+128)
  4855  0354                     l3232:
  4856                           
  4857                           ;main.c: 54:             printf("C%d\r\n", convertedValue);
  4858  0354  3015               	movlw	low (STR_4| (0+32768))
  4859  0355  00E2               	movwf	printf@fmt^(0+128)
  4860  0356  3090               	movlw	high (STR_4| (0+32768))
  4861  0357  00E3               	movwf	(printf@fmt^(0+128)+1)
  4862  0358  086B               	movf	(main@convertedValue+1)^(0+128),w
  4863  0359  00E5               	movwf	((?_printf+1)^(0+128)+2)
  4864  035A  086A               	movf	main@convertedValue^(0+128),w
  4865  035B  00E4               	movwf	(?_printf^(0+128)+2)
  4866  035C  318E  2613  3182   	fcall	_printf
  4867  035F                     l3234:
  4868                           
  4869                           ;main.c: 55:             cont1segC=0;
  4870  035F  0141               	movlb	1	; select bank1
  4871  0360  01BC               	clrf	_cont1segC^(0+128)
  4872  0361  01BD               	clrf	(_cont1segC+1)^(0+128)
  4873  0362                     l3236:
  4874                           
  4875                           ;main.c: 57:         if(cont1segD>=periodoD){
  4876  0362  085B               	movf	(_periodoD+1)^(0+128),w
  4877  0363  023B               	subwf	(_cont1segD+1)^(0+128),w
  4878  0364  1D03               	skipz
  4879  0365  2B68               	goto	u2715
  4880  0366  085A               	movf	_periodoD^(0+128),w
  4881  0367  023A               	subwf	_cont1segD^(0+128),w
  4882  0368                     u2715:
  4883  0368  1C03               	skipc
  4884  0369  2B6B               	goto	u2711
  4885  036A  2B6C               	goto	u2710
  4886  036B                     u2711:
  4887  036B  2B8E               	goto	l3248
  4888  036C                     u2710:
  4889  036C                     l3238:
  4890                           
  4891                           ;main.c: 58:             ADCC_StartConversion(channel_ANA4);
  4892  036C  3004               	movlw	4
  4893  036D  318D  2590  3182   	fcall	_ADCC_StartConversion
  4894  0370                     l3240:	
  4895                           ;main.c: 59:             while(!ADCC_IsConversionDone());
  4896                           
  4897  0370  318D  2581  3182   	fcall	_ADCC_IsConversionDone
  4898  0373  3A00               	xorlw	0
  4899  0374  1903               	skipnz
  4900  0375  2B77               	goto	u2721
  4901  0376  2B78               	goto	u2720
  4902  0377                     u2721:
  4903  0377  2B70               	goto	l3240
  4904  0378                     u2720:
  4905  0378                     l3242:
  4906                           
  4907                           ;main.c: 60:             convertedValue = ADCC_GetConversionResult();
  4908  0378  318D  254B  3182   	fcall	_ADCC_GetConversionResult
  4909  037B  0875               	movf	?_ADCC_GetConversionResult+1,w
  4910  037C  0141               	movlb	1	; select bank1
  4911  037D  00EB               	movwf	(main@convertedValue+1)^(0+128)
  4912  037E  0874               	movf	?_ADCC_GetConversionResult,w
  4913  037F  00EA               	movwf	main@convertedValue^(0+128)
  4914  0380                     l3244:
  4915                           
  4916                           ;main.c: 61:             printf("D%d\r\n", convertedValue);
  4917  0380  301B               	movlw	low (STR_5| (0+32768))
  4918  0381  00E2               	movwf	printf@fmt^(0+128)
  4919  0382  3090               	movlw	high (STR_5| (0+32768))
  4920  0383  00E3               	movwf	(printf@fmt^(0+128)+1)
  4921  0384  086B               	movf	(main@convertedValue+1)^(0+128),w
  4922  0385  00E5               	movwf	((?_printf+1)^(0+128)+2)
  4923  0386  086A               	movf	main@convertedValue^(0+128),w
  4924  0387  00E4               	movwf	(?_printf^(0+128)+2)
  4925  0388  318E  2613  3182   	fcall	_printf
  4926  038B                     l3246:
  4927                           
  4928                           ;main.c: 62:             cont1segD=0;
  4929  038B  0141               	movlb	1	; select bank1
  4930  038C  01BA               	clrf	_cont1segD^(0+128)
  4931  038D  01BB               	clrf	(_cont1segD+1)^(0+128)
  4932  038E                     l3248:
  4933                           
  4934                           ;main.c: 64:         if(cont1segE>=periodoE){
  4935  038E  0859               	movf	(_periodoE+1)^(0+128),w
  4936  038F  0239               	subwf	(_cont1segE+1)^(0+128),w
  4937  0390  1D03               	skipz
  4938  0391  2B94               	goto	u2735
  4939  0392  0858               	movf	_periodoE^(0+128),w
  4940  0393  0238               	subwf	_cont1segE^(0+128),w
  4941  0394                     u2735:
  4942  0394  1C03               	skipc
  4943  0395  2B97               	goto	u2731
  4944  0396  2B98               	goto	u2730
  4945  0397                     u2731:
  4946  0397  2ADD               	goto	l3200
  4947  0398                     u2730:
  4948  0398                     l3250:
  4949                           
  4950                           ;main.c: 65:             ADCC_StartConversion(channel_ANA5);
  4951  0398  3005               	movlw	5
  4952  0399  318D  2590  3182   	fcall	_ADCC_StartConversion
  4953  039C                     l3252:	
  4954                           ;main.c: 66:             while(!ADCC_IsConversionDone());
  4955                           
  4956  039C  318D  2581  3182   	fcall	_ADCC_IsConversionDone
  4957  039F  3A00               	xorlw	0
  4958  03A0  1903               	skipnz
  4959  03A1  2BA3               	goto	u2741
  4960  03A2  2BA4               	goto	u2740
  4961  03A3                     u2741:
  4962  03A3  2B9C               	goto	l3252
  4963  03A4                     u2740:
  4964  03A4                     l3254:
  4965                           
  4966                           ;main.c: 67:             convertedValue = ADCC_GetConversionResult();
  4967  03A4  318D  254B  3182   	fcall	_ADCC_GetConversionResult
  4968  03A7  0875               	movf	?_ADCC_GetConversionResult+1,w
  4969  03A8  0141               	movlb	1	; select bank1
  4970  03A9  00EB               	movwf	(main@convertedValue+1)^(0+128)
  4971  03AA  0874               	movf	?_ADCC_GetConversionResult,w
  4972  03AB  00EA               	movwf	main@convertedValue^(0+128)
  4973  03AC                     l3256:
  4974                           
  4975                           ;main.c: 68:             printf("E%d\r\n", convertedValue);
  4976  03AC  3021               	movlw	low (STR_6| (0+32768))
  4977  03AD  00E2               	movwf	printf@fmt^(0+128)
  4978  03AE  3090               	movlw	high (STR_6| (0+32768))
  4979  03AF  00E3               	movwf	(printf@fmt^(0+128)+1)
  4980  03B0  086B               	movf	(main@convertedValue+1)^(0+128),w
  4981  03B1  00E5               	movwf	((?_printf+1)^(0+128)+2)
  4982  03B2  086A               	movf	main@convertedValue^(0+128),w
  4983  03B3  00E4               	movwf	(?_printf^(0+128)+2)
  4984  03B4  318E  2613  3182   	fcall	_printf
  4985  03B7                     l3258:
  4986                           
  4987                           ;main.c: 69:             cont1segE=0;
  4988  03B7  0141               	movlb	1	; select bank1
  4989  03B8  01B8               	clrf	_cont1segE^(0+128)
  4990  03B9  01B9               	clrf	(_cont1segE+1)^(0+128)
  4991  03BA  2ADD               	goto	l3200
  4992  03BB  3180  2828         	ljmp	start
  4993  03BD                     __end_of_main:
  4994                           
  4995                           	psect	text1
  4996  0E13                     __ptext1:	
  4997 ;; *************** function _printf *****************
  4998 ;; Defined at:
  4999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  5002 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  5003 ;;		 -> STR_2(6), STR_1(9), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  ret             2    0        int 
  5006 ;;  ap              1    7[BANK1 ] PTR void [1]
  5007 ;;		 -> ?_printf(2), 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  2    0[BANK1 ] int 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5017 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5020 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:        8 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:   13
  5024 ;; This function calls:
  5025 ;;		_vfprintf
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _printf
  5033  0E13                     _printf:
  5034  0E13                     l3138:	
  5035                           ;incstack = 0
  5036                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5037                           
  5038  0E13  30E4               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5039  0E14  0141               	movlb	1	; select bank1
  5040  0E15  00E6               	movwf	??_printf^(0+128)
  5041  0E16  0866               	movf	??_printf^(0+128),w
  5042  0E17  00E9               	movwf	printf@ap^(0+128)
  5043  0E18                     l3140:
  5044  0E18  0863               	movf	(printf@fmt+1)^(0+128),w
  5045  0E19  0140               	movlb	0	; select bank0
  5046  0E1A  00E9               	movwf	vfprintf@fmt+1
  5047  0E1B  0141               	movlb	1	; select bank1
  5048  0E1C  0862               	movf	printf@fmt^(0+128),w
  5049  0E1D  0140               	movlb	0	; select bank0
  5050  0E1E  00E8               	movwf	vfprintf@fmt
  5051  0E1F  30E9               	movlw	(low (printf@ap| 0))& (0+255)
  5052  0E20  0141               	movlb	1	; select bank1
  5053  0E21  00E6               	movwf	??_printf^(0+128)
  5054  0E22  0866               	movf	??_printf^(0+128),w
  5055  0E23  0140               	movlb	0	; select bank0
  5056  0E24  00EA               	movwf	vfprintf@ap
  5057  0E25  3000               	movlw	0
  5058  0E26  318F  2796  318E   	fcall	_vfprintf
  5059  0E29                     l1239:
  5060  0E29  0008               	return
  5061  0E2A                     __end_of_printf:
  5062                           
  5063                           	psect	text2
  5064  0F96                     __ptext2:	
  5065 ;; *************** function _vfprintf *****************
  5066 ;; Defined at:
  5067 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  fp              1    wreg     PTR struct _IO_FILE
  5070 ;;		 -> NULL(0), 
  5071 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  5072 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  5073 ;;		 -> STR_2(6), STR_1(9), 
  5074 ;;  ap              1   74[BANK0 ] PTR PTR void 
  5075 ;;		 -> printf@ap(1), 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  5078 ;;		 -> NULL(0), 
  5079 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  5080 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  5081 ;;		 -> STR_2(6), STR_1(9), 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  2   72[BANK0 ] int 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5092 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5094 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5095 ;;Total ram usage:        8 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:   12
  5098 ;; This function calls:
  5099 ;;		_vfpfcnvrt
  5100 ;; This function is called by:
  5101 ;;		_printf
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _vfprintf
  5107  0F96                     _vfprintf:
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5111                           ;vfprintf@fp stored from wreg
  5112  0F96  0140               	movlb	0	; select bank0
  5113  0F97  00ED               	movwf	vfprintf@fp
  5114  0F98                     l3126:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5117  0F98  0869               	movf	vfprintf@fmt+1,w
  5118  0F99  00EF               	movwf	vfprintf@cfmt+1
  5119  0F9A  0868               	movf	vfprintf@fmt,w
  5120  0F9B  00EE               	movwf	vfprintf@cfmt
  5121  0F9C                     l3128:
  5122                           
  5123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5124  0F9C  0141               	movlb	1	; select bank1
  5125  0F9D  01B0               	clrf	_nout^(0+128)
  5126  0F9E  01B1               	clrf	(_nout+1)^(0+128)
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5129  0F9F  2FB4               	goto	l3132
  5130  0FA0                     l3130:
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5133  0FA0  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5134  0FA1  00EB               	movwf	??_vfprintf
  5135  0FA2  086B               	movf	??_vfprintf,w
  5136  0FA3  00D8               	movwf	vfpfcnvrt@fmt
  5137  0FA4  086A               	movf	vfprintf@ap,w
  5138  0FA5  00EC               	movwf	??_vfprintf+1
  5139  0FA6  086C               	movf	??_vfprintf+1,w
  5140  0FA7  00D9               	movwf	vfpfcnvrt@ap
  5141  0FA8  086D               	movf	vfprintf@fp,w
  5142  0FA9  3184  24A9  318F   	fcall	_vfpfcnvrt
  5143  0FAC  0140               	movlb	0	; select bank0
  5144  0FAD  0858               	movf	?_vfpfcnvrt,w
  5145  0FAE  0141               	movlb	1	; select bank1
  5146  0FAF  07B0               	addwf	_nout^(0+128),f
  5147  0FB0  0140               	movlb	0	; select bank0
  5148  0FB1  0859               	movf	?_vfpfcnvrt+1,w
  5149  0FB2  0141               	movlb	1	; select bank1
  5150  0FB3  3DB1               	addwfc	(_nout+1)^(0+128),f
  5151  0FB4                     l3132:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5154  0FB4  0140               	movlb	0	; select bank0
  5155  0FB5  086E               	movf	vfprintf@cfmt,w
  5156  0FB6  0084               	movwf	4
  5157  0FB7  086F               	movf	vfprintf@cfmt+1,w
  5158  0FB8  0085               	movwf	5
  5159  0FB9  0012               	moviw fsr0++
  5160  0FBA  1D03               	btfss	3,2
  5161  0FBB  2FBD               	goto	u2561
  5162  0FBC  2FBE               	goto	u2560
  5163  0FBD                     u2561:
  5164  0FBD  2FA0               	goto	l3130
  5165  0FBE                     u2560:
  5166  0FBE                     l3134:
  5167                           
  5168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5169  0FBE  0141               	movlb	1	; select bank1
  5170  0FBF  0831               	movf	(_nout+1)^(0+128),w
  5171  0FC0  0140               	movlb	0	; select bank0
  5172  0FC1  00E9               	movwf	?_vfprintf+1
  5173  0FC2  0141               	movlb	1	; select bank1
  5174  0FC3  0830               	movf	_nout^(0+128),w
  5175  0FC4  0140               	movlb	0	; select bank0
  5176  0FC5  00E8               	movwf	?_vfprintf
  5177  0FC6                     l1311:
  5178  0FC6  0008               	return
  5179  0FC7                     __end_of_vfprintf:
  5180                           
  5181                           	psect	text3
  5182  04A9                     __ptext3:	
  5183 ;; *************** function _vfpfcnvrt *****************
  5184 ;; Defined at:
  5185 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  fp              1    wreg     PTR struct _IO_FILE
  5188 ;;		 -> NULL(0), 
  5189 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  5190 ;;		 -> vfprintf@cfmt(2), 
  5191 ;;  ap              1   57[BANK0 ] PTR PTR void 
  5192 ;;		 -> printf@ap(1), 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  5195 ;;		 -> NULL(0), 
  5196 ;;  ll              8   63[BANK0 ] long long 
  5197 ;;  llu             8    0        unsigned long long 
  5198 ;;  f               4    0        unsigned long long 
  5199 ;;  ct              3    0        unsigned char [3]
  5200 ;;  vp              2    0        PTR void 
  5201 ;;  i               2    0        int 
  5202 ;;  done            2    0        int 
  5203 ;;  cp              2    0        PTR unsigned char 
  5204 ;;  c               1    0        unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2   56[BANK0 ] int 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5215 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5216 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5217 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5218 ;;Total ram usage:       16 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   11
  5221 ;; This function calls:
  5222 ;;		_dtoa
  5223 ;;		_fputc
  5224 ;; This function is called by:
  5225 ;;		_vfprintf
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function _vfpfcnvrt
  5231  04A9                     _vfpfcnvrt:
  5232                           
  5233                           ;incstack = 0
  5234                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5235                           ;vfpfcnvrt@fp stored from wreg
  5236  04A9  0140               	movlb	0	; select bank0
  5237  04AA  00E7               	movwf	vfpfcnvrt@fp
  5238  04AB                     l3036:
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5241  04AB  0858               	movf	vfpfcnvrt@fmt,w
  5242  04AC  0086               	movwf	6
  5243  04AD  0187               	clrf	7
  5244  04AE  3F40               	moviw [0]fsr1
  5245  04AF  00DA               	movwf	??_vfpfcnvrt
  5246  04B0  3F41               	moviw [1]fsr1
  5247  04B1  00DB               	movwf	??_vfpfcnvrt+1
  5248  04B2  085A               	movf	??_vfpfcnvrt,w
  5249  04B3  0084               	movwf	4
  5250  04B4  085B               	movf	??_vfpfcnvrt+1,w
  5251  04B5  0085               	movwf	5
  5252  04B6  0012               	moviw fsr0++
  5253  04B7  3A25               	xorlw	37
  5254  04B8  1D03               	btfss	3,2
  5255  04B9  2CBB               	goto	u2451
  5256  04BA  2CBC               	goto	u2450
  5257  04BB                     u2451:
  5258  04BB  2D60               	goto	l3072
  5259  04BC                     u2450:
  5260  04BC                     l3038:
  5261                           
  5262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5263  04BC  0858               	movf	vfpfcnvrt@fmt,w
  5264  04BD  0086               	movwf	6
  5265  04BE  0187               	clrf	7
  5266  04BF  3001               	movlw	1
  5267  04C0  0781               	addwf	1,f
  5268  04C1  3141               	addfsr 1,1
  5269  04C2  1803               	skipnc
  5270  04C3  0A81               	incf	1,f
  5271  04C4                     l3040:
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5274  04C4  0141               	movlb	1	; select bank1
  5275  04C5  01B2               	clrf	_width^(0+128)
  5276  04C6  01B3               	clrf	(_width+1)^(0+128)
  5277  04C7  01B6               	clrf	_flags^(0+128)
  5278  04C8  01B7               	clrf	(_flags+1)^(0+128)
  5279  04C9                     l3042:
  5280                           
  5281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5282  04C9  30FF               	movlw	255
  5283  04CA  00B4               	movwf	_prec^(0+128)
  5284  04CB  30FF               	movlw	255
  5285  04CC  00B5               	movwf	(_prec^(0+128)+1)
  5286  04CD                     l3044:
  5287                           
  5288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5289  04CD  0140               	movlb	0	; select bank0
  5290  04CE  0858               	movf	vfpfcnvrt@fmt,w
  5291  04CF  0086               	movwf	6
  5292  04D0  0187               	clrf	7
  5293  04D1  3F40               	moviw [0]fsr1
  5294  04D2  00DA               	movwf	??_vfpfcnvrt
  5295  04D3  3F41               	moviw [1]fsr1
  5296  04D4  00DB               	movwf	??_vfpfcnvrt+1
  5297  04D5  085A               	movf	??_vfpfcnvrt,w
  5298  04D6  0084               	movwf	4
  5299  04D7  085B               	movf	??_vfpfcnvrt+1,w
  5300  04D8  0085               	movwf	5
  5301  04D9  0012               	moviw fsr0++
  5302  04DA  3A64               	xorlw	100
  5303  04DB  1903               	btfsc	3,2
  5304  04DC  2CDE               	goto	u2461
  5305  04DD  2CDF               	goto	u2460
  5306  04DE                     u2461:
  5307  04DE  2CF0               	goto	l3048
  5308  04DF                     u2460:
  5309  04DF                     l3046:
  5310  04DF  0858               	movf	vfpfcnvrt@fmt,w
  5311  04E0  0086               	movwf	6
  5312  04E1  0187               	clrf	7
  5313  04E2  3F40               	moviw [0]fsr1
  5314  04E3  00DA               	movwf	??_vfpfcnvrt
  5315  04E4  3F41               	moviw [1]fsr1
  5316  04E5  00DB               	movwf	??_vfpfcnvrt+1
  5317  04E6  085A               	movf	??_vfpfcnvrt,w
  5318  04E7  0084               	movwf	4
  5319  04E8  085B               	movf	??_vfpfcnvrt+1,w
  5320  04E9  0085               	movwf	5
  5321  04EA  0012               	moviw fsr0++
  5322  04EB  3A69               	xorlw	105
  5323  04EC  1D03               	btfss	3,2
  5324  04ED  2CEF               	goto	u2471
  5325  04EE  2CF0               	goto	u2470
  5326  04EF                     u2471:
  5327  04EF  2D2B               	goto	l3056
  5328  04F0                     u2470:
  5329  04F0                     l3048:
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5332  04F0  0858               	movf	vfpfcnvrt@fmt,w
  5333  04F1  0086               	movwf	6
  5334  04F2  0187               	clrf	7
  5335  04F3  3001               	movlw	1
  5336  04F4  0781               	addwf	1,f
  5337  04F5  3141               	addfsr 1,1
  5338  04F6  1803               	skipnc
  5339  04F7  0A81               	incf	1,f
  5340  04F8                     l3050:
  5341                           
  5342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5343  04F8  0859               	movf	vfpfcnvrt@ap,w
  5344  04F9  0086               	movwf	6
  5345  04FA  0187               	clrf	7
  5346  04FB  0801               	movf	1,w
  5347  04FC  0084               	movwf	4
  5348  04FD  0185               	clrf	5
  5349  04FE  3002               	movlw	2
  5350  04FF  0781               	addwf	1,f
  5351  0500  3F00               	moviw [0]fsr0
  5352  0501  00DA               	movwf	??_vfpfcnvrt
  5353  0502  3F01               	moviw [1]fsr0
  5354  0503  00DB               	movwf	??_vfpfcnvrt+1
  5355  0504  085A               	movf	??_vfpfcnvrt,w
  5356  0505  00DF               	movwf	vfpfcnvrt@ll
  5357  0506  085B               	movf	??_vfpfcnvrt+1,w
  5358  0507  00E0               	movwf	vfpfcnvrt@ll+1
  5359  0508  0D89               	rlf	9,f
  5360  0509  3B89               	subwfb	9,f
  5361  050A  0989               	comf	9,f
  5362  050B  00E1               	movwf	vfpfcnvrt@ll+2
  5363  050C  00E2               	movwf	vfpfcnvrt@ll+3
  5364  050D  00E3               	movwf	vfpfcnvrt@ll+4
  5365  050E  00E4               	movwf	vfpfcnvrt@ll+5
  5366  050F  00E5               	movwf	vfpfcnvrt@ll+6
  5367  0510  00E6               	movwf	vfpfcnvrt@ll+7
  5368  0511                     l3052:
  5369                           
  5370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5371  0511  085F               	movf	vfpfcnvrt@ll,w
  5372  0512  00BA               	movwf	dtoa@d
  5373  0513  0860               	movf	vfpfcnvrt@ll+1,w
  5374  0514  00BB               	movwf	dtoa@d+1
  5375  0515  0861               	movf	vfpfcnvrt@ll+2,w
  5376  0516  00BC               	movwf	dtoa@d+2
  5377  0517  0862               	movf	vfpfcnvrt@ll+3,w
  5378  0518  00BD               	movwf	dtoa@d+3
  5379  0519  0863               	movf	vfpfcnvrt@ll+4,w
  5380  051A  00BE               	movwf	dtoa@d+4
  5381  051B  0864               	movf	vfpfcnvrt@ll+5,w
  5382  051C  00BF               	movwf	dtoa@d+5
  5383  051D  0865               	movf	vfpfcnvrt@ll+6,w
  5384  051E  00C0               	movwf	dtoa@d+6
  5385  051F  0866               	movf	vfpfcnvrt@ll+7,w
  5386  0520  00C1               	movwf	dtoa@d+7
  5387  0521  0867               	movf	vfpfcnvrt@fp,w
  5388  0522  3180  204E  3184   	fcall	_dtoa
  5389  0525  0140               	movlb	0	; select bank0
  5390  0526  083B               	movf	?_dtoa+1,w
  5391  0527  00D9               	movwf	?_vfpfcnvrt+1
  5392  0528  083A               	movf	?_dtoa,w
  5393  0529  00D8               	movwf	?_vfpfcnvrt
  5394  052A  2D83               	goto	l1304
  5395  052B                     l3056:
  5396                           
  5397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5398  052B  0858               	movf	vfpfcnvrt@fmt,w
  5399  052C  0086               	movwf	6
  5400  052D  0187               	clrf	7
  5401  052E  3F40               	moviw [0]fsr1
  5402  052F  00DA               	movwf	??_vfpfcnvrt
  5403  0530  3F41               	moviw [1]fsr1
  5404  0531  00DB               	movwf	??_vfpfcnvrt+1
  5405  0532  085A               	movf	??_vfpfcnvrt,w
  5406  0533  0084               	movwf	4
  5407  0534  085B               	movf	??_vfpfcnvrt+1,w
  5408  0535  0085               	movwf	5
  5409  0536  0012               	moviw fsr0++
  5410  0537  3A25               	xorlw	37
  5411  0538  1D03               	btfss	3,2
  5412  0539  2D3B               	goto	u2481
  5413  053A  2D3C               	goto	u2480
  5414  053B                     u2481:
  5415  053B  2D55               	goto	l3066
  5416  053C                     u2480:
  5417  053C                     l3058:
  5418                           
  5419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5420  053C  0858               	movf	vfpfcnvrt@fmt,w
  5421  053D  0086               	movwf	6
  5422  053E  0187               	clrf	7
  5423  053F  3001               	movlw	1
  5424  0540  0781               	addwf	1,f
  5425  0541  3141               	addfsr 1,1
  5426  0542  1803               	skipnc
  5427  0543  0A81               	incf	1,f
  5428  0544                     l3060:
  5429                           
  5430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5431  0544  3025               	movlw	37
  5432  0545  00A0               	movwf	fputc@c
  5433  0546  3000               	movlw	0
  5434  0547  00A1               	movwf	fputc@c+1
  5435  0548  0867               	movf	vfpfcnvrt@fp,w
  5436  0549  00DA               	movwf	??_vfpfcnvrt
  5437  054A  085A               	movf	??_vfpfcnvrt,w
  5438  054B  00A2               	movwf	fputc@fp
  5439  054C  3187  27AF  3184   	fcall	_fputc
  5440  054F                     l3062:
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5443  054F  3001               	movlw	1
  5444  0550  0140               	movlb	0	; select bank0
  5445  0551  00D8               	movwf	?_vfpfcnvrt
  5446  0552  3000               	movlw	0
  5447  0553  00D9               	movwf	?_vfpfcnvrt+1
  5448  0554  2D83               	goto	l1304
  5449  0555                     l3066:
  5450                           
  5451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5452  0555  0858               	movf	vfpfcnvrt@fmt,w
  5453  0556  0086               	movwf	6
  5454  0557  0187               	clrf	7
  5455  0558  3001               	movlw	1
  5456  0559  0781               	addwf	1,f
  5457  055A  3141               	addfsr 1,1
  5458  055B  1803               	skipnc
  5459  055C  0A81               	incf	1,f
  5460  055D                     l3068:
  5461                           
  5462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5463  055D  01D8               	clrf	?_vfpfcnvrt
  5464  055E  01D9               	clrf	?_vfpfcnvrt+1
  5465  055F  2D83               	goto	l1304
  5466  0560                     l3072:
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5469  0560  0858               	movf	vfpfcnvrt@fmt,w
  5470  0561  0086               	movwf	6
  5471  0562  0187               	clrf	7
  5472  0563  3F40               	moviw [0]fsr1
  5473  0564  00DA               	movwf	??_vfpfcnvrt
  5474  0565  3F41               	moviw [1]fsr1
  5475  0566  00DB               	movwf	??_vfpfcnvrt+1
  5476  0567  085A               	movf	??_vfpfcnvrt,w
  5477  0568  0084               	movwf	4
  5478  0569  085B               	movf	??_vfpfcnvrt+1,w
  5479  056A  0085               	movwf	5
  5480  056B  0800               	movf	0,w	;code access
  5481  056C  00DC               	movwf	??_vfpfcnvrt+2
  5482  056D  01DD               	clrf	??_vfpfcnvrt+3
  5483  056E  085C               	movf	??_vfpfcnvrt+2,w
  5484  056F  00A0               	movwf	fputc@c
  5485  0570  085D               	movf	??_vfpfcnvrt+3,w
  5486  0571  00A1               	movwf	fputc@c+1
  5487  0572  0867               	movf	vfpfcnvrt@fp,w
  5488  0573  00DE               	movwf	??_vfpfcnvrt+4
  5489  0574  085E               	movf	??_vfpfcnvrt+4,w
  5490  0575  00A2               	movwf	fputc@fp
  5491  0576  3187  27AF  3184   	fcall	_fputc
  5492  0579                     l3074:
  5493                           
  5494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5495  0579  0140               	movlb	0	; select bank0
  5496  057A  0858               	movf	vfpfcnvrt@fmt,w
  5497  057B  0086               	movwf	6
  5498  057C  0187               	clrf	7
  5499  057D  3001               	movlw	1
  5500  057E  0781               	addwf	1,f
  5501  057F  3141               	addfsr 1,1
  5502  0580  1803               	skipnc
  5503  0581  0A81               	incf	1,f
  5504  0582  2D4F               	goto	l3062
  5505  0583                     l1304:
  5506  0583  0008               	return
  5507  0584                     __end_of_vfpfcnvrt:
  5508                           
  5509                           	psect	text4
  5510  004E                     __ptext4:	
  5511 ;; *************** function _dtoa *****************
  5512 ;; Defined at:
  5513 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  fp              1    wreg     PTR struct _IO_FILE
  5516 ;;		 -> NULL(0), 
  5517 ;;  d               8   26[BANK0 ] long long 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
  5520 ;;		 -> NULL(0), 
  5521 ;;  n               8   46[BANK0 ] long long 
  5522 ;;  i               2   54[BANK0 ] int 
  5523 ;;  s               2   44[BANK0 ] int 
  5524 ;;  w               2   42[BANK0 ] int 
  5525 ;;  p               2   40[BANK0 ] int 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  2   26[BANK0 ] int 
  5528 ;; Registers used:
  5529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5535 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5536 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5537 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5538 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5539 ;;Total ram usage:       30 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:   10
  5542 ;; This function calls:
  5543 ;;		___aodiv
  5544 ;;		___aomod
  5545 ;;		_abs
  5546 ;;		_pad
  5547 ;; This function is called by:
  5548 ;;		_vfpfcnvrt
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _dtoa
  5554  004E                     _dtoa:
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5558                           ;dtoa@fp stored from wreg
  5559  004E  0140               	movlb	0	; select bank0
  5560  004F  00C7               	movwf	dtoa@fp
  5561  0050                     l2978:
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5564  0050  083A               	movf	dtoa@d,w
  5565  0051  00CE               	movwf	dtoa@n
  5566  0052  083B               	movf	dtoa@d+1,w
  5567  0053  00CF               	movwf	dtoa@n+1
  5568  0054  083C               	movf	dtoa@d+2,w
  5569  0055  00D0               	movwf	dtoa@n+2
  5570  0056  083D               	movf	dtoa@d+3,w
  5571  0057  00D1               	movwf	dtoa@n+3
  5572  0058  083E               	movf	dtoa@d+4,w
  5573  0059  00D2               	movwf	dtoa@n+4
  5574  005A  083F               	movf	dtoa@d+5,w
  5575  005B  00D3               	movwf	dtoa@n+5
  5576  005C  0840               	movf	dtoa@d+6,w
  5577  005D  00D4               	movwf	dtoa@n+6
  5578  005E  0841               	movf	dtoa@d+7,w
  5579  005F  00D5               	movwf	dtoa@n+7
  5580  0060                     l2980:
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5583  0060  304E               	movlw	low dtoa@n
  5584  0061  0086               	movwf	6
  5585  0062  3000               	movlw	high dtoa@n
  5586  0063  0087               	movwf	7
  5587  0064  3F47               	moviw [7]fsr1
  5588  0065  00C2               	movwf	??_dtoa
  5589  0066  1BC2               	btfsc	??_dtoa,7
  5590  0067  2869               	goto	u2291
  5591  0068  286B               	goto	u2290
  5592  0069                     u2291:
  5593  0069  3001               	movlw	1
  5594  006A  286C               	goto	u2300
  5595  006B                     u2290:
  5596  006B  3000               	movlw	0
  5597  006C                     u2300:
  5598  006C  0140               	movlb	0	; select bank0
  5599  006D  00C3               	movwf	??_dtoa+1
  5600  006E  01C4               	clrf	??_dtoa+2
  5601  006F  0843               	movf	??_dtoa+1,w
  5602  0070  00CC               	movwf	dtoa@s
  5603  0071  0844               	movf	??_dtoa+2,w
  5604  0072  00CD               	movwf	dtoa@s+1
  5605  0073                     l2982:
  5606                           
  5607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5608  0073  084C               	movf	dtoa@s,w
  5609  0074  044D               	iorwf	dtoa@s+1,w
  5610  0075  1903               	btfsc	3,2
  5611  0076  2878               	goto	u2311
  5612  0077  2879               	goto	u2310
  5613  0078                     u2311:
  5614  0078  2897               	goto	l1274
  5615  0079                     u2310:
  5616  0079                     l2984:
  5617                           
  5618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5619  0079  09CE               	comf	dtoa@n,f
  5620  007A  09CF               	comf	dtoa@n+1,f
  5621  007B  09D0               	comf	dtoa@n+2,f
  5622  007C  09D1               	comf	dtoa@n+3,f
  5623  007D  09D2               	comf	dtoa@n+4,f
  5624  007E  09D3               	comf	dtoa@n+5,f
  5625  007F  09D4               	comf	dtoa@n+6,f
  5626  0080  09D5               	comf	dtoa@n+7,f
  5627  0081  0ACE               	incf	dtoa@n,f
  5628  0082  1D03               	skipz
  5629  0083  2897               	goto	u232lld
  5630  0084  0ACF               	incf	dtoa@n+1,f
  5631  0085  1D03               	skipz
  5632  0086  2897               	goto	u232lld
  5633  0087  0AD0               	incf	dtoa@n+2,f
  5634  0088  1D03               	skipz
  5635  0089  2897               	goto	u232lld
  5636  008A  0AD1               	incf	dtoa@n+3,f
  5637  008B  1D03               	skipz
  5638  008C  2897               	goto	u232lld
  5639  008D  0AD2               	incf	dtoa@n+4,f
  5640  008E  1D03               	skipz
  5641  008F  2897               	goto	u232lld
  5642  0090  0AD3               	incf	dtoa@n+5,f
  5643  0091  1D03               	skipz
  5644  0092  2897               	goto	u232lld
  5645  0093  0AD4               	incf	dtoa@n+6,f
  5646  0094  1D03               	skipz
  5647  0095  2897               	goto	u232lld
  5648  0096  0AD5               	incf	dtoa@n+7,f
  5649  0097                     u232lld:
  5650  0097                     l1274:	
  5651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  5652                           
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5655  0097  0141               	movlb	1	; select bank1
  5656  0098  1BB5               	btfsc	(_prec+1)^(0+128),7
  5657  0099  289B               	goto	u2331
  5658  009A  289C               	goto	u2330
  5659  009B                     u2331:
  5660  009B  28A0               	goto	l1275
  5661  009C                     u2330:
  5662  009C                     l2986:
  5663                           
  5664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5665  009C  30FD               	movlw	253
  5666  009D  05B6               	andwf	_flags^(0+128),f
  5667  009E  30FF               	movlw	255
  5668  009F  05B7               	andwf	(_flags+1)^(0+128),f
  5669  00A0                     l1275:	
  5670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  5671                           
  5672                           
  5673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5674  00A0  0835               	movf	(_prec+1)^(0+128),w
  5675  00A1  3A80               	xorlw	128
  5676  00A2  0140               	movlb	0	; select bank0
  5677  00A3  00C2               	movwf	??_dtoa
  5678  00A4  3080               	movlw	128
  5679  00A5  0242               	subwf	??_dtoa,w
  5680  00A6  1D03               	skipz
  5681  00A7  28AB               	goto	u2345
  5682  00A8  3001               	movlw	1
  5683  00A9  0141               	movlb	1	; select bank1
  5684  00AA  0234               	subwf	_prec^(0+128),w
  5685  00AB                     u2345:
  5686  00AB  1803               	skipnc
  5687  00AC  28AE               	goto	u2341
  5688  00AD  28AF               	goto	u2340
  5689  00AE                     u2341:
  5690  00AE  28B5               	goto	l2990
  5691  00AF                     u2340:
  5692  00AF                     l2988:
  5693  00AF  3001               	movlw	1
  5694  00B0  0140               	movlb	0	; select bank0
  5695  00B1  00C8               	movwf	dtoa@p
  5696  00B2  3000               	movlw	0
  5697  00B3  00C9               	movwf	dtoa@p+1
  5698  00B4  28BD               	goto	l1279
  5699  00B5                     l2990:
  5700  00B5  0141               	movlb	1	; select bank1
  5701  00B6  0835               	movf	(_prec+1)^(0+128),w
  5702  00B7  0140               	movlb	0	; select bank0
  5703  00B8  00C9               	movwf	dtoa@p+1
  5704  00B9  0141               	movlb	1	; select bank1
  5705  00BA  0834               	movf	_prec^(0+128),w
  5706  00BB  0140               	movlb	0	; select bank0
  5707  00BC  00C8               	movwf	dtoa@p
  5708  00BD                     l1279:
  5709                           
  5710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5711  00BD  0141               	movlb	1	; select bank1
  5712  00BE  0833               	movf	(_width+1)^(0+128),w
  5713  00BF  0140               	movlb	0	; select bank0
  5714  00C0  00CB               	movwf	dtoa@w+1
  5715  00C1  0141               	movlb	1	; select bank1
  5716  00C2  0832               	movf	_width^(0+128),w
  5717  00C3  0140               	movlb	0	; select bank0
  5718  00C4  00CA               	movwf	dtoa@w
  5719  00C5                     l2992:
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5722  00C5  084C               	movf	dtoa@s,w
  5723  00C6  044D               	iorwf	dtoa@s+1,w
  5724  00C7  1D03               	btfss	3,2
  5725  00C8  28CA               	goto	u2351
  5726  00C9  28CB               	goto	u2350
  5727  00CA                     u2351:
  5728  00CA  28D0               	goto	l2996
  5729  00CB                     u2350:
  5730  00CB                     l2994:
  5731  00CB  0141               	movlb	1	; select bank1
  5732  00CC  1D36               	btfss	_flags^(0+128),2
  5733  00CD  28CF               	goto	u2361
  5734  00CE  28D0               	goto	u2360
  5735  00CF                     u2361:
  5736  00CF  28D5               	goto	l1280
  5737  00D0                     u2360:
  5738  00D0                     l2996:
  5739                           
  5740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5741  00D0  30FF               	movlw	255
  5742  00D1  0140               	movlb	0	; select bank0
  5743  00D2  07CA               	addwf	dtoa@w,f
  5744  00D3  30FF               	movlw	255
  5745  00D4  3DCB               	addwfc	dtoa@w+1,f
  5746  00D5                     l1280:	
  5747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  5748                           
  5749                           
  5750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5751  00D5  301F               	movlw	31
  5752  00D6  0140               	movlb	0	; select bank0
  5753  00D7  00D6               	movwf	dtoa@i
  5754  00D8  3000               	movlw	0
  5755  00D9  00D7               	movwf	dtoa@i+1
  5756  00DA                     l2998:
  5757                           
  5758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5759  00DA  0142               	movlb	2	; select bank2
  5760  00DB  01BF               	clrf	(_dbuf^(0+256)+31)
  5761                           
  5762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5763  00DC  2946               	goto	l1283
  5764  00DD                     l3000:
  5765                           
  5766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5767  00DD  30FF               	movlw	255
  5768  00DE  0140               	movlb	0	; select bank0
  5769  00DF  07D6               	addwf	dtoa@i,f
  5770  00E0  30FF               	movlw	255
  5771  00E1  3DD7               	addwfc	dtoa@i+1,f
  5772  00E2                     l3002:
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5775  00E2  300A               	movlw	10
  5776  00E3  00A0               	movwf	___aomod@divisor
  5777  00E4  01A1               	clrf	___aomod@divisor+1
  5778  00E5  01A2               	clrf	___aomod@divisor+2
  5779  00E6  01A3               	clrf	___aomod@divisor+3
  5780  00E7  01A4               	clrf	___aomod@divisor+4
  5781  00E8  01A5               	clrf	___aomod@divisor+5
  5782  00E9  01A6               	clrf	___aomod@divisor+6
  5783  00EA  01A7               	clrf	___aomod@divisor+7
  5784  00EB  084E               	movf	dtoa@n,w
  5785  00EC  00A8               	movwf	___aomod@dividend
  5786  00ED  084F               	movf	dtoa@n+1,w
  5787  00EE  00A9               	movwf	___aomod@dividend+1
  5788  00EF  0850               	movf	dtoa@n+2,w
  5789  00F0  00AA               	movwf	___aomod@dividend+2
  5790  00F1  0851               	movf	dtoa@n+3,w
  5791  00F2  00AB               	movwf	___aomod@dividend+3
  5792  00F3  0852               	movf	dtoa@n+4,w
  5793  00F4  00AC               	movwf	___aomod@dividend+4
  5794  00F5  0853               	movf	dtoa@n+5,w
  5795  00F6  00AD               	movwf	___aomod@dividend+5
  5796  00F7  0854               	movf	dtoa@n+6,w
  5797  00F8  00AE               	movwf	___aomod@dividend+6
  5798  00F9  0855               	movf	dtoa@n+7,w
  5799  00FA  00AF               	movwf	___aomod@dividend+7
  5800  00FB  3183  23BD  3180   	fcall	___aomod
  5801  00FE  0140               	movlb	0	; select bank0
  5802  00FF  0821               	movf	?___aomod+1,w
  5803  0100  00B3               	movwf	abs@a+1
  5804  0101  0820               	movf	?___aomod,w
  5805  0102  00B2               	movwf	abs@a
  5806  0103  318E  2690  3180   	fcall	_abs
  5807  0106  0140               	movlb	0	; select bank0
  5808  0107  0832               	movf	?_abs,w
  5809  0108  3E30               	addlw	48
  5810  0109  00C2               	movwf	??_dtoa
  5811  010A  0856               	movf	dtoa@i,w
  5812  010B  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5813  010C  0086               	movwf	6
  5814  010D  3001               	movlw	1	; select bank2/3
  5815  010E  0087               	movwf	7
  5816  010F  0842               	movf	??_dtoa,w
  5817  0110  0081               	movwf	1
  5818  0111                     l3004:
  5819                           
  5820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5821  0111  30FF               	movlw	255
  5822  0112  07C8               	addwf	dtoa@p,f
  5823  0113  30FF               	movlw	255
  5824  0114  3DC9               	addwfc	dtoa@p+1,f
  5825  0115                     l3006:
  5826                           
  5827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5828  0115  30FF               	movlw	255
  5829  0116  07CA               	addwf	dtoa@w,f
  5830  0117  30FF               	movlw	255
  5831  0118  3DCB               	addwfc	dtoa@w+1,f
  5832  0119                     l3008:
  5833                           
  5834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5835  0119  300A               	movlw	10
  5836  011A  00A0               	movwf	___aodiv@divisor
  5837  011B  01A1               	clrf	___aodiv@divisor+1
  5838  011C  01A2               	clrf	___aodiv@divisor+2
  5839  011D  01A3               	clrf	___aodiv@divisor+3
  5840  011E  01A4               	clrf	___aodiv@divisor+4
  5841  011F  01A5               	clrf	___aodiv@divisor+5
  5842  0120  01A6               	clrf	___aodiv@divisor+6
  5843  0121  01A7               	clrf	___aodiv@divisor+7
  5844  0122  084E               	movf	dtoa@n,w
  5845  0123  00A8               	movwf	___aodiv@dividend
  5846  0124  084F               	movf	dtoa@n+1,w
  5847  0125  00A9               	movwf	___aodiv@dividend+1
  5848  0126  0850               	movf	dtoa@n+2,w
  5849  0127  00AA               	movwf	___aodiv@dividend+2
  5850  0128  0851               	movf	dtoa@n+3,w
  5851  0129  00AB               	movwf	___aodiv@dividend+3
  5852  012A  0852               	movf	dtoa@n+4,w
  5853  012B  00AC               	movwf	___aodiv@dividend+4
  5854  012C  0853               	movf	dtoa@n+5,w
  5855  012D  00AD               	movwf	___aodiv@dividend+5
  5856  012E  0854               	movf	dtoa@n+6,w
  5857  012F  00AE               	movwf	___aodiv@dividend+6
  5858  0130  0855               	movf	dtoa@n+7,w
  5859  0131  00AF               	movwf	___aodiv@dividend+7
  5860  0132  3181  21BE  3180   	fcall	___aodiv
  5861  0135  0140               	movlb	0	; select bank0
  5862  0136  0820               	movf	?___aodiv,w
  5863  0137  00CE               	movwf	dtoa@n
  5864  0138  0821               	movf	?___aodiv+1,w
  5865  0139  00CF               	movwf	dtoa@n+1
  5866  013A  0822               	movf	?___aodiv+2,w
  5867  013B  00D0               	movwf	dtoa@n+2
  5868  013C  0823               	movf	?___aodiv+3,w
  5869  013D  00D1               	movwf	dtoa@n+3
  5870  013E  0824               	movf	?___aodiv+4,w
  5871  013F  00D2               	movwf	dtoa@n+4
  5872  0140  0825               	movf	?___aodiv+5,w
  5873  0141  00D3               	movwf	dtoa@n+5
  5874  0142  0826               	movf	?___aodiv+6,w
  5875  0143  00D4               	movwf	dtoa@n+6
  5876  0144  0827               	movf	?___aodiv+7,w
  5877  0145  00D5               	movwf	dtoa@n+7
  5878  0146                     l1283:	
  5879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  5880                           
  5881                           
  5882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5883  0146  0140               	movlb	0	; select bank0
  5884  0147  0857               	movf	dtoa@i+1,w
  5885  0148  3A80               	xorlw	128
  5886  0149  00C2               	movwf	??_dtoa
  5887  014A  3080               	movlw	128
  5888  014B  0242               	subwf	??_dtoa,w
  5889  014C  1D03               	skipz
  5890  014D  2950               	goto	u2375
  5891  014E  3001               	movlw	1
  5892  014F  0256               	subwf	dtoa@i,w
  5893  0150                     u2375:
  5894  0150  1C03               	skipc
  5895  0151  2953               	goto	u2371
  5896  0152  2954               	goto	u2370
  5897  0153                     u2371:
  5898  0153  2981               	goto	l3018
  5899  0154                     u2370:
  5900  0154                     l3010:
  5901  0154  0140               	movlb	0	; select bank0
  5902  0155  084E               	movf	dtoa@n,w
  5903  0156  044F               	iorwf	dtoa@n+1,w
  5904  0157  0450               	iorwf	dtoa@n+2,w
  5905  0158  0451               	iorwf	dtoa@n+3,w
  5906  0159  0452               	iorwf	dtoa@n+4,w
  5907  015A  0453               	iorwf	dtoa@n+5,w
  5908  015B  0454               	iorwf	dtoa@n+6,w
  5909  015C  0455               	iorwf	dtoa@n+7,w
  5910  015D  1D03               	skipz
  5911  015E  2960               	goto	u2381
  5912  015F  2961               	goto	u2380
  5913  0160                     u2381:
  5914  0160  28DD               	goto	l3000
  5915  0161                     u2380:
  5916  0161                     l3012:
  5917  0161  0849               	movf	dtoa@p+1,w
  5918  0162  3A80               	xorlw	128
  5919  0163  00C2               	movwf	??_dtoa
  5920  0164  3080               	movlw	128
  5921  0165  0242               	subwf	??_dtoa,w
  5922  0166  1D03               	skipz
  5923  0167  296A               	goto	u2395
  5924  0168  3001               	movlw	1
  5925  0169  0248               	subwf	dtoa@p,w
  5926  016A                     u2395:
  5927  016A  1803               	skipnc
  5928  016B  296D               	goto	u2391
  5929  016C  296E               	goto	u2390
  5930  016D                     u2391:
  5931  016D  28DD               	goto	l3000
  5932  016E                     u2390:
  5933  016E                     l3014:
  5934  016E  0140               	movlb	0	; select bank0
  5935  016F  084B               	movf	dtoa@w+1,w
  5936  0170  3A80               	xorlw	128
  5937  0171  00C2               	movwf	??_dtoa
  5938  0172  3080               	movlw	128
  5939  0173  0242               	subwf	??_dtoa,w
  5940  0174  1D03               	skipz
  5941  0175  2978               	goto	u2405
  5942  0176  3001               	movlw	1
  5943  0177  024A               	subwf	dtoa@w,w
  5944  0178                     u2405:
  5945  0178  1C03               	skipc
  5946  0179  297B               	goto	u2401
  5947  017A  297C               	goto	u2400
  5948  017B                     u2401:
  5949  017B  2981               	goto	l3018
  5950  017C                     u2400:
  5951  017C                     l3016:
  5952  017C  0141               	movlb	1	; select bank1
  5953  017D  18B6               	btfsc	_flags^(0+128),1
  5954  017E  2980               	goto	u2411
  5955  017F  2981               	goto	u2410
  5956  0180                     u2411:
  5957  0180  28DD               	goto	l3000
  5958  0181                     u2410:
  5959  0181                     l3018:
  5960                           
  5961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5962  0181  0140               	movlb	0	; select bank0
  5963  0182  084C               	movf	dtoa@s,w
  5964  0183  044D               	iorwf	dtoa@s+1,w
  5965  0184  1D03               	btfss	3,2
  5966  0185  2987               	goto	u2421
  5967  0186  2988               	goto	u2420
  5968  0187                     u2421:
  5969  0187  298D               	goto	l3022
  5970  0188                     u2420:
  5971  0188                     l3020:
  5972  0188  0141               	movlb	1	; select bank1
  5973  0189  1D36               	btfss	_flags^(0+128),2
  5974  018A  298C               	goto	u2431
  5975  018B  298D               	goto	u2430
  5976  018C                     u2431:
  5977  018C  29AA               	goto	l3032
  5978  018D                     u2430:
  5979  018D                     l3022:
  5980                           
  5981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5982  018D  30FF               	movlw	255
  5983  018E  0140               	movlb	0	; select bank0
  5984  018F  07D6               	addwf	dtoa@i,f
  5985  0190  30FF               	movlw	255
  5986  0191  3DD7               	addwfc	dtoa@i+1,f
  5987  0192                     l3024:
  5988                           
  5989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5990  0192  084C               	movf	dtoa@s,w
  5991  0193  044D               	iorwf	dtoa@s+1,w
  5992  0194  1D03               	btfss	3,2
  5993  0195  2997               	goto	u2441
  5994  0196  2998               	goto	u2440
  5995  0197                     u2441:
  5996  0197  299D               	goto	l3028
  5997  0198                     u2440:
  5998  0198                     l3026:
  5999  0198  302B               	movlw	43
  6000  0199  00C5               	movwf	_dtoa$1547
  6001  019A  3000               	movlw	0
  6002  019B  00C6               	movwf	_dtoa$1547+1
  6003  019C  29A1               	goto	l3030
  6004  019D                     l3028:
  6005  019D  302D               	movlw	45
  6006  019E  00C5               	movwf	_dtoa$1547
  6007  019F  3000               	movlw	0
  6008  01A0  00C6               	movwf	_dtoa$1547+1
  6009  01A1                     l3030:
  6010  01A1  0845               	movf	_dtoa$1547,w
  6011  01A2  00C2               	movwf	??_dtoa
  6012  01A3  0856               	movf	dtoa@i,w
  6013  01A4  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6014  01A5  0086               	movwf	6
  6015  01A6  3001               	movlw	1	; select bank2/3
  6016  01A7  0087               	movwf	7
  6017  01A8  0842               	movf	??_dtoa,w
  6018  01A9  0081               	movwf	1
  6019  01AA                     l3032:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6022  01AA  0140               	movlb	0	; select bank0
  6023  01AB  0856               	movf	dtoa@i,w
  6024  01AC  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6025  01AD  00C2               	movwf	??_dtoa
  6026  01AE  0842               	movf	??_dtoa,w
  6027  01AF  00B0               	movwf	pad@buf
  6028  01B0  084B               	movf	dtoa@w+1,w
  6029  01B1  00B2               	movwf	pad@p+1
  6030  01B2  084A               	movf	dtoa@w,w
  6031  01B3  00B1               	movwf	pad@p
  6032  01B4  0847               	movf	dtoa@fp,w
  6033  01B5  3187  2756  3180   	fcall	_pad
  6034  01B8  0140               	movlb	0	; select bank0
  6035  01B9  0831               	movf	?_pad+1,w
  6036  01BA  00BB               	movwf	?_dtoa+1
  6037  01BB  0830               	movf	?_pad,w
  6038  01BC  00BA               	movwf	?_dtoa
  6039  01BD                     l1297:
  6040  01BD  0008               	return
  6041  01BE                     __end_of_dtoa:
  6042                           
  6043                           	psect	text5
  6044  0756                     __ptext5:	
  6045 ;; *************** function _pad *****************
  6046 ;; Defined at:
  6047 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  fp              1    wreg     PTR struct _IO_FILE
  6050 ;;		 -> NULL(0), 
  6051 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  6052 ;;		 -> dbuf(32), 
  6053 ;;  p               2   17[BANK0 ] int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  6056 ;;		 -> NULL(0), 
  6057 ;;  w               2   22[BANK0 ] int 
  6058 ;;  i               2   20[BANK0 ] int 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  2   16[BANK0 ] int 
  6061 ;; Registers used:
  6062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6068 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6069 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6071 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6072 ;;Total ram usage:        9 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    9
  6075 ;; This function calls:
  6076 ;;		_fputc
  6077 ;;		_fputs
  6078 ;;		_strlen
  6079 ;; This function is called by:
  6080 ;;		_dtoa
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           
  6085                           ;psect for function _pad
  6086  0756                     _pad:
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6090                           ;pad@fp stored from wreg
  6091  0756  0140               	movlb	0	; select bank0
  6092  0757  00B8               	movwf	pad@fp
  6093  0758                     l2954:
  6094                           
  6095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6096  0758  0141               	movlb	1	; select bank1
  6097  0759  1C36               	btfss	_flags^(0+128),0
  6098  075A  2F5C               	goto	u2241
  6099  075B  2F5D               	goto	u2240
  6100  075C                     u2241:
  6101  075C  2F66               	goto	l2958
  6102  075D                     u2240:
  6103  075D                     l2956:
  6104                           
  6105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6106  075D  0140               	movlb	0	; select bank0
  6107  075E  0838               	movf	pad@fp,w
  6108  075F  00B3               	movwf	??_pad
  6109  0760  0833               	movf	??_pad,w
  6110  0761  00A8               	movwf	fputs@fp
  6111  0762  0830               	movf	pad@buf,w
  6112  0763  318F  273D  3187   	fcall	_fputs
  6113  0766                     l2958:
  6114                           
  6115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6116  0766  0140               	movlb	0	; select bank0
  6117  0767  1BB2               	btfsc	pad@p+1,7
  6118  0768  2F6A               	goto	u2251
  6119  0769  2F6B               	goto	u2250
  6120  076A                     u2251:
  6121  076A  2F70               	goto	l2962
  6122  076B                     u2250:
  6123  076B                     l2960:
  6124  076B  0832               	movf	pad@p+1,w
  6125  076C  00B7               	movwf	pad@w+1
  6126  076D  0831               	movf	pad@p,w
  6127  076E  00B6               	movwf	pad@w
  6128  076F  2F72               	goto	l1266
  6129  0770                     l2962:
  6130  0770  01B6               	clrf	pad@w
  6131  0771  01B7               	clrf	pad@w+1
  6132  0772                     l1266:
  6133                           
  6134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6135  0772  01B4               	clrf	pad@i
  6136  0773  01B5               	clrf	pad@i+1
  6137                           
  6138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6139  0774  2F86               	goto	l2968
  6140  0775                     l2964:
  6141                           
  6142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6143  0775  3020               	movlw	32
  6144  0776  0140               	movlb	0	; select bank0
  6145  0777  00A0               	movwf	fputc@c
  6146  0778  3000               	movlw	0
  6147  0779  00A1               	movwf	fputc@c+1
  6148  077A  0838               	movf	pad@fp,w
  6149  077B  00B3               	movwf	??_pad
  6150  077C  0833               	movf	??_pad,w
  6151  077D  00A2               	movwf	fputc@fp
  6152  077E  3187  27AF  3187   	fcall	_fputc
  6153  0781                     l2966:
  6154                           
  6155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6156  0781  3001               	movlw	1
  6157  0782  0140               	movlb	0	; select bank0
  6158  0783  07B4               	addwf	pad@i,f
  6159  0784  3000               	movlw	0
  6160  0785  3DB5               	addwfc	pad@i+1,f
  6161  0786                     l2968:
  6162                           
  6163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6164  0786  0835               	movf	pad@i+1,w
  6165  0787  3A80               	xorlw	128
  6166  0788  00B3               	movwf	??_pad
  6167  0789  0837               	movf	pad@w+1,w
  6168  078A  3A80               	xorlw	128
  6169  078B  0233               	subwf	??_pad,w
  6170  078C  1D03               	skipz
  6171  078D  2F90               	goto	u2265
  6172  078E  0836               	movf	pad@w,w
  6173  078F  0234               	subwf	pad@i,w
  6174  0790                     u2265:
  6175  0790  1C03               	skipc
  6176  0791  2F93               	goto	u2261
  6177  0792  2F94               	goto	u2260
  6178  0793                     u2261:
  6179  0793  2F75               	goto	l2964
  6180  0794                     u2260:
  6181  0794                     l1269:
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6184  0794  0141               	movlb	1	; select bank1
  6185  0795  1836               	btfsc	_flags^(0+128),0
  6186  0796  2F98               	goto	u2271
  6187  0797  2F99               	goto	u2270
  6188  0798                     u2271:
  6189  0798  2FA2               	goto	l1270
  6190  0799                     u2270:
  6191  0799                     l2970:
  6192                           
  6193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6194  0799  0140               	movlb	0	; select bank0
  6195  079A  0838               	movf	pad@fp,w
  6196  079B  00B3               	movwf	??_pad
  6197  079C  0833               	movf	??_pad,w
  6198  079D  00A8               	movwf	fputs@fp
  6199  079E  0830               	movf	pad@buf,w
  6200  079F  318F  273D  3187   	fcall	_fputs
  6201  07A2                     l1270:	
  6202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 92:     }
  6203                           
  6204                           
  6205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6206  07A2  0140               	movlb	0	; select bank0
  6207  07A3  0830               	movf	pad@buf,w
  6208  07A4  318E  2675  3187   	fcall	_strlen
  6209  07A7  0140               	movlb	0	; select bank0
  6210  07A8  0836               	movf	pad@w,w
  6211  07A9  0774               	addwf	?_strlen,w
  6212  07AA  00B0               	movwf	?_pad
  6213  07AB  0837               	movf	pad@w+1,w
  6214  07AC  3D75               	addwfc	?_strlen+1,w
  6215  07AD  00B1               	movwf	?_pad+1
  6216  07AE                     l1271:
  6217  07AE  0008               	return
  6218  07AF                     __end_of_pad:
  6219                           
  6220                           	psect	text6
  6221  0E75                     __ptext6:	
  6222 ;; *************** function _strlen *****************
  6223 ;; Defined at:
  6224 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  s               1    wreg     PTR const unsigned char 
  6227 ;;		 -> dbuf(32), 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  6230 ;;		 -> dbuf(32), 
  6231 ;;  a               1    1[BANK0 ] PTR const unsigned char 
  6232 ;;		 -> dbuf(32), 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  2    4[COMMON] unsigned int 
  6235 ;; Registers used:
  6236 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6245 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6246 ;;Total ram usage:        5 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    5
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_pad
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           
  6257                           ;psect for function _strlen
  6258  0E75                     _strlen:
  6259                           
  6260                           ;incstack = 0
  6261                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6262                           ;strlen@s stored from wreg
  6263  0E75  0140               	movlb	0	; select bank0
  6264  0E76  00A2               	movwf	strlen@s
  6265  0E77                     l2914:
  6266  0E77  0822               	movf	strlen@s,w
  6267  0E78  00A0               	movwf	??_strlen
  6268  0E79  0820               	movf	??_strlen,w
  6269  0E7A  00A1               	movwf	strlen@a
  6270  0E7B  2E80               	goto	l2918
  6271  0E7C                     l2916:
  6272  0E7C  3001               	movlw	1
  6273  0E7D  00A0               	movwf	??_strlen
  6274  0E7E  0820               	movf	??_strlen,w
  6275  0E7F  07A2               	addwf	strlen@s,f
  6276  0E80                     l2918:
  6277  0E80  0822               	movf	strlen@s,w
  6278  0E81  0086               	movwf	6
  6279  0E82  3001               	movlw	1	; select bank2/3
  6280  0E83  0087               	movwf	7
  6281  0E84  0801               	movf	1,w
  6282  0E85  1D03               	btfss	3,2
  6283  0E86  2E88               	goto	u2131
  6284  0E87  2E89               	goto	u2130
  6285  0E88                     u2131:
  6286  0E88  2E7C               	goto	l2916
  6287  0E89                     u2130:
  6288  0E89                     l2920:
  6289  0E89  0821               	movf	strlen@a,w
  6290  0E8A  0222               	subwf	strlen@s,w
  6291  0E8B  00F4               	movwf	?_strlen
  6292  0E8C  01F5               	clrf	?_strlen+1
  6293  0E8D  1BF4               	btfsc	?_strlen,7
  6294  0E8E  03F5               	decf	?_strlen+1,f
  6295  0E8F                     l1344:
  6296  0E8F  0008               	return
  6297  0E90                     __end_of_strlen:
  6298                           
  6299                           	psect	text7
  6300  0F3D                     __ptext7:	
  6301 ;; *************** function _fputs *****************
  6302 ;; Defined at:
  6303 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  s               1    wreg     PTR const unsigned char 
  6306 ;;		 -> dbuf(32), 
  6307 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  6308 ;;		 -> NULL(0), 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  6311 ;;		 -> dbuf(32), 
  6312 ;;  i               2   13[BANK0 ] int 
  6313 ;;  c               1   12[BANK0 ] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  2    8[BANK0 ] int 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6323 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6324 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6325 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6327 ;;Total ram usage:        8 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    8
  6330 ;; This function calls:
  6331 ;;		_fputc
  6332 ;; This function is called by:
  6333 ;;		_pad
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           
  6338                           ;psect for function _fputs
  6339  0F3D                     _fputs:
  6340                           
  6341                           ;incstack = 0
  6342                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6343                           ;fputs@s stored from wreg
  6344  0F3D  0140               	movlb	0	; select bank0
  6345  0F3E  00AF               	movwf	fputs@s
  6346  0F3F                     l2906:
  6347  0F3F  01AD               	clrf	fputs@i
  6348  0F40  01AE               	clrf	fputs@i+1
  6349  0F41  2F55               	goto	l2912
  6350  0F42                     l2908:
  6351  0F42  082C               	movf	fputs@c,w
  6352  0F43  00A9               	movwf	??_fputs
  6353  0F44  01AA               	clrf	??_fputs+1
  6354  0F45  0829               	movf	??_fputs,w
  6355  0F46  00A0               	movwf	fputc@c
  6356  0F47  082A               	movf	??_fputs+1,w
  6357  0F48  00A1               	movwf	fputc@c+1
  6358  0F49  0828               	movf	fputs@fp,w
  6359  0F4A  00AB               	movwf	??_fputs+2
  6360  0F4B  082B               	movf	??_fputs+2,w
  6361  0F4C  00A2               	movwf	fputc@fp
  6362  0F4D  3187  27AF  318F   	fcall	_fputc
  6363  0F50                     l2910:
  6364  0F50  3001               	movlw	1
  6365  0F51  0140               	movlb	0	; select bank0
  6366  0F52  07AD               	addwf	fputs@i,f
  6367  0F53  3000               	movlw	0
  6368  0F54  3DAE               	addwfc	fputs@i+1,f
  6369  0F55                     l2912:
  6370  0F55  082D               	movf	fputs@i,w
  6371  0F56  072F               	addwf	fputs@s,w
  6372  0F57  00A9               	movwf	??_fputs
  6373  0F58  0829               	movf	??_fputs,w
  6374  0F59  0086               	movwf	6
  6375  0F5A  3001               	movlw	1	; select bank2/3
  6376  0F5B  0087               	movwf	7
  6377  0F5C  0801               	movf	1,w
  6378  0F5D  00AA               	movwf	??_fputs+1
  6379  0F5E  082A               	movf	??_fputs+1,w
  6380  0F5F  00AC               	movwf	fputs@c
  6381  0F60  082C               	movf	fputs@c,w
  6382  0F61  1D03               	btfss	3,2
  6383  0F62  2F64               	goto	u2121
  6384  0F63  2F65               	goto	u2120
  6385  0F64                     u2121:
  6386  0F64  2F42               	goto	l2908
  6387  0F65                     u2120:
  6388  0F65                     l1338:
  6389  0F65  0008               	return
  6390  0F66                     __end_of_fputs:
  6391                           
  6392                           	psect	text8
  6393  07AF                     __ptext8:	
  6394 ;; *************** function _fputc *****************
  6395 ;; Defined at:
  6396 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  c               2    0[BANK0 ] int 
  6399 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  6400 ;;		 -> NULL(0), 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  2    0[BANK0 ] int 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6412 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6415 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:        8 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    7
  6419 ;; This function calls:
  6420 ;;		_putch
  6421 ;; This function is called by:
  6422 ;;		_pad
  6423 ;;		_vfpfcnvrt
  6424 ;;		_fputs
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function _fputc
  6430  07AF                     _fputc:
  6431  07AF                     l2892:	
  6432                           ;incstack = 0
  6433                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6434                           
  6435  07AF  0140               	movlb	0	; select bank0
  6436  07B0  0822               	movf	fputc@fp,w
  6437  07B1  1903               	btfsc	3,2
  6438  07B2  2FB4               	goto	u2081
  6439  07B3  2FB5               	goto	u2080
  6440  07B4                     u2081:
  6441  07B4  2FBA               	goto	l2896
  6442  07B5                     u2080:
  6443  07B5                     l2894:
  6444  07B5  0822               	movf	fputc@fp,w
  6445  07B6  1D03               	btfss	3,2
  6446  07B7  2FB9               	goto	u2091
  6447  07B8  2FBA               	goto	u2090
  6448  07B9                     u2091:
  6449  07B9  2FBF               	goto	l2898
  6450  07BA                     u2090:
  6451  07BA                     l2896:
  6452  07BA  0820               	movf	fputc@c,w
  6453  07BB  318D  256F  3187   	fcall	_putch
  6454  07BE  2FEF               	goto	l1330
  6455  07BF                     l2898:
  6456  07BF  0822               	movf	fputc@fp,w
  6457  07C0  3E03               	addlw	3
  6458  07C1  0086               	movwf	6
  6459  07C2  0187               	clrf	7
  6460  07C3  0016               	moviw fsr1++
  6461  07C4  0401               	iorwf	1,w
  6462  07C5  1903               	btfsc	3,2
  6463  07C6  2FC8               	goto	u2101
  6464  07C7  2FC9               	goto	u2100
  6465  07C8                     u2101:
  6466  07C8  2FE6               	goto	l2902
  6467  07C9                     u2100:
  6468  07C9                     l2900:
  6469  07C9  0822               	movf	fputc@fp,w
  6470  07CA  3E03               	addlw	3
  6471  07CB  0086               	movwf	6
  6472  07CC  0187               	clrf	7
  6473  07CD  3F40               	moviw [0]fsr1
  6474  07CE  00A3               	movwf	??_fputc
  6475  07CF  3F41               	moviw [1]fsr1
  6476  07D0  00A4               	movwf	??_fputc+1
  6477  07D1  0A22               	incf	fputc@fp,w
  6478  07D2  0086               	movwf	6
  6479  07D3  0187               	clrf	7
  6480  07D4  3F40               	moviw [0]fsr1
  6481  07D5  00A5               	movwf	??_fputc+2
  6482  07D6  3F41               	moviw [1]fsr1
  6483  07D7  00A6               	movwf	??_fputc+3
  6484  07D8  0826               	movf	??_fputc+3,w
  6485  07D9  3A80               	xorlw	128
  6486  07DA  00A7               	movwf	??_fputc+4
  6487  07DB  0824               	movf	??_fputc+1,w
  6488  07DC  3A80               	xorlw	128
  6489  07DD  0227               	subwf	??_fputc+4,w
  6490  07DE  1D03               	skipz
  6491  07DF  2FE2               	goto	u2115
  6492  07E0  0823               	movf	??_fputc,w
  6493  07E1  0225               	subwf	??_fputc+2,w
  6494  07E2                     u2115:
  6495  07E2  1803               	skipnc
  6496  07E3  2FE5               	goto	u2111
  6497  07E4  2FE6               	goto	u2110
  6498  07E5                     u2111:
  6499  07E5  2FEF               	goto	l1330
  6500  07E6                     u2110:
  6501  07E6                     l2902:
  6502  07E6  0140               	movlb	0	; select bank0
  6503  07E7  0A22               	incf	fputc@fp,w
  6504  07E8  0086               	movwf	6
  6505  07E9  0187               	clrf	7
  6506  07EA  3001               	movlw	1
  6507  07EB  0781               	addwf	1,f
  6508  07EC  3141               	addfsr 1,1
  6509  07ED  1803               	skipnc
  6510  07EE  0A81               	incf	1,f
  6511  07EF                     l1330:
  6512  07EF  0008               	return
  6513  07F0                     __end_of_fputc:
  6514                           
  6515                           	psect	text9
  6516  0D6F                     __ptext9:	
  6517 ;; *************** function _putch *****************
  6518 ;; Defined at:
  6519 ;;		line 176 in file "mcc_generated_files/eusart1.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  txData          1    wreg     unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  txData          1    5[COMMON] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6537 ;;Total ram usage:        1 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    6
  6540 ;; This function calls:
  6541 ;;		_EUSART1_Write
  6542 ;; This function is called by:
  6543 ;;		_fputc
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function _putch
  6549  0D6F                     _putch:
  6550                           
  6551                           ;incstack = 0
  6552                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6553                           ;putch@txData stored from wreg
  6554  0D6F  00F5               	movwf	putch@txData
  6555  0D70                     l2176:
  6556                           
  6557                           ;mcc_generated_files/eusart1.c: 176: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 177: {;mcc_generated_files/eusart1.c: 178:     EUSART1_Write(txData);
  6558  0D70  0875               	movf	putch@txData,w
  6559  0D71  318D  25AB  318D   	fcall	_EUSART1_Write
  6560  0D74                     l195:
  6561  0D74  0008               	return
  6562  0D75                     __end_of_putch:
  6563                           
  6564                           	psect	text10
  6565  0DAB                     __ptext10:	
  6566 ;; *************** function _EUSART1_Write *****************
  6567 ;; Defined at:
  6568 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  txData          1    wreg     unsigned char 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  txData          1    4[COMMON] unsigned char 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        1 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    5
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_putch
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _EUSART1_Write
  6598  0DAB                     _EUSART1_Write:
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _EUSART1_Write: [wreg]
  6602                           ;EUSART1_Write@txData stored from wreg
  6603  0DAB  00F4               	movwf	EUSART1_Write@txData
  6604  0DAC                     l2172:
  6605  0DAC                     l186:	
  6606                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:     }
  6607                           
  6608                           
  6609                           ;mcc_generated_files/eusart1.c: 164:     while(0 == PIR3bits.TX1IF)
  6610  0DAC  014E               	movlb	14	; select bank14
  6611  0DAD  1E0F               	btfss	15,4	;volatile
  6612  0DAE  2DB0               	goto	u1061
  6613  0DAF  2DB1               	goto	u1060
  6614  0DB0                     u1061:
  6615  0DB0  2DAC               	goto	l186
  6616  0DB1                     u1060:
  6617  0DB1                     l2174:
  6618                           
  6619                           ;mcc_generated_files/eusart1.c: 168:     TX1REG = txData;
  6620  0DB1  0874               	movf	EUSART1_Write@txData,w
  6621  0DB2  0142               	movlb	2	; select bank2
  6622  0DB3  009A               	movwf	26	;volatile
  6623  0DB4                     l189:
  6624  0DB4  0008               	return
  6625  0DB5                     __end_of_EUSART1_Write:
  6626                           
  6627                           	psect	text11
  6628  0E90                     __ptext11:	
  6629 ;; *************** function _abs *****************
  6630 ;; Defined at:
  6631 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  a               2   18[BANK0 ] int 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2   18[BANK0 ] int 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6648 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        4 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    5
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_dtoa
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function _abs
  6661  0E90                     _abs:
  6662  0E90                     l2974:	
  6663                           ;incstack = 0
  6664                           ; Regs used in _abs: [wreg+status,2+status,0]
  6665                           
  6666  0E90  0140               	movlb	0	; select bank0
  6667  0E91  0833               	movf	abs@a+1,w
  6668  0E92  3A80               	xorlw	128
  6669  0E93  00B4               	movwf	??_abs
  6670  0E94  3080               	movlw	128
  6671  0E95  0234               	subwf	??_abs,w
  6672  0E96  1D03               	skipz
  6673  0E97  2E9A               	goto	u2285
  6674  0E98  3001               	movlw	1
  6675  0E99  0232               	subwf	abs@a,w
  6676  0E9A                     u2285:
  6677  0E9A  1803               	skipnc
  6678  0E9B  2E9D               	goto	u2281
  6679  0E9C  2E9E               	goto	u2280
  6680  0E9D                     u2281:
  6681  0E9D  2EAB               	goto	l1315
  6682  0E9E                     u2280:
  6683  0E9E                     l2976:
  6684  0E9E  0140               	movlb	0	; select bank0
  6685  0E9F  0932               	comf	abs@a,w
  6686  0EA0  00B4               	movwf	??_abs
  6687  0EA1  0933               	comf	abs@a+1,w
  6688  0EA2  00B5               	movwf	??_abs+1
  6689  0EA3  0AB4               	incf	??_abs,f
  6690  0EA4  1903               	skipnz
  6691  0EA5  0AB5               	incf	??_abs+1,f
  6692  0EA6  0834               	movf	??_abs,w
  6693  0EA7  00B2               	movwf	?_abs
  6694  0EA8  0835               	movf	??_abs+1,w
  6695  0EA9  00B3               	movwf	?_abs+1
  6696  0EAA  2EAB               	goto	l1318
  6697  0EAB                     l1315:
  6698  0EAB                     l1318:
  6699  0EAB  0008               	return
  6700  0EAC                     __end_of_abs:
  6701                           
  6702                           	psect	text12
  6703  03BD                     __ptext12:	
  6704 ;; *************** function ___aomod *****************
  6705 ;; Defined at:
  6706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  divisor         8    0[BANK0 ] long long 
  6709 ;;  dividend        8    8[BANK0 ] long long 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  sign            1   17[BANK0 ] unsigned char 
  6712 ;;  counter         1   16[BANK0 ] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  8    0[BANK0 ] long long 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6722 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6725 ;;      Totals:         1      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6726 ;;Total ram usage:       19 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    5
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_dtoa
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           
  6737                           ;psect for function ___aomod
  6738  03BD                     ___aomod:
  6739  03BD                     l2924:	
  6740                           ;incstack = 0
  6741                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6742                           
  6743  03BD  0140               	movlb	0	; select bank0
  6744  03BE  01B1               	clrf	___aomod@sign
  6745  03BF                     l2926:
  6746  03BF  3028               	movlw	low ___aomod@dividend
  6747  03C0  0086               	movwf	6
  6748  03C1  3000               	movlw	high ___aomod@dividend
  6749  03C2  0087               	movwf	7
  6750  03C3  3F47               	moviw [7]fsr1
  6751  03C4  00F4               	movwf	??___aomod
  6752  03C5  1FF4               	btfss	??___aomod,7
  6753  03C6  2BC8               	goto	u2141
  6754  03C7  2BC9               	goto	u2140
  6755  03C8                     u2141:
  6756  03C8  2BEB               	goto	l2930
  6757  03C9                     u2140:
  6758  03C9                     l2928:
  6759  03C9  0140               	movlb	0	; select bank0
  6760  03CA  09A8               	comf	___aomod@dividend,f
  6761  03CB  09A9               	comf	___aomod@dividend+1,f
  6762  03CC  09AA               	comf	___aomod@dividend+2,f
  6763  03CD  09AB               	comf	___aomod@dividend+3,f
  6764  03CE  09AC               	comf	___aomod@dividend+4,f
  6765  03CF  09AD               	comf	___aomod@dividend+5,f
  6766  03D0  09AE               	comf	___aomod@dividend+6,f
  6767  03D1  09AF               	comf	___aomod@dividend+7,f
  6768  03D2  0AA8               	incf	___aomod@dividend,f
  6769  03D3  1D03               	skipz
  6770  03D4  2BE8               	goto	u215lld
  6771  03D5  0AA9               	incf	___aomod@dividend+1,f
  6772  03D6  1D03               	skipz
  6773  03D7  2BE8               	goto	u215lld
  6774  03D8  0AAA               	incf	___aomod@dividend+2,f
  6775  03D9  1D03               	skipz
  6776  03DA  2BE8               	goto	u215lld
  6777  03DB  0AAB               	incf	___aomod@dividend+3,f
  6778  03DC  1D03               	skipz
  6779  03DD  2BE8               	goto	u215lld
  6780  03DE  0AAC               	incf	___aomod@dividend+4,f
  6781  03DF  1D03               	skipz
  6782  03E0  2BE8               	goto	u215lld
  6783  03E1  0AAD               	incf	___aomod@dividend+5,f
  6784  03E2  1D03               	skipz
  6785  03E3  2BE8               	goto	u215lld
  6786  03E4  0AAE               	incf	___aomod@dividend+6,f
  6787  03E5  1D03               	skipz
  6788  03E6  2BE8               	goto	u215lld
  6789  03E7  0AAF               	incf	___aomod@dividend+7,f
  6790  03E8                     u215lld:
  6791  03E8  0140               	movlb	0	; select bank0
  6792  03E9  01B1               	clrf	___aomod@sign
  6793  03EA  0AB1               	incf	___aomod@sign,f
  6794  03EB                     l2930:
  6795  03EB  3020               	movlw	low ___aomod@divisor
  6796  03EC  0086               	movwf	6
  6797  03ED  3000               	movlw	high ___aomod@divisor
  6798  03EE  0087               	movwf	7
  6799  03EF  3F47               	moviw [7]fsr1
  6800  03F0  00F4               	movwf	??___aomod
  6801  03F1  1FF4               	btfss	??___aomod,7
  6802  03F2  2BF4               	goto	u2161
  6803  03F3  2BF5               	goto	u2160
  6804  03F4                     u2161:
  6805  03F4  2C14               	goto	l2934
  6806  03F5                     u2160:
  6807  03F5                     l2932:
  6808  03F5  0140               	movlb	0	; select bank0
  6809  03F6  09A0               	comf	___aomod@divisor,f
  6810  03F7  09A1               	comf	___aomod@divisor+1,f
  6811  03F8  09A2               	comf	___aomod@divisor+2,f
  6812  03F9  09A3               	comf	___aomod@divisor+3,f
  6813  03FA  09A4               	comf	___aomod@divisor+4,f
  6814  03FB  09A5               	comf	___aomod@divisor+5,f
  6815  03FC  09A6               	comf	___aomod@divisor+6,f
  6816  03FD  09A7               	comf	___aomod@divisor+7,f
  6817  03FE  0AA0               	incf	___aomod@divisor,f
  6818  03FF  1D03               	skipz
  6819  0400  2C14               	goto	u217lld
  6820  0401  0AA1               	incf	___aomod@divisor+1,f
  6821  0402  1D03               	skipz
  6822  0403  2C14               	goto	u217lld
  6823  0404  0AA2               	incf	___aomod@divisor+2,f
  6824  0405  1D03               	skipz
  6825  0406  2C14               	goto	u217lld
  6826  0407  0AA3               	incf	___aomod@divisor+3,f
  6827  0408  1D03               	skipz
  6828  0409  2C14               	goto	u217lld
  6829  040A  0AA4               	incf	___aomod@divisor+4,f
  6830  040B  1D03               	skipz
  6831  040C  2C14               	goto	u217lld
  6832  040D  0AA5               	incf	___aomod@divisor+5,f
  6833  040E  1D03               	skipz
  6834  040F  2C14               	goto	u217lld
  6835  0410  0AA6               	incf	___aomod@divisor+6,f
  6836  0411  1D03               	skipz
  6837  0412  2C14               	goto	u217lld
  6838  0413  0AA7               	incf	___aomod@divisor+7,f
  6839  0414                     u217lld:
  6840  0414                     l2934:
  6841  0414  0140               	movlb	0	; select bank0
  6842  0415  0820               	movf	___aomod@divisor,w
  6843  0416  0421               	iorwf	___aomod@divisor+1,w
  6844  0417  0422               	iorwf	___aomod@divisor+2,w
  6845  0418  0423               	iorwf	___aomod@divisor+3,w
  6846  0419  0424               	iorwf	___aomod@divisor+4,w
  6847  041A  0425               	iorwf	___aomod@divisor+5,w
  6848  041B  0426               	iorwf	___aomod@divisor+6,w
  6849  041C  0427               	iorwf	___aomod@divisor+7,w
  6850  041D  1903               	skipnz
  6851  041E  2C20               	goto	u2181
  6852  041F  2C21               	goto	u2180
  6853  0420                     u2181:
  6854  0420  2C74               	goto	l2950
  6855  0421                     u2180:
  6856  0421                     l2936:
  6857  0421  01B0               	clrf	___aomod@counter
  6858  0422  0AB0               	incf	___aomod@counter,f
  6859  0423  2C30               	goto	l2942
  6860  0424                     l2938:
  6861  0424  35A0               	lslf	___aomod@divisor,f
  6862  0425  0DA1               	rlf	___aomod@divisor+1,f
  6863  0426  0DA2               	rlf	___aomod@divisor+2,f
  6864  0427  0DA3               	rlf	___aomod@divisor+3,f
  6865  0428  0DA4               	rlf	___aomod@divisor+4,f
  6866  0429  0DA5               	rlf	___aomod@divisor+5,f
  6867  042A  0DA6               	rlf	___aomod@divisor+6,f
  6868  042B  0DA7               	rlf	___aomod@divisor+7,f
  6869  042C                     l2940:
  6870  042C  3001               	movlw	1
  6871  042D  00F4               	movwf	??___aomod
  6872  042E  0874               	movf	??___aomod,w
  6873  042F  07B0               	addwf	___aomod@counter,f
  6874  0430                     l2942:
  6875  0430  1FA7               	btfss	___aomod@divisor+7,7
  6876  0431  2C33               	goto	u2191
  6877  0432  2C34               	goto	u2190
  6878  0433                     u2191:
  6879  0433  2C24               	goto	l2938
  6880  0434                     u2190:
  6881  0434                     l2944:
  6882  0434  0827               	movf	___aomod@divisor+7,w
  6883  0435  022F               	subwf	___aomod@dividend+7,w
  6884  0436  1D03               	skipz
  6885  0437  2C52               	goto	u2205
  6886  0438  0826               	movf	___aomod@divisor+6,w
  6887  0439  022E               	subwf	___aomod@dividend+6,w
  6888  043A  1D03               	skipz
  6889  043B  2C52               	goto	u2205
  6890  043C  0825               	movf	___aomod@divisor+5,w
  6891  043D  022D               	subwf	___aomod@dividend+5,w
  6892  043E  1D03               	skipz
  6893  043F  2C52               	goto	u2205
  6894  0440  0824               	movf	___aomod@divisor+4,w
  6895  0441  022C               	subwf	___aomod@dividend+4,w
  6896  0442  1D03               	skipz
  6897  0443  2C52               	goto	u2205
  6898  0444  0823               	movf	___aomod@divisor+3,w
  6899  0445  022B               	subwf	___aomod@dividend+3,w
  6900  0446  1D03               	skipz
  6901  0447  2C52               	goto	u2205
  6902  0448  0822               	movf	___aomod@divisor+2,w
  6903  0449  022A               	subwf	___aomod@dividend+2,w
  6904  044A  1D03               	skipz
  6905  044B  2C52               	goto	u2205
  6906  044C  0821               	movf	___aomod@divisor+1,w
  6907  044D  0229               	subwf	___aomod@dividend+1,w
  6908  044E  1D03               	skipz
  6909  044F  2C52               	goto	u2205
  6910  0450  0820               	movf	___aomod@divisor,w
  6911  0451  0228               	subwf	___aomod@dividend,w
  6912  0452                     u2205:
  6913  0452  1C03               	skipc
  6914  0453  2C55               	goto	u2201
  6915  0454  2C56               	goto	u2200
  6916  0455                     u2201:
  6917  0455  2C66               	goto	l2948
  6918  0456                     u2200:
  6919  0456                     l2946:
  6920  0456  0820               	movf	___aomod@divisor,w
  6921  0457  02A8               	subwf	___aomod@dividend,f
  6922  0458  0821               	movf	___aomod@divisor+1,w
  6923  0459  3BA9               	subwfb	___aomod@dividend+1,f
  6924  045A  0822               	movf	___aomod@divisor+2,w
  6925  045B  3BAA               	subwfb	___aomod@dividend+2,f
  6926  045C  0823               	movf	___aomod@divisor+3,w
  6927  045D  3BAB               	subwfb	___aomod@dividend+3,f
  6928  045E  0824               	movf	___aomod@divisor+4,w
  6929  045F  3BAC               	subwfb	___aomod@dividend+4,f
  6930  0460  0825               	movf	___aomod@divisor+5,w
  6931  0461  3BAD               	subwfb	___aomod@dividend+5,f
  6932  0462  0826               	movf	___aomod@divisor+6,w
  6933  0463  3BAE               	subwfb	___aomod@dividend+6,f
  6934  0464  0827               	movf	___aomod@divisor+7,w
  6935  0465  3BAF               	subwfb	___aomod@dividend+7,f
  6936  0466                     l2948:
  6937  0466  36A7               	lsrf	___aomod@divisor+7,f
  6938  0467  0CA6               	rrf	___aomod@divisor+6,f
  6939  0468  0CA5               	rrf	___aomod@divisor+5,f
  6940  0469  0CA4               	rrf	___aomod@divisor+4,f
  6941  046A  0CA3               	rrf	___aomod@divisor+3,f
  6942  046B  0CA2               	rrf	___aomod@divisor+2,f
  6943  046C  0CA1               	rrf	___aomod@divisor+1,f
  6944  046D  0CA0               	rrf	___aomod@divisor,f
  6945  046E  3001               	movlw	1
  6946  046F  02B0               	subwf	___aomod@counter,f
  6947  0470  1D03               	btfss	3,2
  6948  0471  2C73               	goto	u2211
  6949  0472  2C74               	goto	u2210
  6950  0473                     u2211:
  6951  0473  2C34               	goto	l2944
  6952  0474                     u2210:
  6953  0474                     l2950:
  6954  0474  0831               	movf	___aomod@sign,w
  6955  0475  1903               	btfsc	3,2
  6956  0476  2C78               	goto	u2221
  6957  0477  2C79               	goto	u2220
  6958  0478                     u2221:
  6959  0478  2C97               	goto	l834
  6960  0479                     u2220:
  6961  0479                     l2952:
  6962  0479  09A8               	comf	___aomod@dividend,f
  6963  047A  09A9               	comf	___aomod@dividend+1,f
  6964  047B  09AA               	comf	___aomod@dividend+2,f
  6965  047C  09AB               	comf	___aomod@dividend+3,f
  6966  047D  09AC               	comf	___aomod@dividend+4,f
  6967  047E  09AD               	comf	___aomod@dividend+5,f
  6968  047F  09AE               	comf	___aomod@dividend+6,f
  6969  0480  09AF               	comf	___aomod@dividend+7,f
  6970  0481  0AA8               	incf	___aomod@dividend,f
  6971  0482  1D03               	skipz
  6972  0483  2C97               	goto	u223lld
  6973  0484  0AA9               	incf	___aomod@dividend+1,f
  6974  0485  1D03               	skipz
  6975  0486  2C97               	goto	u223lld
  6976  0487  0AAA               	incf	___aomod@dividend+2,f
  6977  0488  1D03               	skipz
  6978  0489  2C97               	goto	u223lld
  6979  048A  0AAB               	incf	___aomod@dividend+3,f
  6980  048B  1D03               	skipz
  6981  048C  2C97               	goto	u223lld
  6982  048D  0AAC               	incf	___aomod@dividend+4,f
  6983  048E  1D03               	skipz
  6984  048F  2C97               	goto	u223lld
  6985  0490  0AAD               	incf	___aomod@dividend+5,f
  6986  0491  1D03               	skipz
  6987  0492  2C97               	goto	u223lld
  6988  0493  0AAE               	incf	___aomod@dividend+6,f
  6989  0494  1D03               	skipz
  6990  0495  2C97               	goto	u223lld
  6991  0496  0AAF               	incf	___aomod@dividend+7,f
  6992  0497                     u223lld:
  6993  0497                     l834:
  6994  0497  0140               	movlb	0	; select bank0
  6995  0498  0828               	movf	___aomod@dividend,w
  6996  0499  00A0               	movwf	?___aomod
  6997  049A  0829               	movf	___aomod@dividend+1,w
  6998  049B  00A1               	movwf	?___aomod+1
  6999  049C  082A               	movf	___aomod@dividend+2,w
  7000  049D  00A2               	movwf	?___aomod+2
  7001  049E  082B               	movf	___aomod@dividend+3,w
  7002  049F  00A3               	movwf	?___aomod+3
  7003  04A0  082C               	movf	___aomod@dividend+4,w
  7004  04A1  00A4               	movwf	?___aomod+4
  7005  04A2  082D               	movf	___aomod@dividend+5,w
  7006  04A3  00A5               	movwf	?___aomod+5
  7007  04A4  082E               	movf	___aomod@dividend+6,w
  7008  04A5  00A6               	movwf	?___aomod+6
  7009  04A6  082F               	movf	___aomod@dividend+7,w
  7010  04A7  00A7               	movwf	?___aomod+7
  7011  04A8                     l835:
  7012  04A8  0008               	return
  7013  04A9                     __end_of___aomod:
  7014                           
  7015                           	psect	text13
  7016  01BE                     __ptext13:	
  7017 ;; *************** function ___aodiv *****************
  7018 ;; Defined at:
  7019 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  divisor         8    0[BANK0 ] long long 
  7022 ;;  dividend        8    8[BANK0 ] long long 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  quotient        8   18[BANK0 ] long long 
  7025 ;;  sign            1   17[BANK0 ] unsigned char 
  7026 ;;  counter         1   16[BANK0 ] unsigned char 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  8    0[BANK0 ] long long 
  7029 ;; Registers used:
  7030 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7036 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7037 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7039 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7040 ;;Total ram usage:       27 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    5
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		_dtoa
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           
  7051                           ;psect for function ___aodiv
  7052  01BE                     ___aodiv:
  7053  01BE                     l2210:	
  7054                           ;incstack = 0
  7055                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7056                           
  7057  01BE  0140               	movlb	0	; select bank0
  7058  01BF  01B1               	clrf	___aodiv@sign
  7059  01C0                     l2212:
  7060  01C0  3020               	movlw	low ___aodiv@divisor
  7061  01C1  0086               	movwf	6
  7062  01C2  3000               	movlw	high ___aodiv@divisor
  7063  01C3  0087               	movwf	7
  7064  01C4  3F47               	moviw [7]fsr1
  7065  01C5  00F4               	movwf	??___aodiv
  7066  01C6  1FF4               	btfss	??___aodiv,7
  7067  01C7  29C9               	goto	u1131
  7068  01C8  29CA               	goto	u1130
  7069  01C9                     u1131:
  7070  01C9  29EC               	goto	l2216
  7071  01CA                     u1130:
  7072  01CA                     l2214:
  7073  01CA  0140               	movlb	0	; select bank0
  7074  01CB  09A0               	comf	___aodiv@divisor,f
  7075  01CC  09A1               	comf	___aodiv@divisor+1,f
  7076  01CD  09A2               	comf	___aodiv@divisor+2,f
  7077  01CE  09A3               	comf	___aodiv@divisor+3,f
  7078  01CF  09A4               	comf	___aodiv@divisor+4,f
  7079  01D0  09A5               	comf	___aodiv@divisor+5,f
  7080  01D1  09A6               	comf	___aodiv@divisor+6,f
  7081  01D2  09A7               	comf	___aodiv@divisor+7,f
  7082  01D3  0AA0               	incf	___aodiv@divisor,f
  7083  01D4  1D03               	skipz
  7084  01D5  29E9               	goto	u114lld
  7085  01D6  0AA1               	incf	___aodiv@divisor+1,f
  7086  01D7  1D03               	skipz
  7087  01D8  29E9               	goto	u114lld
  7088  01D9  0AA2               	incf	___aodiv@divisor+2,f
  7089  01DA  1D03               	skipz
  7090  01DB  29E9               	goto	u114lld
  7091  01DC  0AA3               	incf	___aodiv@divisor+3,f
  7092  01DD  1D03               	skipz
  7093  01DE  29E9               	goto	u114lld
  7094  01DF  0AA4               	incf	___aodiv@divisor+4,f
  7095  01E0  1D03               	skipz
  7096  01E1  29E9               	goto	u114lld
  7097  01E2  0AA5               	incf	___aodiv@divisor+5,f
  7098  01E3  1D03               	skipz
  7099  01E4  29E9               	goto	u114lld
  7100  01E5  0AA6               	incf	___aodiv@divisor+6,f
  7101  01E6  1D03               	skipz
  7102  01E7  29E9               	goto	u114lld
  7103  01E8  0AA7               	incf	___aodiv@divisor+7,f
  7104  01E9                     u114lld:
  7105  01E9  0140               	movlb	0	; select bank0
  7106  01EA  01B1               	clrf	___aodiv@sign
  7107  01EB  0AB1               	incf	___aodiv@sign,f
  7108  01EC                     l2216:
  7109  01EC  3028               	movlw	low ___aodiv@dividend
  7110  01ED  0086               	movwf	6
  7111  01EE  3000               	movlw	high ___aodiv@dividend
  7112  01EF  0087               	movwf	7
  7113  01F0  3F47               	moviw [7]fsr1
  7114  01F1  00F4               	movwf	??___aodiv
  7115  01F2  1FF4               	btfss	??___aodiv,7
  7116  01F3  29F5               	goto	u1151
  7117  01F4  29F6               	goto	u1150
  7118  01F5                     u1151:
  7119  01F5  2A1A               	goto	l2222
  7120  01F6                     u1150:
  7121  01F6                     l2218:
  7122  01F6  0140               	movlb	0	; select bank0
  7123  01F7  09A8               	comf	___aodiv@dividend,f
  7124  01F8  09A9               	comf	___aodiv@dividend+1,f
  7125  01F9  09AA               	comf	___aodiv@dividend+2,f
  7126  01FA  09AB               	comf	___aodiv@dividend+3,f
  7127  01FB  09AC               	comf	___aodiv@dividend+4,f
  7128  01FC  09AD               	comf	___aodiv@dividend+5,f
  7129  01FD  09AE               	comf	___aodiv@dividend+6,f
  7130  01FE  09AF               	comf	___aodiv@dividend+7,f
  7131  01FF  0AA8               	incf	___aodiv@dividend,f
  7132  0200  1D03               	skipz
  7133  0201  2A15               	goto	u116lld
  7134  0202  0AA9               	incf	___aodiv@dividend+1,f
  7135  0203  1D03               	skipz
  7136  0204  2A15               	goto	u116lld
  7137  0205  0AAA               	incf	___aodiv@dividend+2,f
  7138  0206  1D03               	skipz
  7139  0207  2A15               	goto	u116lld
  7140  0208  0AAB               	incf	___aodiv@dividend+3,f
  7141  0209  1D03               	skipz
  7142  020A  2A15               	goto	u116lld
  7143  020B  0AAC               	incf	___aodiv@dividend+4,f
  7144  020C  1D03               	skipz
  7145  020D  2A15               	goto	u116lld
  7146  020E  0AAD               	incf	___aodiv@dividend+5,f
  7147  020F  1D03               	skipz
  7148  0210  2A15               	goto	u116lld
  7149  0211  0AAE               	incf	___aodiv@dividend+6,f
  7150  0212  1D03               	skipz
  7151  0213  2A15               	goto	u116lld
  7152  0214  0AAF               	incf	___aodiv@dividend+7,f
  7153  0215                     u116lld:
  7154  0215                     l2220:
  7155  0215  3001               	movlw	1
  7156  0216  00F4               	movwf	??___aodiv
  7157  0217  0874               	movf	??___aodiv,w
  7158  0218  0140               	movlb	0	; select bank0
  7159  0219  06B1               	xorwf	___aodiv@sign,f
  7160  021A                     l2222:
  7161  021A  3032               	movlw	low ___aodiv@quotient
  7162  021B  0086               	movwf	6
  7163  021C  3000               	movlw	high ___aodiv@quotient
  7164  021D  0087               	movwf	7
  7165  021E  3008               	movlw	8
  7166  021F  00F4               	movwf	??___aodiv
  7167  0220  3000               	movlw	0
  7168  0221                     u1170:
  7169  0221  001E               	movwi fsr1++
  7170  0222  0BF4               	decfsz	??___aodiv,f
  7171  0223  2A21               	goto	u1170
  7172  0224                     l2224:
  7173  0224  0140               	movlb	0	; select bank0
  7174  0225  0820               	movf	___aodiv@divisor,w
  7175  0226  0421               	iorwf	___aodiv@divisor+1,w
  7176  0227  0422               	iorwf	___aodiv@divisor+2,w
  7177  0228  0423               	iorwf	___aodiv@divisor+3,w
  7178  0229  0424               	iorwf	___aodiv@divisor+4,w
  7179  022A  0425               	iorwf	___aodiv@divisor+5,w
  7180  022B  0426               	iorwf	___aodiv@divisor+6,w
  7181  022C  0427               	iorwf	___aodiv@divisor+7,w
  7182  022D  1903               	skipnz
  7183  022E  2A30               	goto	u1181
  7184  022F  2A31               	goto	u1180
  7185  0230                     u1181:
  7186  0230  2A8D               	goto	l2244
  7187  0231                     u1180:
  7188  0231                     l2226:
  7189  0231  01B0               	clrf	___aodiv@counter
  7190  0232  0AB0               	incf	___aodiv@counter,f
  7191  0233  2A40               	goto	l2232
  7192  0234                     l2228:
  7193  0234  35A0               	lslf	___aodiv@divisor,f
  7194  0235  0DA1               	rlf	___aodiv@divisor+1,f
  7195  0236  0DA2               	rlf	___aodiv@divisor+2,f
  7196  0237  0DA3               	rlf	___aodiv@divisor+3,f
  7197  0238  0DA4               	rlf	___aodiv@divisor+4,f
  7198  0239  0DA5               	rlf	___aodiv@divisor+5,f
  7199  023A  0DA6               	rlf	___aodiv@divisor+6,f
  7200  023B  0DA7               	rlf	___aodiv@divisor+7,f
  7201  023C                     l2230:
  7202  023C  3001               	movlw	1
  7203  023D  00F4               	movwf	??___aodiv
  7204  023E  0874               	movf	??___aodiv,w
  7205  023F  07B0               	addwf	___aodiv@counter,f
  7206  0240                     l2232:
  7207  0240  1FA7               	btfss	___aodiv@divisor+7,7
  7208  0241  2A43               	goto	u1191
  7209  0242  2A44               	goto	u1190
  7210  0243                     u1191:
  7211  0243  2A34               	goto	l2228
  7212  0244                     u1190:
  7213  0244                     l2234:
  7214  0244  35B2               	lslf	___aodiv@quotient,f
  7215  0245  0DB3               	rlf	___aodiv@quotient+1,f
  7216  0246  0DB4               	rlf	___aodiv@quotient+2,f
  7217  0247  0DB5               	rlf	___aodiv@quotient+3,f
  7218  0248  0DB6               	rlf	___aodiv@quotient+4,f
  7219  0249  0DB7               	rlf	___aodiv@quotient+5,f
  7220  024A  0DB8               	rlf	___aodiv@quotient+6,f
  7221  024B  0DB9               	rlf	___aodiv@quotient+7,f
  7222  024C                     l2236:
  7223  024C  0827               	movf	___aodiv@divisor+7,w
  7224  024D  022F               	subwf	___aodiv@dividend+7,w
  7225  024E  1D03               	skipz
  7226  024F  2A6A               	goto	u1205
  7227  0250  0826               	movf	___aodiv@divisor+6,w
  7228  0251  022E               	subwf	___aodiv@dividend+6,w
  7229  0252  1D03               	skipz
  7230  0253  2A6A               	goto	u1205
  7231  0254  0825               	movf	___aodiv@divisor+5,w
  7232  0255  022D               	subwf	___aodiv@dividend+5,w
  7233  0256  1D03               	skipz
  7234  0257  2A6A               	goto	u1205
  7235  0258  0824               	movf	___aodiv@divisor+4,w
  7236  0259  022C               	subwf	___aodiv@dividend+4,w
  7237  025A  1D03               	skipz
  7238  025B  2A6A               	goto	u1205
  7239  025C  0823               	movf	___aodiv@divisor+3,w
  7240  025D  022B               	subwf	___aodiv@dividend+3,w
  7241  025E  1D03               	skipz
  7242  025F  2A6A               	goto	u1205
  7243  0260  0822               	movf	___aodiv@divisor+2,w
  7244  0261  022A               	subwf	___aodiv@dividend+2,w
  7245  0262  1D03               	skipz
  7246  0263  2A6A               	goto	u1205
  7247  0264  0821               	movf	___aodiv@divisor+1,w
  7248  0265  0229               	subwf	___aodiv@dividend+1,w
  7249  0266  1D03               	skipz
  7250  0267  2A6A               	goto	u1205
  7251  0268  0820               	movf	___aodiv@divisor,w
  7252  0269  0228               	subwf	___aodiv@dividend,w
  7253  026A                     u1205:
  7254  026A  1C03               	skipc
  7255  026B  2A6D               	goto	u1201
  7256  026C  2A6E               	goto	u1200
  7257  026D                     u1201:
  7258  026D  2A7F               	goto	l2242
  7259  026E                     u1200:
  7260  026E                     l2238:
  7261  026E  0820               	movf	___aodiv@divisor,w
  7262  026F  02A8               	subwf	___aodiv@dividend,f
  7263  0270  0821               	movf	___aodiv@divisor+1,w
  7264  0271  3BA9               	subwfb	___aodiv@dividend+1,f
  7265  0272  0822               	movf	___aodiv@divisor+2,w
  7266  0273  3BAA               	subwfb	___aodiv@dividend+2,f
  7267  0274  0823               	movf	___aodiv@divisor+3,w
  7268  0275  3BAB               	subwfb	___aodiv@dividend+3,f
  7269  0276  0824               	movf	___aodiv@divisor+4,w
  7270  0277  3BAC               	subwfb	___aodiv@dividend+4,f
  7271  0278  0825               	movf	___aodiv@divisor+5,w
  7272  0279  3BAD               	subwfb	___aodiv@dividend+5,f
  7273  027A  0826               	movf	___aodiv@divisor+6,w
  7274  027B  3BAE               	subwfb	___aodiv@dividend+6,f
  7275  027C  0827               	movf	___aodiv@divisor+7,w
  7276  027D  3BAF               	subwfb	___aodiv@dividend+7,f
  7277  027E                     l2240:
  7278  027E  1432               	bsf	___aodiv@quotient,0
  7279  027F                     l2242:
  7280  027F  36A7               	lsrf	___aodiv@divisor+7,f
  7281  0280  0CA6               	rrf	___aodiv@divisor+6,f
  7282  0281  0CA5               	rrf	___aodiv@divisor+5,f
  7283  0282  0CA4               	rrf	___aodiv@divisor+4,f
  7284  0283  0CA3               	rrf	___aodiv@divisor+3,f
  7285  0284  0CA2               	rrf	___aodiv@divisor+2,f
  7286  0285  0CA1               	rrf	___aodiv@divisor+1,f
  7287  0286  0CA0               	rrf	___aodiv@divisor,f
  7288  0287  3001               	movlw	1
  7289  0288  02B0               	subwf	___aodiv@counter,f
  7290  0289  1D03               	btfss	3,2
  7291  028A  2A8C               	goto	u1211
  7292  028B  2A8D               	goto	u1210
  7293  028C                     u1211:
  7294  028C  2A44               	goto	l2234
  7295  028D                     u1210:
  7296  028D                     l2244:
  7297  028D  0831               	movf	___aodiv@sign,w
  7298  028E  1903               	btfsc	3,2
  7299  028F  2A91               	goto	u1221
  7300  0290  2A92               	goto	u1220
  7301  0291                     u1221:
  7302  0291  2AB0               	goto	l821
  7303  0292                     u1220:
  7304  0292                     l2246:
  7305  0292  09B2               	comf	___aodiv@quotient,f
  7306  0293  09B3               	comf	___aodiv@quotient+1,f
  7307  0294  09B4               	comf	___aodiv@quotient+2,f
  7308  0295  09B5               	comf	___aodiv@quotient+3,f
  7309  0296  09B6               	comf	___aodiv@quotient+4,f
  7310  0297  09B7               	comf	___aodiv@quotient+5,f
  7311  0298  09B8               	comf	___aodiv@quotient+6,f
  7312  0299  09B9               	comf	___aodiv@quotient+7,f
  7313  029A  0AB2               	incf	___aodiv@quotient,f
  7314  029B  1D03               	skipz
  7315  029C  2AB0               	goto	u123lld
  7316  029D  0AB3               	incf	___aodiv@quotient+1,f
  7317  029E  1D03               	skipz
  7318  029F  2AB0               	goto	u123lld
  7319  02A0  0AB4               	incf	___aodiv@quotient+2,f
  7320  02A1  1D03               	skipz
  7321  02A2  2AB0               	goto	u123lld
  7322  02A3  0AB5               	incf	___aodiv@quotient+3,f
  7323  02A4  1D03               	skipz
  7324  02A5  2AB0               	goto	u123lld
  7325  02A6  0AB6               	incf	___aodiv@quotient+4,f
  7326  02A7  1D03               	skipz
  7327  02A8  2AB0               	goto	u123lld
  7328  02A9  0AB7               	incf	___aodiv@quotient+5,f
  7329  02AA  1D03               	skipz
  7330  02AB  2AB0               	goto	u123lld
  7331  02AC  0AB8               	incf	___aodiv@quotient+6,f
  7332  02AD  1D03               	skipz
  7333  02AE  2AB0               	goto	u123lld
  7334  02AF  0AB9               	incf	___aodiv@quotient+7,f
  7335  02B0                     u123lld:
  7336  02B0                     l821:
  7337  02B0  0140               	movlb	0	; select bank0
  7338  02B1  0832               	movf	___aodiv@quotient,w
  7339  02B2  00A0               	movwf	?___aodiv
  7340  02B3  0833               	movf	___aodiv@quotient+1,w
  7341  02B4  00A1               	movwf	?___aodiv+1
  7342  02B5  0834               	movf	___aodiv@quotient+2,w
  7343  02B6  00A2               	movwf	?___aodiv+2
  7344  02B7  0835               	movf	___aodiv@quotient+3,w
  7345  02B8  00A3               	movwf	?___aodiv+3
  7346  02B9  0836               	movf	___aodiv@quotient+4,w
  7347  02BA  00A4               	movwf	?___aodiv+4
  7348  02BB  0837               	movf	___aodiv@quotient+5,w
  7349  02BC  00A5               	movwf	?___aodiv+5
  7350  02BD  0838               	movf	___aodiv@quotient+6,w
  7351  02BE  00A6               	movwf	?___aodiv+6
  7352  02BF  0839               	movf	___aodiv@quotient+7,w
  7353  02C0  00A7               	movwf	?___aodiv+7
  7354  02C1                     l822:
  7355  02C1  0008               	return
  7356  02C2                     __end_of___aodiv:
  7357                           
  7358                           	psect	text14
  7359  0DBF                     __ptext14:	
  7360 ;; *************** function _SYSTEM_Initialize *****************
  7361 ;; Defined at:
  7362 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;		None
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, status,2, status,0, pclath, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7380 ;;Total ram usage:        0 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    7
  7383 ;; This function calls:
  7384 ;;		_ADCC_Initialize
  7385 ;;		_EUSART1_Initialize
  7386 ;;		_OSCILLATOR_Initialize
  7387 ;;		_PIN_MANAGER_Initialize
  7388 ;;		_PMD_Initialize
  7389 ;;		_TMR0_Initialize
  7390 ;; This function is called by:
  7391 ;;		_main
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           
  7396                           ;psect for function _SYSTEM_Initialize
  7397  0DBF                     _SYSTEM_Initialize:
  7398  0DBF                     l2692:	
  7399                           ;incstack = 0
  7400                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7401                           
  7402                           
  7403                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7404  0DBF  318D  25A1  318D   	fcall	_PMD_Initialize
  7405  0DC2                     l2694:
  7406                           
  7407                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7408  0DC2  318F  2714  318D   	fcall	_PIN_MANAGER_Initialize
  7409  0DC5                     l2696:
  7410                           
  7411                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7412  0DC5  318D  2598  318D   	fcall	_OSCILLATOR_Initialize
  7413  0DC8                     l2698:
  7414                           
  7415                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  7416  0DC8  318E  265B  318D   	fcall	_ADCC_Initialize
  7417  0DCB                     l2700:
  7418                           
  7419                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  7420  0DCB  318D  25D2  318D   	fcall	_TMR0_Initialize
  7421  0DCE                     l2702:
  7422                           
  7423                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  7424  0DCE  318F  2766  318D   	fcall	_EUSART1_Initialize
  7425  0DD1                     l41:
  7426  0DD1  0008               	return
  7427  0DD2                     __end_of_SYSTEM_Initialize:
  7428                           
  7429                           	psect	text15
  7430  0DD2                     __ptext15:	
  7431 ;; *************** function _TMR0_Initialize *****************
  7432 ;; Defined at:
  7433 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;		None
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7451 ;;Total ram usage:        0 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    6
  7454 ;; This function calls:
  7455 ;;		_TMR0_SetInterruptHandler
  7456 ;; This function is called by:
  7457 ;;		_SYSTEM_Initialize
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           
  7462                           ;psect for function _TMR0_Initialize
  7463  0DD2                     _TMR0_Initialize:
  7464  0DD2                     l2504:	
  7465                           ;incstack = 0
  7466                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7467                           
  7468                           
  7469                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x49;
  7470  0DD2  3049               	movlw	73
  7471  0DD3  014B               	movlb	11	; select bank11
  7472  0DD4  009F               	movwf	31	;volatile
  7473                           
  7474                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xC2;
  7475  0DD5  30C2               	movlw	194
  7476  0DD6  009D               	movwf	29	;volatile
  7477  0DD7                     l2506:
  7478                           
  7479                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  7480  0DD7  019C               	clrf	28	;volatile
  7481  0DD8                     l2508:
  7482                           
  7483                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  7484  0DD8  014E               	movlb	14	; select bank14
  7485  0DD9  128C               	bcf	12,5	;volatile
  7486  0DDA                     l2510:
  7487                           
  7488                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  7489  0DDA  1696               	bsf	22,5	;volatile
  7490  0DDB                     l2512:
  7491                           
  7492                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7493  0DDB  30FE               	movlw	low _TMR0_DefaultInterruptHandler
  7494  0DDC  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7495  0DDD  3007               	movlw	high _TMR0_DefaultInterruptHandler
  7496  0DDE  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7497  0DDF  318D  2569  318D   	fcall	_TMR0_SetInterruptHandler
  7498  0DE2                     l2514:
  7499                           
  7500                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  7501  0DE2  3080               	movlw	128
  7502  0DE3  014B               	movlb	11	; select bank11
  7503  0DE4  009E               	movwf	30	;volatile
  7504  0DE5                     l437:
  7505  0DE5  0008               	return
  7506  0DE6                     __end_of_TMR0_Initialize:
  7507                           
  7508                           	psect	text16
  7509  0D69                     __ptext16:	
  7510 ;; *************** function _TMR0_SetInterruptHandler *****************
  7511 ;; Defined at:
  7512 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7515 ;;		 -> miTimer0ISR(1), TMR0_DefaultInterruptHandler(1), 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7531 ;;Total ram usage:        2 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    5
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_TMR0_Initialize
  7538 ;;		_main
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _TMR0_SetInterruptHandler
  7544  0D69                     _TMR0_SetInterruptHandler:
  7545  0D69                     l2382:	
  7546                           ;incstack = 0
  7547                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7548                           
  7549                           
  7550                           ;mcc_generated_files/tmr0.c: 151:     TMR0_InterruptHandler = InterruptHandler;
  7551  0D69  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7552  0D6A  0141               	movlb	1	; select bank1
  7553  0D6B  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7554  0D6C  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7555  0D6D  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
  7556  0D6E                     l465:
  7557  0D6E  0008               	return
  7558  0D6F                     __end_of_TMR0_SetInterruptHandler:
  7559                           
  7560                           	psect	text17
  7561  0DA1                     __ptext17:	
  7562 ;; *************** function _PMD_Initialize *****************
  7563 ;; Defined at:
  7564 ;;		line 74 in file "mcc_generated_files/mcc.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		status,2
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7582 ;;Total ram usage:        0 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    5
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_SYSTEM_Initialize
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function _PMD_Initialize
  7594  0DA1                     _PMD_Initialize:
  7595  0DA1                     l2460:	
  7596                           ;incstack = 0
  7597                           ; Regs used in _PMD_Initialize: [status,2]
  7598                           
  7599                           
  7600                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  7601  0DA1  014F               	movlb	15	; select bank15
  7602  0DA2  0196               	clrf	22	;volatile
  7603                           
  7604                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  7605  0DA3  0197               	clrf	23	;volatile
  7606                           
  7607                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  7608  0DA4  0198               	clrf	24	;volatile
  7609                           
  7610                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  7611  0DA5  0199               	clrf	25	;volatile
  7612                           
  7613                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  7614  0DA6  019A               	clrf	26	;volatile
  7615                           
  7616                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  7617  0DA7  019B               	clrf	27	;volatile
  7618                           
  7619                           ;mcc_generated_files/mcc.c: 89:     PMD6 = 0x00;
  7620  0DA8  019C               	clrf	28	;volatile
  7621                           
  7622                           ;mcc_generated_files/mcc.c: 91:     PMD7 = 0x00;
  7623  0DA9  019D               	clrf	29	;volatile
  7624  0DAA                     l47:
  7625  0DAA  0008               	return
  7626  0DAB                     __end_of_PMD_Initialize:
  7627                           
  7628                           	psect	text18
  7629  0F14                     __ptext18:	
  7630 ;; *************** function _PIN_MANAGER_Initialize *****************
  7631 ;; Defined at:
  7632 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    5
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_SYSTEM_Initialize
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           
  7661                           ;psect for function _PIN_MANAGER_Initialize
  7662  0F14                     _PIN_MANAGER_Initialize:
  7663  0F14                     l2462:	
  7664                           ;incstack = 0
  7665                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7666                           
  7667                           
  7668                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7669  0F14  0140               	movlb	0	; select bank0
  7670  0F15  0198               	clrf	24	;volatile
  7671                           
  7672                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7673  0F16  0199               	clrf	25	;volatile
  7674                           
  7675                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7676  0F17  019A               	clrf	26	;volatile
  7677  0F18                     l2464:
  7678                           
  7679                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  7680  0F18  303F               	movlw	63
  7681  0F19  0092               	movwf	18	;volatile
  7682  0F1A                     l2466:
  7683                           
  7684                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE0;
  7685  0F1A  30E0               	movlw	224
  7686  0F1B  0093               	movwf	19	;volatile
  7687  0F1C                     l2468:
  7688                           
  7689                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  7690  0F1C  30FF               	movlw	255
  7691  0F1D  0094               	movwf	20	;volatile
  7692  0F1E                     l2470:
  7693                           
  7694                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  7695  0F1E  30FF               	movlw	255
  7696  0F1F  017E               	movlb	62	; select bank62
  7697  0F20  00CE               	movwf	78	;volatile
  7698  0F21                     l2472:
  7699                           
  7700                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  7701  0F21  30A0               	movlw	160
  7702  0F22  00C3               	movwf	67	;volatile
  7703  0F23                     l2474:
  7704                           
  7705                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  7706  0F23  3037               	movlw	55
  7707  0F24  00B8               	movwf	56	;volatile
  7708                           
  7709                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7710  0F25  01C4               	clrf	68	;volatile
  7711                           
  7712                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  7713  0F26  01B9               	clrf	57	;volatile
  7714                           
  7715                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  7716  0F27  01CF               	clrf	79	;volatile
  7717                           
  7718                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  7719  0F28  01BA               	clrf	58	;volatile
  7720                           
  7721                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  7722  0F29  01C5               	clrf	69	;volatile
  7723                           
  7724                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  7725  0F2A  01D0               	clrf	80	;volatile
  7726  0F2B                     l2476:
  7727                           
  7728                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  7729  0F2B  3037               	movlw	55
  7730  0F2C  00BB               	movwf	59	;volatile
  7731  0F2D                     l2478:
  7732                           
  7733                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  7734  0F2D  30F0               	movlw	240
  7735  0F2E  00C6               	movwf	70	;volatile
  7736  0F2F                     l2480:
  7737                           
  7738                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  7739  0F2F  30FF               	movlw	255
  7740  0F30  00D1               	movwf	81	;volatile
  7741  0F31                     l2482:
  7742                           
  7743                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  7744  0F31  303F               	movlw	63
  7745  0F32  00BC               	movwf	60	;volatile
  7746  0F33                     l2484:
  7747                           
  7748                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  7749  0F33  30F0               	movlw	240
  7750  0F34  00C7               	movwf	71	;volatile
  7751  0F35                     l2486:
  7752                           
  7753                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  7754  0F35  30FF               	movlw	255
  7755  0F36  00D2               	movwf	82	;volatile
  7756  0F37                     l2488:
  7757                           
  7758                           ;mcc_generated_files/pin_manager.c: 113:     RB4PPS = 0x0F;
  7759  0F37  300F               	movlw	15
  7760  0F38  009C               	movwf	28	;volatile
  7761  0F39                     l2490:
  7762                           
  7763                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0E;
  7764  0F39  300E               	movlw	14
  7765  0F3A  017D               	movlb	61	; select bank61
  7766  0F3B  00CB               	movwf	75	;volatile
  7767  0F3C                     l96:
  7768  0F3C  0008               	return
  7769  0F3D                     __end_of_PIN_MANAGER_Initialize:
  7770                           
  7771                           	psect	text19
  7772  0D98                     __ptext19:	
  7773 ;; *************** function _OSCILLATOR_Initialize *****************
  7774 ;; Defined at:
  7775 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;		None
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;		None
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7793 ;;Total ram usage:        0 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:    5
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_SYSTEM_Initialize
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _OSCILLATOR_Initialize
  7805  0D98                     _OSCILLATOR_Initialize:
  7806  0D98                     l2492:	
  7807                           ;incstack = 0
  7808                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7809                           
  7810                           
  7811                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  7812  0D98  3060               	movlw	96
  7813  0D99  0151               	movlb	17	; select bank17
  7814  0D9A  008D               	movwf	13	;volatile
  7815  0D9B                     l2494:
  7816                           
  7817                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  7818  0D9B  018F               	clrf	15	;volatile
  7819  0D9C                     l2496:
  7820                           
  7821                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  7822  0D9C  0191               	clrf	17	;volatile
  7823                           
  7824                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  7825  0D9D  3002               	movlw	2
  7826  0D9E  0093               	movwf	19	;volatile
  7827  0D9F                     l2498:
  7828                           
  7829                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  7830  0D9F  0192               	clrf	18	;volatile
  7831  0DA0                     l44:
  7832  0DA0  0008               	return
  7833  0DA1                     __end_of_OSCILLATOR_Initialize:
  7834                           
  7835                           	psect	text20
  7836  0F66                     __ptext20:	
  7837 ;; *************** function _EUSART1_Initialize *****************
  7838 ;; Defined at:
  7839 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    6
  7860 ;; This function calls:
  7861 ;;		_EUSART1_SetErrorHandler
  7862 ;;		_EUSART1_SetFramingErrorHandler
  7863 ;;		_EUSART1_SetOverrunErrorHandler
  7864 ;;		_EUSART1_SetRxInterruptHandler
  7865 ;; This function is called by:
  7866 ;;		_SYSTEM_Initialize
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           
  7871                           ;psect for function _EUSART1_Initialize
  7872  0F66                     _EUSART1_Initialize:
  7873  0F66                     l2516:	
  7874                           ;incstack = 0
  7875                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7876                           
  7877                           
  7878                           ;mcc_generated_files/eusart1.c: 86:     PIE3bits.RC1IE = 0;
  7879  0F66  014E               	movlb	14	; select bank14
  7880  0F67  1299               	bcf	25,5	;volatile
  7881  0F68                     l2518:
  7882                           
  7883                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  7884  0F68  30C7               	movlw	low _EUSART1_Receive_ISR
  7885  0F69  00F4               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7886  0F6A  300F               	movlw	high _EUSART1_Receive_ISR
  7887  0F6B  00F5               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  7888  0F6C  318D  2563  318F   	fcall	_EUSART1_SetRxInterruptHandler
  7889  0F6F                     l2520:
  7890                           
  7891                           ;mcc_generated_files/eusart1.c: 91:     BAUD1CON = 0x08;
  7892  0F6F  3008               	movlw	8
  7893  0F70  0142               	movlb	2	; select bank2
  7894  0F71  009F               	movwf	31	;volatile
  7895  0F72                     l2522:
  7896                           
  7897                           ;mcc_generated_files/eusart1.c: 94:     RC1STA = 0x90;
  7898  0F72  3090               	movlw	144
  7899  0F73  009D               	movwf	29	;volatile
  7900  0F74                     l2524:
  7901                           
  7902                           ;mcc_generated_files/eusart1.c: 97:     TX1STA = 0x24;
  7903  0F74  3024               	movlw	36
  7904  0F75  009E               	movwf	30	;volatile
  7905  0F76                     l2526:
  7906                           
  7907                           ;mcc_generated_files/eusart1.c: 100:     SP1BRGL = 0x67;
  7908  0F76  3067               	movlw	103
  7909  0F77  009B               	movwf	27	;volatile
  7910  0F78                     l2528:
  7911                           
  7912                           ;mcc_generated_files/eusart1.c: 103:     SP1BRGH = 0x00;
  7913  0F78  019C               	clrf	28	;volatile
  7914  0F79                     l2530:
  7915                           
  7916                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  7917  0F79  30FD               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7918  0F7A  00F4               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  7919  0F7B  3007               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7920  0F7C  00F5               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  7921  0F7D  318D  2557  318F   	fcall	_EUSART1_SetFramingErrorHandler
  7922  0F80                     l2532:
  7923                           
  7924                           ;mcc_generated_files/eusart1.c: 107:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  7925  0F80  3047               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7926  0F81  00F4               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  7927  0F82  300D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7928  0F83  00F5               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  7929  0F84  318D  255D  318F   	fcall	_EUSART1_SetOverrunErrorHandler
  7930  0F87                     l2534:
  7931                           
  7932                           ;mcc_generated_files/eusart1.c: 108:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  7933  0F87  3043               	movlw	low _EUSART1_DefaultErrorHandler
  7934  0F88  00F4               	movwf	EUSART1_SetErrorHandler@interruptHandler
  7935  0F89  300D               	movlw	high _EUSART1_DefaultErrorHandler
  7936  0F8A  00F5               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  7937  0F8B  318D  2551  318F   	fcall	_EUSART1_SetErrorHandler
  7938                           
  7939                           ;mcc_generated_files/eusart1.c: 110:     eusart1RxLastError.status = 0;
  7940  0F8E  0141               	movlb	1	; select bank1
  7941  0F8F  01C5               	clrf	_eusart1RxLastError^(0+128)	;volatile
  7942                           
  7943                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxHead = 0;
  7944  0F90  01FD               	clrf	_eusart1RxHead	;volatile
  7945                           
  7946                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxTail = 0;
  7947  0F91  01FC               	clrf	_eusart1RxTail	;volatile
  7948                           
  7949                           ;mcc_generated_files/eusart1.c: 115:     eusart1RxCount = 0;
  7950  0F92  01FB               	clrf	_eusart1RxCount	;volatile
  7951  0F93                     l2536:
  7952                           
  7953                           ;mcc_generated_files/eusart1.c: 118:     PIE3bits.RC1IE = 1;
  7954  0F93  014E               	movlb	14	; select bank14
  7955  0F94  1699               	bsf	25,5	;volatile
  7956  0F95                     l162:
  7957  0F95  0008               	return
  7958  0F96                     __end_of_EUSART1_Initialize:
  7959                           
  7960                           	psect	text21
  7961  0D63                     __ptext21:	
  7962 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  7963 ;; Defined at:
  7964 ;;		line 244 in file "mcc_generated_files/eusart1.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  7967 ;;		 -> rxSerialISR(1), EUSART1_Receive_ISR(1), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      void 
  7972 ;; Registers used:
  7973 ;;		wreg
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7983 ;;Total ram usage:        2 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    5
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_EUSART1_Initialize
  7990 ;;		_main
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           
  7995                           ;psect for function _EUSART1_SetRxInterruptHandler
  7996  0D63                     _EUSART1_SetRxInterruptHandler:
  7997  0D63                     l2370:	
  7998                           ;incstack = 0
  7999                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  8000                           
  8001                           
  8002                           ;mcc_generated_files/eusart1.c: 245:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8003  0D63  0875               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  8004  0D64  0141               	movlb	1	; select bank1
  8005  0D65  00D7               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  8006  0D66  0874               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  8007  0D67  00D6               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  8008  0D68                     l227:
  8009  0D68  0008               	return
  8010  0D69                     __end_of_EUSART1_SetRxInterruptHandler:
  8011                           
  8012                           	psect	text22
  8013  0D5D                     __ptext22:	
  8014 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8015 ;; Defined at:
  8016 ;;		line 235 in file "mcc_generated_files/eusart1.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8019 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8035 ;;Total ram usage:        2 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:    5
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_EUSART1_Initialize
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8047  0D5D                     _EUSART1_SetOverrunErrorHandler:
  8048  0D5D                     l2374:	
  8049                           ;incstack = 0
  8050                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8051                           
  8052                           
  8053                           ;mcc_generated_files/eusart1.c: 236:     EUSART1_OverrunErrorHandler = interruptHandler;
  8054  0D5D  0875               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8055  0D5E  0141               	movlb	1	; select bank1
  8056  0D5F  00D3               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  8057  0D60  0874               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8058  0D61  00D2               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  8059  0D62                     l221:
  8060  0D62  0008               	return
  8061  0D63                     __end_of_EUSART1_SetOverrunErrorHandler:
  8062                           
  8063                           	psect	text23
  8064  0D57                     __ptext23:	
  8065 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8066 ;; Defined at:
  8067 ;;		line 231 in file "mcc_generated_files/eusart1.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8070 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8086 ;;Total ram usage:        2 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    5
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_EUSART1_Initialize
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _EUSART1_SetFramingErrorHandler
  8098  0D57                     _EUSART1_SetFramingErrorHandler:
  8099  0D57                     l2372:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  8102                           
  8103                           
  8104                           ;mcc_generated_files/eusart1.c: 232:     EUSART1_FramingErrorHandler = interruptHandler;
  8105  0D57  0875               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  8106  0D58  0141               	movlb	1	; select bank1
  8107  0D59  00D5               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  8108  0D5A  0874               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  8109  0D5B  00D4               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  8110  0D5C                     l218:
  8111  0D5C  0008               	return
  8112  0D5D                     __end_of_EUSART1_SetFramingErrorHandler:
  8113                           
  8114                           	psect	text24
  8115  0D51                     __ptext24:	
  8116 ;; *************** function _EUSART1_SetErrorHandler *****************
  8117 ;; Defined at:
  8118 ;;		line 239 in file "mcc_generated_files/eusart1.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8121 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8137 ;;Total ram usage:        2 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    5
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_EUSART1_Initialize
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           
  8148                           ;psect for function _EUSART1_SetErrorHandler
  8149  0D51                     _EUSART1_SetErrorHandler:
  8150  0D51                     l2376:	
  8151                           ;incstack = 0
  8152                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  8153                           
  8154                           
  8155                           ;mcc_generated_files/eusart1.c: 240:     EUSART1_ErrorHandler = interruptHandler;
  8156  0D51  0875               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  8157  0D52  0141               	movlb	1	; select bank1
  8158  0D53  00D1               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  8159  0D54  0874               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  8160  0D55  00D0               	movwf	_EUSART1_ErrorHandler^(0+128)
  8161  0D56                     l224:
  8162  0D56  0008               	return
  8163  0D57                     __end_of_EUSART1_SetErrorHandler:
  8164                           
  8165                           	psect	text25
  8166  0E5B                     __ptext25:	
  8167 ;; *************** function _ADCC_Initialize *****************
  8168 ;; Defined at:
  8169 ;;		line 63 in file "mcc_generated_files/adcc.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8187 ;;Total ram usage:        0 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:    5
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_SYSTEM_Initialize
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function _ADCC_Initialize
  8199  0E5B                     _ADCC_Initialize:
  8200  0E5B                     l2500:	
  8201                           ;incstack = 0
  8202                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  8203                           
  8204                           
  8205                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  8206  0E5B  0141               	movlb	1	; select bank1
  8207  0E5C  018C               	clrf	12	;volatile
  8208                           
  8209                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  8210  0E5D  018D               	clrf	13	;volatile
  8211                           
  8212                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  8213  0E5E  018E               	clrf	14	;volatile
  8214                           
  8215                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  8216  0E5F  018F               	clrf	15	;volatile
  8217                           
  8218                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  8219  0E60  0192               	clrf	18	;volatile
  8220                           
  8221                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  8222  0E61  0193               	clrf	19	;volatile
  8223                           
  8224                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
  8225  0E62  0198               	clrf	24	;volatile
  8226                           
  8227                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x00;
  8228  0E63  019A               	clrf	26	;volatile
  8229                           
  8230                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
  8231  0E64  019F               	clrf	31	;volatile
  8232                           
  8233                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x00;
  8234  0E65  0142               	movlb	2	; select bank2
  8235  0E66  018C               	clrf	12	;volatile
  8236                           
  8237                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
  8238  0E67  018D               	clrf	13	;volatile
  8239                           
  8240                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
  8241  0E68  018E               	clrf	14	;volatile
  8242                           
  8243                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
  8244  0E69  018F               	clrf	15	;volatile
  8245                           
  8246                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
  8247  0E6A  0190               	clrf	16	;volatile
  8248                           
  8249                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
  8250  0E6B  0192               	clrf	18	;volatile
  8251                           
  8252                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x00;
  8253  0E6C  0193               	clrf	19	;volatile
  8254                           
  8255                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x00;
  8256  0E6D  0194               	clrf	20	;volatile
  8257                           
  8258                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
  8259  0E6E  0195               	clrf	21	;volatile
  8260                           
  8261                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x00;
  8262  0E6F  0196               	clrf	22	;volatile
  8263                           
  8264                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
  8265  0E70  0197               	clrf	23	;volatile
  8266                           
  8267                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x00;
  8268  0E71  0198               	clrf	24	;volatile
  8269  0E72                     l2502:
  8270                           
  8271                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
  8272  0E72  3084               	movlw	132
  8273  0E73  0091               	movwf	17	;volatile
  8274  0E74                     l306:
  8275  0E74  0008               	return
  8276  0E75                     __end_of_ADCC_Initialize:
  8277                           
  8278                           	psect	text26
  8279  0D90                     __ptext26:	
  8280 ;; *************** function _ADCC_StartConversion *****************
  8281 ;; Defined at:
  8282 ;;		line 114 in file "mcc_generated_files/adcc.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  channel         1    wreg     enum E10898
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  channel         1    4[COMMON] enum E10898
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8300 ;;Total ram usage:        1 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    5
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_main
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function _ADCC_StartConversion
  8312  0D90                     _ADCC_StartConversion:
  8313                           
  8314                           ;incstack = 0
  8315                           ; Regs used in _ADCC_StartConversion: [wreg]
  8316                           ;ADCC_StartConversion@channel stored from wreg
  8317  0D90  00F4               	movwf	ADCC_StartConversion@channel
  8318  0D91                     l2704:
  8319                           
  8320                           ;mcc_generated_files/adcc.c: 114: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 115: {;mcc_generated_files/adcc.c: 117:     ADPCH = channel;
  8321  0D91  0874               	movf	ADCC_StartConversion@channel,w
  8322  0D92  0141               	movlb	1	; select bank1
  8323  0D93  009F               	movwf	31	;volatile
  8324  0D94                     l2706:
  8325                           
  8326                           ;mcc_generated_files/adcc.c: 120:     ADCON0bits.ADON = 1;
  8327  0D94  0142               	movlb	2	; select bank2
  8328  0D95  1791               	bsf	17,7	;volatile
  8329  0D96                     l2708:
  8330                           
  8331                           ;mcc_generated_files/adcc.c: 123:     ADCON0bits.ADGO = 1;
  8332  0D96  1411               	bsf	17,0	;volatile
  8333  0D97                     l309:
  8334  0D97  0008               	return
  8335  0D98                     __end_of_ADCC_StartConversion:
  8336                           
  8337                           	psect	text27
  8338  0D81                     __ptext27:	
  8339 ;; *************** function _ADCC_IsConversionDone *****************
  8340 ;; Defined at:
  8341 ;;		line 126 in file "mcc_generated_files/adcc.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;		None
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      _Bool 
  8348 ;; Registers used:
  8349 ;;		wreg, status,0
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8359 ;;Total ram usage:        0 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    5
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		_main
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function _ADCC_IsConversionDone
  8371  0D81                     _ADCC_IsConversionDone:
  8372  0D81                     l2710:	
  8373                           ;incstack = 0
  8374                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
  8375                           
  8376                           
  8377                           ;mcc_generated_files/adcc.c: 129:     return ((unsigned char)(!ADCON0bits.ADGO));
  8378  0D81  1003               	clrc
  8379  0D82  0142               	movlb	2	; select bank2
  8380  0D83  1C11               	btfss	17,0	;volatile
  8381  0D84  1403               	setc
  8382  0D85  3000               	movlw	0
  8383  0D86  3D09               	addwfc	9,w
  8384  0D87                     l312:
  8385  0D87  0008               	return
  8386  0D88                     __end_of_ADCC_IsConversionDone:
  8387                           
  8388                           	psect	text28
  8389  0D4B                     __ptext28:	
  8390 ;; *************** function _ADCC_GetConversionResult *****************
  8391 ;; Defined at:
  8392 ;;		line 132 in file "mcc_generated_files/adcc.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  2    4[COMMON] unsigned short 
  8399 ;; Registers used:
  8400 ;;		wreg
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8410 ;;Total ram usage:        2 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:    5
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_main
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           
  8421                           ;psect for function _ADCC_GetConversionResult
  8422  0D4B                     _ADCC_GetConversionResult:
  8423  0D4B                     l2714:	
  8424                           ;incstack = 0
  8425                           ; Regs used in _ADCC_GetConversionResult: [wreg]
  8426                           
  8427                           
  8428                           ;mcc_generated_files/adcc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8429  0D4B  0141               	movlb	1	; select bank1
  8430  0D4C  081E               	movf	30,w	;volatile
  8431  0D4D  00F5               	movwf	?_ADCC_GetConversionResult+1
  8432  0D4E  081D               	movf	29,w	;volatile
  8433  0D4F  00F4               	movwf	?_ADCC_GetConversionResult
  8434  0D50                     l315:
  8435  0D50  0008               	return
  8436  0D51                     __end_of_ADCC_GetConversionResult:
  8437                           
  8438                           	psect	intentry
  8439  0004                     __pintentry:	
  8440 ;; *************** function _INTERRUPT_InterruptManager *****************
  8441 ;; Defined at:
  8442 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:    4
  8463 ;; This function calls:
  8464 ;;		Absolute function
  8465 ;;		_EUSART1_Receive_ISR
  8466 ;;		_TMR0_ISR
  8467 ;;		_rxSerialISR
  8468 ;; This function is called by:
  8469 ;;		Interrupt level 1
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473  0004                     _INTERRUPT_InterruptManager:
  8474                           
  8475                           ;incstack = 0
  8476  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8477                           
  8478                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8479  0005  3180               	pagesel	$
  8480  0006                     i1l3180:
  8481                           
  8482                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  8483  0006  014E               	movlb	14	; select bank14
  8484  0007  1E96               	btfss	22,5	;volatile
  8485  0008  280A               	goto	u260_21
  8486  0009  280B               	goto	u260_20
  8487  000A                     u260_21:
  8488  000A  2813               	goto	i1l406
  8489  000B                     u260_20:
  8490  000B                     i1l3182:
  8491  000B  1E8C               	btfss	12,5	;volatile
  8492  000C  280E               	goto	u261_21
  8493  000D  280F               	goto	u261_20
  8494  000E                     u261_21:
  8495  000E  2813               	goto	i1l406
  8496  000F                     u261_20:
  8497  000F                     i1l3184:
  8498                           
  8499                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  8500  000F  318D  25FC  3180   	fcall	_TMR0_ISR
  8501                           
  8502                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8503  0012  2826               	goto	i1l412
  8504  0013                     i1l406:	
  8505                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8506                           
  8507  0013  1F0B               	btfss	11,6	;volatile
  8508  0014  2816               	goto	u262_21
  8509  0015  2817               	goto	u262_20
  8510  0016                     u262_21:
  8511  0016  2826               	goto	i1l412
  8512  0017                     u262_20:
  8513  0017                     i1l3186:
  8514                           
  8515                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
  8516  0017  1E99               	btfss	25,5	;volatile
  8517  0018  281A               	goto	u263_21
  8518  0019  281B               	goto	u263_20
  8519  001A                     u263_21:
  8520  001A  2826               	goto	i1l411
  8521  001B                     u263_20:
  8522  001B                     i1l3188:
  8523  001B  1E8F               	btfss	15,5	;volatile
  8524  001C  281E               	goto	u264_21
  8525  001D  281F               	goto	u264_20
  8526  001E                     u264_21:
  8527  001E  2826               	goto	i1l411
  8528  001F                     u264_20:
  8529  001F                     i1l3190:
  8530                           
  8531                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_RxDefaultInterruptHandler();
  8532  001F  0141               	movlb	1	; select bank1
  8533  0020  0857               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
  8534  0021  008A               	movwf	10
  8535  0022  0856               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
  8536  0023  000A               	callw
  8537  0024  3180               	pagesel	$
  8538                           
  8539                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8540  0025  2826               	goto	i1l412
  8541  0026                     i1l411:	
  8542                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  8543                           
  8544  0026                     i1l412:
  8545  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8546  0027  0009               	retfie
  8547  0028                     __end_of_INTERRUPT_InterruptManager:
  8548                           
  8549                           	psect	text30
  8550  0FC7                     __ptext30:	
  8551 ;; *************** function _EUSART1_Receive_ISR *****************
  8552 ;; Defined at:
  8553 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      void 
  8560 ;; Registers used:
  8561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8571 ;;Total ram usage:        0 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    2
  8574 ;; This function calls:
  8575 ;;		Absolute function
  8576 ;;		_EUSART1_DefaultErrorHandler
  8577 ;;		_EUSART1_DefaultFramingErrorHandler
  8578 ;;		_EUSART1_DefaultOverrunErrorHandler
  8579 ;;		_EUSART1_RxDataHandler
  8580 ;; This function is called by:
  8581 ;;		_EUSART1_Initialize
  8582 ;;		_rxSerialISR
  8583 ;;		_INTERRUPT_InterruptManager
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function _EUSART1_Receive_ISR
  8589  0FC7                     _EUSART1_Receive_ISR:
  8590  0FC7                     i1l2564:	
  8591                           ;incstack = 0
  8592                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8593                           
  8594                           
  8595                           ;mcc_generated_files/eusart1.c: 185:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  8596  0FC7  087D               	movf	_eusart1RxHead,w	;volatile
  8597  0FC8  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  8598  0FC9  0086               	movwf	6
  8599  0FCA  0187               	clrf	7
  8600  0FCB  0181               	clrf	1
  8601  0FCC                     i1l2566:
  8602                           
  8603                           ;mcc_generated_files/eusart1.c: 187:     if(RC1STAbits.FERR){
  8604  0FCC  0142               	movlb	2	; select bank2
  8605  0FCD  1D1D               	btfss	29,2	;volatile
  8606  0FCE  2FD0               	goto	u172_21
  8607  0FCF  2FD1               	goto	u172_20
  8608  0FD0                     u172_21:
  8609  0FD0  2FDC               	goto	i1l2572
  8610  0FD1                     u172_20:
  8611  0FD1                     i1l2568:
  8612                           
  8613                           ;mcc_generated_files/eusart1.c: 188:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  8614  0FD1  087D               	movf	_eusart1RxHead,w	;volatile
  8615  0FD2  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  8616  0FD3  0086               	movwf	6
  8617  0FD4  0187               	clrf	7
  8618  0FD5  1481               	bsf	1,1
  8619  0FD6                     i1l2570:
  8620                           
  8621                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_FramingErrorHandler();
  8622  0FD6  0141               	movlb	1	; select bank1
  8623  0FD7  0855               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
  8624  0FD8  008A               	movwf	10
  8625  0FD9  0854               	movf	_EUSART1_FramingErrorHandler^(0+128),w
  8626  0FDA  000A               	callw
  8627  0FDB  318F               	pagesel	$
  8628  0FDC                     i1l2572:
  8629                           
  8630                           ;mcc_generated_files/eusart1.c: 192:     if(RC1STAbits.OERR){
  8631  0FDC  0142               	movlb	2	; select bank2
  8632  0FDD  1C9D               	btfss	29,1	;volatile
  8633  0FDE  2FE0               	goto	u173_21
  8634  0FDF  2FE1               	goto	u173_20
  8635  0FE0                     u173_21:
  8636  0FE0  2FEC               	goto	i1l2578
  8637  0FE1                     u173_20:
  8638  0FE1                     i1l2574:
  8639                           
  8640                           ;mcc_generated_files/eusart1.c: 193:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  8641  0FE1  087D               	movf	_eusart1RxHead,w	;volatile
  8642  0FE2  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  8643  0FE3  0086               	movwf	6
  8644  0FE4  0187               	clrf	7
  8645  0FE5  1501               	bsf	1,2
  8646  0FE6                     i1l2576:
  8647                           
  8648                           ;mcc_generated_files/eusart1.c: 194:         EUSART1_OverrunErrorHandler();
  8649  0FE6  0141               	movlb	1	; select bank1
  8650  0FE7  0853               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
  8651  0FE8  008A               	movwf	10
  8652  0FE9  0852               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
  8653  0FEA  000A               	callw
  8654  0FEB  318F               	pagesel	$
  8655  0FEC                     i1l2578:
  8656                           
  8657                           ;mcc_generated_files/eusart1.c: 197:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  8658  0FEC  087D               	movf	_eusart1RxHead,w	;volatile
  8659  0FED  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  8660  0FEE  0086               	movwf	6
  8661  0FEF  0187               	clrf	7
  8662  0FF0  0801               	movf	1,w
  8663  0FF1  1903               	btfsc	3,2
  8664  0FF2  2FF4               	goto	u174_21
  8665  0FF3  2FF5               	goto	u174_20
  8666  0FF4                     u174_21:
  8667  0FF4  2FFC               	goto	i1l2582
  8668  0FF5                     u174_20:
  8669  0FF5                     i1l2580:
  8670                           
  8671                           ;mcc_generated_files/eusart1.c: 198:         EUSART1_ErrorHandler();
  8672  0FF5  0141               	movlb	1	; select bank1
  8673  0FF6  0851               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
  8674  0FF7  008A               	movwf	10
  8675  0FF8  0850               	movf	_EUSART1_ErrorHandler^(0+128),w
  8676  0FF9  000A               	callw
  8677  0FFA  318F               	pagesel	$
  8678                           
  8679                           ;mcc_generated_files/eusart1.c: 199:     } else {
  8680  0FFB  2FFF               	goto	i1l202
  8681  0FFC                     i1l2582:
  8682                           
  8683                           ;mcc_generated_files/eusart1.c: 200:         EUSART1_RxDataHandler();
  8684  0FFC  318E  2642  318F   	fcall	_EUSART1_RxDataHandler
  8685  0FFF                     i1l202:
  8686  0FFF  0008               	return
  8687  1000                     __end_of_EUSART1_Receive_ISR:
  8688                           
  8689                           	psect	text31
  8690  06D1                     __ptext31:	
  8691 ;; *************** function _rxSerialISR *****************
  8692 ;; Defined at:
  8693 ;;		line 81 in file "main.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        2 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    3
  8714 ;; This function calls:
  8715 ;;		_EUSART1_Read
  8716 ;;		_EUSART1_Receive_ISR
  8717 ;;		_EUSART1_is_rx_ready
  8718 ;;		_atoi
  8719 ;;		_memset
  8720 ;; This function is called by:
  8721 ;;		_main
  8722 ;;		_INTERRUPT_InterruptManager
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           
  8727                           ;psect for function _rxSerialISR
  8728  06D1                     _rxSerialISR:
  8729  06D1                     i1l3144:	
  8730                           ;incstack = 0
  8731                           ; Regs used in _rxSerialISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8732                           
  8733                           
  8734                           ;main.c: 82:     EUSART1_Receive_ISR();
  8735  06D1  318F  27C7  3186   	fcall	_EUSART1_Receive_ISR
  8736  06D4                     i1l3146:
  8737                           
  8738                           ;main.c: 83:     if(EUSART1_is_rx_ready())
  8739  06D4  318D  2588  3186   	fcall	_EUSART1_is_rx_ready
  8740  06D7  3A00               	xorlw	0
  8741  06D8  1903               	skipnz
  8742  06D9  2EDB               	goto	u257_21
  8743  06DA  2EDC               	goto	u257_20
  8744  06DB                     u257_21:
  8745  06DB  2F55               	goto	i1l569
  8746  06DC                     u257_20:
  8747  06DC                     i1l3148:
  8748                           
  8749                           ;main.c: 84:     {;main.c: 85:             rxData = EUSART1_Read();
  8750  06DC  318E  26EC  3186   	fcall	_EUSART1_Read
  8751  06DF  00F2               	movwf	??_rxSerialISR
  8752  06E0  0872               	movf	??_rxSerialISR,w
  8753  06E1  00FA               	movwf	_rxData	;volatile
  8754  06E2                     i1l3150:
  8755                           
  8756                           ;main.c: 86:             if(rxData!=0x0A && i<8){
  8757  06E2  300A               	movlw	10
  8758  06E3  067A               	xorwf	_rxData,w	;volatile
  8759  06E4  1903               	btfsc	3,2
  8760  06E5  2EE7               	goto	u258_21
  8761  06E6  2EE8               	goto	u258_20
  8762  06E7                     u258_21:
  8763  06E7  2EFC               	goto	i1l3158
  8764  06E8                     u258_20:
  8765  06E8                     i1l3152:
  8766  06E8  3008               	movlw	8
  8767  06E9  0141               	movlb	1	; select bank1
  8768  06EA  0244               	subwf	_i^(0+128),w
  8769  06EB  1803               	skipnc
  8770  06EC  2EEE               	goto	u259_21
  8771  06ED  2EEF               	goto	u259_20
  8772  06EE                     u259_21:
  8773  06EE  2EFC               	goto	i1l3158
  8774  06EF                     u259_20:
  8775  06EF                     i1l3154:
  8776                           
  8777                           ;main.c: 87:                strNum[i]=rxData;
  8778  06EF  087A               	movf	_rxData,w	;volatile
  8779  06F0  00F2               	movwf	??_rxSerialISR
  8780  06F1  0844               	movf	_i^(0+128),w
  8781  06F2  3EC6               	addlw	(low (_strNum| 0))& (0+255)
  8782  06F3  0086               	movwf	6
  8783  06F4  0187               	clrf	7
  8784  06F5  0872               	movf	??_rxSerialISR,w
  8785  06F6  0081               	movwf	1
  8786  06F7                     i1l3156:
  8787                           
  8788                           ;main.c: 88:                i++;
  8789  06F7  3001               	movlw	1
  8790  06F8  00F2               	movwf	??_rxSerialISR
  8791  06F9  0872               	movf	??_rxSerialISR,w
  8792  06FA  07C4               	addwf	_i^(0+128),f
  8793                           
  8794                           ;main.c: 89:             }else{
  8795  06FB  2F55               	goto	i1l569
  8796  06FC                     i1l3158:
  8797                           
  8798                           ;main.c: 90:                 i=0;
  8799  06FC  0141               	movlb	1	; select bank1
  8800  06FD  01C4               	clrf	_i^(0+128)
  8801                           
  8802                           ;main.c: 91:                 switch(strNum[0])
  8803  06FE  2F31               	goto	i1l3172
  8804  06FF                     i1l3160:
  8805                           
  8806                           ;main.c: 94:                         periodoA = atoi(&strNum+1);
  8807  06FF  30C7               	movlw	(low ((_strNum| 0+1)))& (0+255)
  8808  0700  3185  2584  3186   	fcall	_atoi
  8809  0703  0877               	movf	?_atoi+1,w
  8810  0704  0141               	movlb	1	; select bank1
  8811  0705  00E1               	movwf	(_periodoA+1)^(0+128)
  8812  0706  0876               	movf	?_atoi,w
  8813  0707  00E0               	movwf	_periodoA^(0+128)
  8814                           
  8815                           ;main.c: 95:                         break;
  8816  0708  2F4A               	goto	i1l3174
  8817  0709                     i1l3162:
  8818                           
  8819                           ;main.c: 97:                         periodoB = atoi(&strNum+1);
  8820  0709  30C7               	movlw	(low ((_strNum| 0+1)))& (0+255)
  8821  070A  3185  2584  3186   	fcall	_atoi
  8822  070D  0877               	movf	?_atoi+1,w
  8823  070E  0141               	movlb	1	; select bank1
  8824  070F  00DF               	movwf	(_periodoB+1)^(0+128)
  8825  0710  0876               	movf	?_atoi,w
  8826  0711  00DE               	movwf	_periodoB^(0+128)
  8827                           
  8828                           ;main.c: 98:                         break;
  8829  0712  2F4A               	goto	i1l3174
  8830  0713                     i1l3164:
  8831                           
  8832                           ;main.c: 100:                         periodoC = atoi(&strNum+1);
  8833  0713  30C7               	movlw	(low ((_strNum| 0+1)))& (0+255)
  8834  0714  3185  2584  3186   	fcall	_atoi
  8835  0717  0877               	movf	?_atoi+1,w
  8836  0718  0141               	movlb	1	; select bank1
  8837  0719  00DD               	movwf	(_periodoC+1)^(0+128)
  8838  071A  0876               	movf	?_atoi,w
  8839  071B  00DC               	movwf	_periodoC^(0+128)
  8840                           
  8841                           ;main.c: 101:                         break;
  8842  071C  2F4A               	goto	i1l3174
  8843  071D                     i1l3166:
  8844                           
  8845                           ;main.c: 103:                         periodoD = atoi(&strNum+1);
  8846  071D  30C7               	movlw	(low ((_strNum| 0+1)))& (0+255)
  8847  071E  3185  2584  3186   	fcall	_atoi
  8848  0721  0877               	movf	?_atoi+1,w
  8849  0722  0141               	movlb	1	; select bank1
  8850  0723  00DB               	movwf	(_periodoD+1)^(0+128)
  8851  0724  0876               	movf	?_atoi,w
  8852  0725  00DA               	movwf	_periodoD^(0+128)
  8853                           
  8854                           ;main.c: 104:                         break;
  8855  0726  2F4A               	goto	i1l3174
  8856  0727                     i1l3168:
  8857                           
  8858                           ;main.c: 106:                         periodoE = atoi(&strNum+1);
  8859  0727  30C7               	movlw	(low ((_strNum| 0+1)))& (0+255)
  8860  0728  3185  2584  3186   	fcall	_atoi
  8861  072B  0877               	movf	?_atoi+1,w
  8862  072C  0141               	movlb	1	; select bank1
  8863  072D  00D9               	movwf	(_periodoE+1)^(0+128)
  8864  072E  0876               	movf	?_atoi,w
  8865  072F  00D8               	movwf	_periodoE^(0+128)
  8866                           
  8867                           ;main.c: 107:                         break;
  8868  0730  2F4A               	goto	i1l3174
  8869  0731                     i1l3172:
  8870  0731  0846               	movf	_strNum^(0+128),w
  8871  0732  00F2               	movwf	??_rxSerialISR
  8872  0733  01F3               	clrf	??_rxSerialISR+1
  8873                           
  8874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8875                           ; Switch size 1, requested type "simple"
  8876                           ; Number of cases is 1, Range of values is 0 to 0
  8877                           ; switch strategies available:
  8878                           ; Name         Instructions Cycles
  8879                           ; simple_byte            4     3 (average)
  8880                           ; direct_byte            8     6 (fixed)
  8881                           ; jumptable            260     6 (fixed)
  8882                           ;	Chosen strategy is simple_byte
  8883  0734  0873               	movf	??_rxSerialISR+1,w
  8884  0735  3A00               	xorlw	0	; case 0
  8885  0736  1903               	skipnz
  8886  0737  2F39               	goto	i1l3300
  8887  0738  2F4A               	goto	i1l3174
  8888  0739                     i1l3300:
  8889                           
  8890                           ; Switch size 1, requested type "simple"
  8891                           ; Number of cases is 5, Range of values is 65 to 69
  8892                           ; switch strategies available:
  8893                           ; Name         Instructions Cycles
  8894                           ; simple_byte           16     9 (average)
  8895                           ; direct_byte           19     9 (fixed)
  8896                           ; jumptable            263     9 (fixed)
  8897                           ;	Chosen strategy is simple_byte
  8898  0739  0872               	movf	??_rxSerialISR,w
  8899  073A  3A41               	xorlw	65	; case 65
  8900  073B  1903               	skipnz
  8901  073C  2EFF               	goto	i1l3160
  8902  073D  3A03               	xorlw	3	; case 66
  8903  073E  1903               	skipnz
  8904  073F  2F09               	goto	i1l3162
  8905  0740  3A01               	xorlw	1	; case 67
  8906  0741  1903               	skipnz
  8907  0742  2F13               	goto	i1l3164
  8908  0743  3A07               	xorlw	7	; case 68
  8909  0744  1903               	skipnz
  8910  0745  2F1D               	goto	i1l3166
  8911  0746  3A01               	xorlw	1	; case 69
  8912  0747  1903               	skipnz
  8913  0748  2F27               	goto	i1l3168
  8914  0749  2F4A               	goto	i1l3174
  8915  074A                     i1l3174:
  8916                           
  8917                           ;main.c: 112:                 memset(strNum, 0, 8);
  8918  074A  3000               	movlw	0
  8919  074B  00F0               	movwf	memset@c
  8920  074C  00F1               	movwf	memset@c+1
  8921  074D  3008               	movlw	8
  8922  074E  00F2               	movwf	memset@n
  8923  074F  3000               	movlw	0
  8924  0750  00F3               	movwf	memset@n+1
  8925  0751  30C6               	movlw	(low (_strNum| 0))& (0+255)
  8926  0752  3186  262D  3186   	fcall	_memset
  8927  0755                     i1l569:
  8928  0755  0008               	return
  8929  0756                     __end_of_rxSerialISR:
  8930                           
  8931                           	psect	text32
  8932  062D                     __ptext32:	
  8933 ;; *************** function _memset *****************
  8934 ;; Defined at:
  8935 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  dest            1    wreg     PTR void 
  8938 ;;		 -> strNum(8), 
  8939 ;;  c               2    0[COMMON] int 
  8940 ;;  n               2    2[COMMON] unsigned int 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  dest            1    8[COMMON] PTR void 
  8943 ;;		 -> strNum(8), 
  8944 ;;  k               2    6[COMMON] unsigned int 
  8945 ;;  s               1    9[COMMON] PTR unsigned char 
  8946 ;;		 -> strNum(8), 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      PTR void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8959 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8960 ;;Total ram usage:       10 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_rxSerialISR
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           
  8970                           ;psect for function _memset
  8971  062D                     _memset:
  8972                           
  8973                           ;incstack = 0
  8974                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8975                           ;memset@dest stored from wreg
  8976  062D  00F8               	movwf	memset@dest
  8977  062E                     i1l2634:
  8978  062E  0878               	movf	memset@dest,w
  8979  062F  00F4               	movwf	??_memset
  8980  0630  0874               	movf	??_memset,w
  8981  0631  00F9               	movwf	memset@s
  8982  0632                     i1l2636:
  8983  0632  0872               	movf	memset@n,w
  8984  0633  0473               	iorwf	memset@n+1,w
  8985  0634  1D03               	btfss	3,2
  8986  0635  2E37               	goto	u183_21
  8987  0636  2E38               	goto	u183_20
  8988  0637                     u183_21:
  8989  0637  2E39               	goto	i1l2640
  8990  0638                     u183_20:
  8991  0638  2ED0               	goto	i1l1226
  8992  0639                     i1l2640:
  8993  0639  0870               	movf	memset@c,w
  8994  063A  00F4               	movwf	??_memset
  8995  063B  0879               	movf	memset@s,w
  8996  063C  0086               	movwf	6
  8997  063D  0187               	clrf	7
  8998  063E  0874               	movf	??_memset,w
  8999  063F  0081               	movwf	1
  9000  0640                     i1l2642:
  9001  0640  0870               	movf	memset@c,w
  9002  0641  00F4               	movwf	??_memset
  9003  0642  0872               	movf	memset@n,w
  9004  0643  0779               	addwf	memset@s,w
  9005  0644  00F5               	movwf	??_memset+1
  9006  0645  0875               	movf	??_memset+1,w
  9007  0646  3EFF               	addlw	255
  9008  0647  0086               	movwf	6
  9009  0648  0187               	clrf	7
  9010  0649  0874               	movf	??_memset,w
  9011  064A  0081               	movwf	1
  9012  064B                     i1l2644:
  9013  064B  3000               	movlw	0
  9014  064C  0273               	subwf	memset@n+1,w
  9015  064D  3003               	movlw	3
  9016  064E  1903               	skipnz
  9017  064F  0272               	subwf	memset@n,w
  9018  0650  1803               	skipnc
  9019  0651  2E53               	goto	u184_21
  9020  0652  2E54               	goto	u184_20
  9021  0653                     u184_21:
  9022  0653  2E55               	goto	i1l2648
  9023  0654                     u184_20:
  9024  0654  2ED0               	goto	i1l1226
  9025  0655                     i1l2648:
  9026  0655  0870               	movf	memset@c,w
  9027  0656  00F4               	movwf	??_memset
  9028  0657  0A79               	incf	memset@s,w
  9029  0658  0086               	movwf	6
  9030  0659  0187               	clrf	7
  9031  065A  0874               	movf	??_memset,w
  9032  065B  0081               	movwf	1
  9033  065C                     i1l2650:
  9034  065C  0870               	movf	memset@c,w
  9035  065D  00F4               	movwf	??_memset
  9036  065E  0879               	movf	memset@s,w
  9037  065F  3E02               	addlw	2
  9038  0660  0086               	movwf	6
  9039  0661  0187               	clrf	7
  9040  0662  0874               	movf	??_memset,w
  9041  0663  0081               	movwf	1
  9042  0664                     i1l2652:
  9043  0664  0870               	movf	memset@c,w
  9044  0665  00F4               	movwf	??_memset
  9045  0666  0872               	movf	memset@n,w
  9046  0667  0779               	addwf	memset@s,w
  9047  0668  00F5               	movwf	??_memset+1
  9048  0669  0875               	movf	??_memset+1,w
  9049  066A  3EFE               	addlw	254
  9050  066B  0086               	movwf	6
  9051  066C  0187               	clrf	7
  9052  066D  0874               	movf	??_memset,w
  9053  066E  0081               	movwf	1
  9054  066F                     i1l2654:
  9055  066F  0870               	movf	memset@c,w
  9056  0670  00F4               	movwf	??_memset
  9057  0671  0872               	movf	memset@n,w
  9058  0672  0779               	addwf	memset@s,w
  9059  0673  00F5               	movwf	??_memset+1
  9060  0674  0875               	movf	??_memset+1,w
  9061  0675  3EFD               	addlw	253
  9062  0676  0086               	movwf	6
  9063  0677  0187               	clrf	7
  9064  0678  0874               	movf	??_memset,w
  9065  0679  0081               	movwf	1
  9066  067A                     i1l2656:
  9067  067A  3000               	movlw	0
  9068  067B  0273               	subwf	memset@n+1,w
  9069  067C  3007               	movlw	7
  9070  067D  1903               	skipnz
  9071  067E  0272               	subwf	memset@n,w
  9072  067F  1803               	skipnc
  9073  0680  2E82               	goto	u185_21
  9074  0681  2E83               	goto	u185_20
  9075  0682                     u185_21:
  9076  0682  2E84               	goto	i1l2660
  9077  0683                     u185_20:
  9078  0683  2ED0               	goto	i1l1226
  9079  0684                     i1l2660:
  9080  0684  0870               	movf	memset@c,w
  9081  0685  00F4               	movwf	??_memset
  9082  0686  0879               	movf	memset@s,w
  9083  0687  3E03               	addlw	3
  9084  0688  0086               	movwf	6
  9085  0689  0187               	clrf	7
  9086  068A  0874               	movf	??_memset,w
  9087  068B  0081               	movwf	1
  9088  068C  0870               	movf	memset@c,w
  9089  068D  00F4               	movwf	??_memset
  9090  068E  0872               	movf	memset@n,w
  9091  068F  0779               	addwf	memset@s,w
  9092  0690  00F5               	movwf	??_memset+1
  9093  0691  0875               	movf	??_memset+1,w
  9094  0692  3EFC               	addlw	252
  9095  0693  0086               	movwf	6
  9096  0694  0187               	clrf	7
  9097  0695  0874               	movf	??_memset,w
  9098  0696  0081               	movwf	1
  9099  0697                     i1l2662:
  9100  0697  3000               	movlw	0
  9101  0698  0273               	subwf	memset@n+1,w
  9102  0699  3009               	movlw	9
  9103  069A  1903               	skipnz
  9104  069B  0272               	subwf	memset@n,w
  9105  069C  1803               	skipnc
  9106  069D  2E9F               	goto	u186_21
  9107  069E  2EA0               	goto	u186_20
  9108  069F                     u186_21:
  9109  069F  2EA1               	goto	i1l2666
  9110  06A0                     u186_20:
  9111  06A0  2ED0               	goto	i1l1226
  9112  06A1                     i1l2666:
  9113  06A1  0979               	comf	memset@s,w
  9114  06A2  00F4               	movwf	??_memset
  9115  06A3  097A               	comf	memset@s+1,w
  9116  06A4  00F5               	movwf	??_memset+1
  9117  06A5  0AF4               	incf	??_memset,f
  9118  06A6  1903               	skipnz
  9119  06A7  0AF5               	incf	??_memset+1,f
  9120  06A8  3003               	movlw	3
  9121  06A9  0574               	andwf	??_memset,w
  9122  06AA  00F6               	movwf	memset@k
  9123  06AB  3000               	movlw	0
  9124  06AC  0575               	andwf	??_memset+1,w
  9125  06AD  00F7               	movwf	memset@k+1
  9126  06AE  0876               	movf	memset@k,w
  9127  06AF  00F4               	movwf	??_memset
  9128  06B0  0874               	movf	??_memset,w
  9129  06B1  07F9               	addwf	memset@s,f
  9130  06B2                     i1l2668:
  9131  06B2  0876               	movf	memset@k,w
  9132  06B3  02F2               	subwf	memset@n,f
  9133  06B4  0877               	movf	memset@k+1,w
  9134  06B5  3BF3               	subwfb	memset@n+1,f
  9135  06B6                     i1l2670:
  9136  06B6  30FC               	movlw	252
  9137  06B7  05F2               	andwf	memset@n,f
  9138  06B8  30FF               	movlw	255
  9139  06B9  05F3               	andwf	memset@n+1,f
  9140  06BA  2ECA               	goto	i1l2678
  9141  06BB                     i1l2672:
  9142  06BB  0870               	movf	memset@c,w
  9143  06BC  00F4               	movwf	??_memset
  9144  06BD  0879               	movf	memset@s,w
  9145  06BE  0086               	movwf	6
  9146  06BF  0187               	clrf	7
  9147  06C0  0874               	movf	??_memset,w
  9148  06C1  0081               	movwf	1
  9149  06C2                     i1l2674:
  9150  06C2  3001               	movlw	1
  9151  06C3  02F2               	subwf	memset@n,f
  9152  06C4  3000               	movlw	0
  9153  06C5  3BF3               	subwfb	memset@n+1,f
  9154  06C6                     i1l2676:
  9155  06C6  3001               	movlw	1
  9156  06C7  00F4               	movwf	??_memset
  9157  06C8  0874               	movf	??_memset,w
  9158  06C9  07F9               	addwf	memset@s,f
  9159  06CA                     i1l2678:
  9160  06CA  0872               	movf	memset@n,w
  9161  06CB  0473               	iorwf	memset@n+1,w
  9162  06CC  1D03               	btfss	3,2
  9163  06CD  2ECF               	goto	u187_21
  9164  06CE  2ED0               	goto	u187_20
  9165  06CF                     u187_21:
  9166  06CF  2EBB               	goto	i1l2672
  9167  06D0                     u187_20:
  9168  06D0                     i1l1226:
  9169  06D0  0008               	return
  9170  06D1                     __end_of_memset:
  9171                           
  9172                           	psect	text33
  9173  0584                     __ptext33:	
  9174 ;; *************** function _atoi *****************
  9175 ;; Defined at:
  9176 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  s               1    wreg     PTR const unsigned char 
  9179 ;;		 -> strNum(8), 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  9182 ;;		 -> strNum(8), 
  9183 ;;  n               2   11[BANK0 ] int 
  9184 ;;  neg             2    4[BANK0 ] int 
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  2    6[COMMON] int 
  9187 ;; Registers used:
  9188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9195 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9196 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9197 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9198 ;;Total ram usage:       16 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    1
  9201 ;; This function calls:
  9202 ;;		___wmul
  9203 ;;		_isdigit
  9204 ;;		_isspace
  9205 ;; This function is called by:
  9206 ;;		_rxSerialISR
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           
  9211                           ;psect for function _atoi
  9212  0584                     _atoi:
  9213                           
  9214                           ;incstack = 0
  9215                           ; Regs used in _atoi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9216                           ;atoi@s stored from wreg
  9217  0584  0140               	movlb	0	; select bank0
  9218  0585  00AD               	movwf	atoi@s
  9219  0586                     i1l3080:
  9220  0586  01AB               	clrf	atoi@n
  9221  0587  01AC               	clrf	atoi@n+1
  9222  0588  01A4               	clrf	atoi@neg
  9223  0589  01A5               	clrf	atoi@neg+1
  9224  058A  2D8F               	goto	i1l3084
  9225  058B                     i1l3082:
  9226  058B  3001               	movlw	1
  9227  058C  00A0               	movwf	??_atoi
  9228  058D  0820               	movf	??_atoi,w
  9229  058E  07AD               	addwf	atoi@s,f
  9230  058F                     i1l3084:
  9231  058F  01AA               	clrf	_atoi$1451
  9232  0590  0AAA               	incf	_atoi$1451,f
  9233  0591                     i1l3086:
  9234  0591  082D               	movf	atoi@s,w
  9235  0592  0086               	movwf	6
  9236  0593  0187               	clrf	7
  9237  0594  3020               	movlw	32
  9238  0595  0601               	xorwf	1,w
  9239  0596  1903               	btfsc	3,2
  9240  0597  2D99               	goto	u249_21
  9241  0598  2D9A               	goto	u249_20
  9242  0599                     u249_21:
  9243  0599  2DAE               	goto	i1l3092
  9244  059A                     u249_20:
  9245  059A                     i1l3088:
  9246  059A  082D               	movf	atoi@s,w
  9247  059B  0086               	movwf	6
  9248  059C  0187               	clrf	7
  9249  059D  0801               	movf	1,w
  9250  059E  3EF7               	addlw	247
  9251  059F  00A0               	movwf	??_atoi
  9252  05A0  30FF               	movlw	255
  9253  05A1  1803               	skipnc
  9254  05A2  3000               	movlw	0
  9255  05A3  00A1               	movwf	??_atoi+1
  9256  05A4  3000               	movlw	0
  9257  05A5  0221               	subwf	??_atoi+1,w
  9258  05A6  3005               	movlw	5
  9259  05A7  1903               	skipnz
  9260  05A8  0220               	subwf	??_atoi,w
  9261  05A9  1C03               	skipc
  9262  05AA  2DAC               	goto	u250_21
  9263  05AB  2DAD               	goto	u250_20
  9264  05AC                     u250_21:
  9265  05AC  2DAE               	goto	i1l3092
  9266  05AD                     u250_20:
  9267  05AD                     i1l3090:
  9268  05AD  01AA               	clrf	_atoi$1451
  9269  05AE                     i1l3092:
  9270  05AE  082A               	movf	_atoi$1451,w
  9271  05AF  00A0               	movwf	??_atoi
  9272  05B0  01A1               	clrf	??_atoi+1
  9273  05B1  0820               	movf	??_atoi,w
  9274  05B2  00A6               	movwf	_atoi$1450
  9275  05B3  0821               	movf	??_atoi+1,w
  9276  05B4  00A7               	movwf	_atoi$1450+1
  9277  05B5                     i1l3096:
  9278  05B5  0826               	movf	_atoi$1450,w
  9279  05B6  0427               	iorwf	_atoi$1450+1,w
  9280  05B7  1D03               	btfss	3,2
  9281  05B8  2DBA               	goto	u251_21
  9282  05B9  2DBB               	goto	u251_20
  9283  05BA                     u251_21:
  9284  05BA  2D8B               	goto	i1l3082
  9285  05BB                     u251_20:
  9286  05BB  2DC5               	goto	i1l3102
  9287  05BC                     i1l3098:
  9288  05BC  3001               	movlw	1
  9289  05BD  00A4               	movwf	atoi@neg
  9290  05BE  3000               	movlw	0
  9291  05BF  00A5               	movwf	atoi@neg+1
  9292  05C0                     i1l3100:
  9293  05C0  3001               	movlw	1
  9294  05C1  00A0               	movwf	??_atoi
  9295  05C2  0820               	movf	??_atoi,w
  9296  05C3  07AD               	addwf	atoi@s,f
  9297  05C4  2DF5               	goto	i1l3108
  9298  05C5                     i1l3102:
  9299  05C5  082D               	movf	atoi@s,w
  9300  05C6  0086               	movwf	6
  9301  05C7  0187               	clrf	7
  9302  05C8  0801               	movf	1,w
  9303  05C9  00A0               	movwf	??_atoi
  9304  05CA  01A1               	clrf	??_atoi+1
  9305                           
  9306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9307                           ; Switch size 1, requested type "simple"
  9308                           ; Number of cases is 1, Range of values is 0 to 0
  9309                           ; switch strategies available:
  9310                           ; Name         Instructions Cycles
  9311                           ; simple_byte            4     3 (average)
  9312                           ; direct_byte            8     6 (fixed)
  9313                           ; jumptable            260     6 (fixed)
  9314                           ;	Chosen strategy is simple_byte
  9315  05CB  0821               	movf	??_atoi+1,w
  9316  05CC  3A00               	xorlw	0	; case 0
  9317  05CD  1903               	skipnz
  9318  05CE  2DD0               	goto	i1l3302
  9319  05CF  2DF5               	goto	i1l3108
  9320  05D0                     i1l3302:
  9321                           
  9322                           ; Switch size 1, requested type "simple"
  9323                           ; Number of cases is 2, Range of values is 43 to 45
  9324                           ; switch strategies available:
  9325                           ; Name         Instructions Cycles
  9326                           ; simple_byte            7     4 (average)
  9327                           ; direct_byte           15     9 (fixed)
  9328                           ; jumptable            263     9 (fixed)
  9329                           ;	Chosen strategy is simple_byte
  9330  05D0  0820               	movf	??_atoi,w
  9331  05D1  3A2B               	xorlw	43	; case 43
  9332  05D2  1903               	skipnz
  9333  05D3  2DC0               	goto	i1l3100
  9334  05D4  3A06               	xorlw	6	; case 45
  9335  05D5  1903               	skipnz
  9336  05D6  2DBC               	goto	i1l3098
  9337  05D7  2DF5               	goto	i1l3108
  9338  05D8                     i1l3104:
  9339  05D8  082D               	movf	atoi@s,w
  9340  05D9  0086               	movwf	6
  9341  05DA  0187               	clrf	7
  9342  05DB  082C               	movf	atoi@n+1,w
  9343  05DC  00F1               	movwf	___wmul@multiplier+1
  9344  05DD  082B               	movf	atoi@n,w
  9345  05DE  00F0               	movwf	___wmul@multiplier
  9346  05DF  300A               	movlw	10
  9347  05E0  00F2               	movwf	___wmul@multiplicand
  9348  05E1  3000               	movlw	0
  9349  05E2  00F3               	movwf	___wmul@multiplicand+1
  9350  05E3  318E  26AC  3185   	fcall	___wmul
  9351  05E6  0871               	movf	?___wmul+1,w
  9352  05E7  0140               	movlb	0	; select bank0
  9353  05E8  00A1               	movwf	??_atoi+1
  9354  05E9  0801               	movf	1,w
  9355  05EA  0270               	subwf	?___wmul,w
  9356  05EB  00A0               	movwf	??_atoi
  9357  05EC  1C03               	skipc
  9358  05ED  03A1               	decf	??_atoi+1,f
  9359  05EE  0820               	movf	??_atoi,w
  9360  05EF  3E30               	addlw	48
  9361  05F0  00AB               	movwf	atoi@n
  9362  05F1  3000               	movlw	0
  9363  05F2  3D21               	addwfc	??_atoi+1,w
  9364  05F3  00AC               	movwf	atoi@n+1
  9365  05F4  2DC0               	goto	i1l3100
  9366  05F5                     i1l3108:
  9367  05F5  082D               	movf	atoi@s,w
  9368  05F6  0086               	movwf	6
  9369  05F7  0187               	clrf	7
  9370  05F8  0801               	movf	1,w
  9371  05F9  3ED0               	addlw	208
  9372  05FA  00A0               	movwf	??_atoi
  9373  05FB  30FF               	movlw	255
  9374  05FC  1803               	skipnc
  9375  05FD  3000               	movlw	0
  9376  05FE  00A1               	movwf	??_atoi+1
  9377  05FF  3000               	movlw	0
  9378  0600  0221               	subwf	??_atoi+1,w
  9379  0601  300A               	movlw	10
  9380  0602  1903               	skipnz
  9381  0603  0220               	subwf	??_atoi,w
  9382  0604  1C03               	skipc
  9383  0605  2E07               	goto	u252_21
  9384  0606  2E09               	goto	u252_20
  9385  0607                     u252_21:
  9386  0607  3001               	movlw	1
  9387  0608  2E0A               	goto	u253_20
  9388  0609                     u252_20:
  9389  0609  3000               	movlw	0
  9390  060A                     u253_20:
  9391  060A  00A2               	movwf	??_atoi+2
  9392  060B  01A3               	clrf	??_atoi+3
  9393  060C  0822               	movf	??_atoi+2,w
  9394  060D  00A8               	movwf	_atoi$1452
  9395  060E  0823               	movf	??_atoi+3,w
  9396  060F  00A9               	movwf	_atoi$1452+1
  9397  0610                     i1l3112:
  9398  0610  0828               	movf	_atoi$1452,w
  9399  0611  0429               	iorwf	_atoi$1452+1,w
  9400  0612  1D03               	btfss	3,2
  9401  0613  2E15               	goto	u254_21
  9402  0614  2E16               	goto	u254_20
  9403  0615                     u254_21:
  9404  0615  2DD8               	goto	i1l3104
  9405  0616                     u254_20:
  9406  0616                     i1l3114:
  9407  0616  0824               	movf	atoi@neg,w
  9408  0617  0425               	iorwf	atoi@neg+1,w
  9409  0618  1D03               	btfss	3,2
  9410  0619  2E1B               	goto	u255_21
  9411  061A  2E1C               	goto	u255_20
  9412  061B                     u255_21:
  9413  061B  2E28               	goto	i1l3118
  9414  061C                     u255_20:
  9415  061C                     i1l3116:
  9416  061C  092B               	comf	atoi@n,w
  9417  061D  00A0               	movwf	??_atoi
  9418  061E  092C               	comf	atoi@n+1,w
  9419  061F  00A1               	movwf	??_atoi+1
  9420  0620  0AA0               	incf	??_atoi,f
  9421  0621  1903               	skipnz
  9422  0622  0AA1               	incf	??_atoi+1,f
  9423  0623  0820               	movf	??_atoi,w
  9424  0624  00F6               	movwf	?_atoi
  9425  0625  0821               	movf	??_atoi+1,w
  9426  0626  00F7               	movwf	?_atoi+1
  9427  0627  2E2C               	goto	i1l1208
  9428  0628                     i1l3118:
  9429  0628  082C               	movf	atoi@n+1,w
  9430  0629  00F7               	movwf	?_atoi+1
  9431  062A  082B               	movf	atoi@n,w
  9432  062B  00F6               	movwf	?_atoi
  9433  062C                     i1l1208:
  9434  062C  0008               	return
  9435  062D                     __end_of_atoi:
  9436                           
  9437                           	psect	text34
  9438  0ECB                     __ptext34:	
  9439 ;; *************** function _isspace *****************
  9440 ;; Defined at:
  9441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  c               2    0[COMMON] int 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  2    0[COMMON] int 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9459 ;;Total ram usage:        5 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_atoi
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           
  9469                           ;psect for function _isspace
  9470  0ECB                     _isspace:
  9471  0ECB                     i1l2400:	
  9472                           ;incstack = 0
  9473                           ; Regs used in _isspace: [wreg+status,2+status,0]
  9474                           
  9475  0ECB  01F4               	clrf	_isspace$1468
  9476  0ECC  0AF4               	incf	_isspace$1468,f
  9477  0ECD                     i1l2402:
  9478  0ECD  3020               	movlw	32
  9479  0ECE  0670               	xorwf	isspace@c,w
  9480  0ECF  0471               	iorwf	isspace@c+1,w
  9481  0ED0  1903               	btfsc	3,2
  9482  0ED1  2ED3               	goto	u160_21
  9483  0ED2  2ED4               	goto	u160_20
  9484  0ED3                     u160_21:
  9485  0ED3  2EE4               	goto	i1l2408
  9486  0ED4                     u160_20:
  9487  0ED4                     i1l2404:
  9488  0ED4  0870               	movf	isspace@c,w
  9489  0ED5  3EF7               	addlw	247
  9490  0ED6  00F2               	movwf	??_isspace
  9491  0ED7  30FF               	movlw	255
  9492  0ED8  3D71               	addwfc	isspace@c+1,w
  9493  0ED9  00F3               	movwf	??_isspace+1
  9494  0EDA  3000               	movlw	0
  9495  0EDB  0273               	subwf	??_isspace+1,w
  9496  0EDC  3005               	movlw	5
  9497  0EDD  1903               	skipnz
  9498  0EDE  0272               	subwf	??_isspace,w
  9499  0EDF  1C03               	skipc
  9500  0EE0  2EE2               	goto	u161_21
  9501  0EE1  2EE3               	goto	u161_20
  9502  0EE2                     u161_21:
  9503  0EE2  2EE4               	goto	i1l2408
  9504  0EE3                     u161_20:
  9505  0EE3                     i1l2406:
  9506  0EE3  01F4               	clrf	_isspace$1468
  9507  0EE4                     i1l2408:
  9508  0EE4  0874               	movf	_isspace$1468,w
  9509  0EE5  00F2               	movwf	??_isspace
  9510  0EE6  01F3               	clrf	??_isspace+1
  9511  0EE7  0872               	movf	??_isspace,w
  9512  0EE8  00F0               	movwf	?_isspace
  9513  0EE9  0873               	movf	??_isspace+1,w
  9514  0EEA  00F1               	movwf	?_isspace+1
  9515  0EEB                     i1l1219:
  9516  0EEB  0008               	return
  9517  0EEC                     __end_of_isspace:
  9518                           
  9519                           	psect	text35
  9520  0E2A                     __ptext35:	
  9521 ;; *************** function _isdigit *****************
  9522 ;; Defined at:
  9523 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;  c               2    0[COMMON] int 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;		None
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  2    0[COMMON] int 
  9530 ;; Registers used:
  9531 ;;		wreg, status,2, status,0
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9541 ;;Total ram usage:        6 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; This function calls:
  9544 ;;		Nothing
  9545 ;; This function is called by:
  9546 ;;		_atoi
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           
  9551                           ;psect for function _isdigit
  9552  0E2A                     _isdigit:
  9553  0E2A                     i1l2412:	
  9554                           ;incstack = 0
  9555                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9556                           
  9557  0E2A  0870               	movf	isdigit@c,w
  9558  0E2B  3ED0               	addlw	208
  9559  0E2C  00F2               	movwf	??_isdigit
  9560  0E2D  30FF               	movlw	255
  9561  0E2E  3D71               	addwfc	isdigit@c+1,w
  9562  0E2F  00F3               	movwf	??_isdigit+1
  9563  0E30  3000               	movlw	0
  9564  0E31  0273               	subwf	??_isdigit+1,w
  9565  0E32  300A               	movlw	10
  9566  0E33  1903               	skipnz
  9567  0E34  0272               	subwf	??_isdigit,w
  9568  0E35  1C03               	skipc
  9569  0E36  2E38               	goto	u162_21
  9570  0E37  2E3A               	goto	u162_20
  9571  0E38                     u162_21:
  9572  0E38  3001               	movlw	1
  9573  0E39  2E3B               	goto	u163_20
  9574  0E3A                     u162_20:
  9575  0E3A  3000               	movlw	0
  9576  0E3B                     u163_20:
  9577  0E3B  00F4               	movwf	??_isdigit+2
  9578  0E3C  01F5               	clrf	??_isdigit+3
  9579  0E3D  0874               	movf	??_isdigit+2,w
  9580  0E3E  00F0               	movwf	?_isdigit
  9581  0E3F  0875               	movf	??_isdigit+3,w
  9582  0E40  00F1               	movwf	?_isdigit+1
  9583  0E41                     i1l1211:
  9584  0E41  0008               	return
  9585  0E42                     __end_of_isdigit:
  9586                           
  9587                           	psect	text36
  9588  0EAC                     __ptext36:	
  9589 ;; *************** function ___wmul *****************
  9590 ;; Defined at:
  9591 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  multiplier      2    0[COMMON] unsigned int 
  9594 ;;  multiplicand    2    2[COMMON] unsigned int 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  product         2    4[COMMON] unsigned int 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  2    0[COMMON] unsigned int 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2, status,0
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9609 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9610 ;;Total ram usage:        6 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; This function calls:
  9613 ;;		Nothing
  9614 ;; This function is called by:
  9615 ;;		_atoi
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           
  9620                           ;psect for function ___wmul
  9621  0EAC                     ___wmul:
  9622  0EAC                     i1l2386:	
  9623                           ;incstack = 0
  9624                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9625                           
  9626  0EAC  01F4               	clrf	___wmul@product
  9627  0EAD  01F5               	clrf	___wmul@product+1
  9628  0EAE                     i1l2388:
  9629  0EAE  1C70               	btfss	___wmul@multiplier,0
  9630  0EAF  2EB1               	goto	u156_21
  9631  0EB0  2EB2               	goto	u156_20
  9632  0EB1                     u156_21:
  9633  0EB1  2EB6               	goto	i1l721
  9634  0EB2                     u156_20:
  9635  0EB2                     i1l2390:
  9636  0EB2  0872               	movf	___wmul@multiplicand,w
  9637  0EB3  07F4               	addwf	___wmul@product,f
  9638  0EB4  0873               	movf	___wmul@multiplicand+1,w
  9639  0EB5  3DF5               	addwfc	___wmul@product+1,f
  9640  0EB6                     i1l721:
  9641  0EB6  3001               	movlw	1
  9642  0EB7                     u157_25:
  9643  0EB7  35F2               	lslf	___wmul@multiplicand,f
  9644  0EB8  0DF3               	rlf	___wmul@multiplicand+1,f
  9645  0EB9  0B89               	decfsz	9,f
  9646  0EBA  2EB7               	goto	u157_25
  9647  0EBB                     i1l2392:
  9648  0EBB  3001               	movlw	1
  9649  0EBC                     u158_25:
  9650  0EBC  36F1               	lsrf	___wmul@multiplier+1,f
  9651  0EBD  0CF0               	rrf	___wmul@multiplier,f
  9652  0EBE  0B89               	decfsz	9,f
  9653  0EBF  2EBC               	goto	u158_25
  9654  0EC0                     i1l2394:
  9655  0EC0  0870               	movf	___wmul@multiplier,w
  9656  0EC1  0471               	iorwf	___wmul@multiplier+1,w
  9657  0EC2  1D03               	btfss	3,2
  9658  0EC3  2EC5               	goto	u159_21
  9659  0EC4  2EC6               	goto	u159_20
  9660  0EC5                     u159_21:
  9661  0EC5  2EAE               	goto	i1l2388
  9662  0EC6                     u159_20:
  9663  0EC6                     i1l2396:
  9664  0EC6  0875               	movf	___wmul@product+1,w
  9665  0EC7  00F1               	movwf	?___wmul+1
  9666  0EC8  0874               	movf	___wmul@product,w
  9667  0EC9  00F0               	movwf	?___wmul
  9668  0ECA                     i1l723:
  9669  0ECA  0008               	return
  9670  0ECB                     __end_of___wmul:
  9671                           
  9672                           	psect	text37
  9673  0D88                     __ptext37:	
  9674 ;; *************** function _EUSART1_is_rx_ready *****************
  9675 ;; Defined at:
  9676 ;;		line 126 in file "mcc_generated_files/eusart1.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      _Bool 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9694 ;;Total ram usage:        0 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_rxSerialISR
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _EUSART1_is_rx_ready
  9705  0D88                     _EUSART1_is_rx_ready:
  9706  0D88                     i1l2538:	
  9707                           ;incstack = 0
  9708                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
  9709                           
  9710                           
  9711                           ;mcc_generated_files/eusart1.c: 128:     return (eusart1RxCount ? 1 : 0);
  9712  0D88  087B               	movf	_eusart1RxCount,w	;volatile
  9713  0D89  1D03               	btfss	3,2
  9714  0D8A  2D8C               	goto	u168_21
  9715  0D8B  2D8E               	goto	u168_20
  9716  0D8C                     u168_21:
  9717  0D8C  3001               	movlw	1
  9718  0D8D  2D8F               	goto	u169_20
  9719  0D8E                     u168_20:
  9720  0D8E  3000               	movlw	0
  9721  0D8F                     u169_20:
  9722  0D8F                     i1l170:
  9723  0D8F  0008               	return
  9724  0D90                     __end_of_EUSART1_is_rx_ready:
  9725                           
  9726                           	psect	text38
  9727  0D47                     __ptext38:	
  9728 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  9729 ;; Defined at:
  9730 ;;		line 219 in file "mcc_generated_files/eusart1.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;		None
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		None
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9748 ;;Total ram usage:        0 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_EUSART1_Initialize
  9754 ;;		_EUSART1_Receive_ISR
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           
  9759                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
  9760  0D47                     _EUSART1_DefaultOverrunErrorHandler:
  9761  0D47                     i1l2378:	
  9762                           ;incstack = 0
  9763                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
  9764                           
  9765                           
  9766                           ;mcc_generated_files/eusart1.c: 222:     RC1STAbits.CREN = 0;
  9767  0D47  0142               	movlb	2	; select bank2
  9768  0D48  121D               	bcf	29,4	;volatile
  9769                           
  9770                           ;mcc_generated_files/eusart1.c: 223:     RC1STAbits.CREN = 1;
  9771  0D49  161D               	bsf	29,4	;volatile
  9772  0D4A                     i1l212:
  9773  0D4A  0008               	return
  9774  0D4B                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  9775                           
  9776                           	psect	text39
  9777  07FD                     __ptext39:	
  9778 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  9779 ;; Defined at:
  9780 ;;		line 217 in file "mcc_generated_files/eusart1.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;		None
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;		None
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  1    wreg      void 
  9787 ;; Registers used:
  9788 ;;		None
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9798 ;;Total ram usage:        0 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; This function calls:
  9801 ;;		Nothing
  9802 ;; This function is called by:
  9803 ;;		_EUSART1_Initialize
  9804 ;;		_EUSART1_Receive_ISR
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           
  9809                           ;psect for function _EUSART1_DefaultFramingErrorHandler
  9810  07FD                     _EUSART1_DefaultFramingErrorHandler:
  9811  07FD                     i1l209:	
  9812                           ;incstack = 0
  9813                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
  9814                           
  9815  07FD  0008               	return
  9816  07FE                     __end_of_EUSART1_DefaultFramingErrorHandler:
  9817                           
  9818                           	psect	text40
  9819  0D43                     __ptext40:	
  9820 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  9821 ;; Defined at:
  9822 ;;		line 227 in file "mcc_generated_files/eusart1.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;		None
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9840 ;;Total ram usage:        0 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    1
  9843 ;; This function calls:
  9844 ;;		_EUSART1_RxDataHandler
  9845 ;; This function is called by:
  9846 ;;		_EUSART1_Initialize
  9847 ;;		_EUSART1_Receive_ISR
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           
  9852                           ;psect for function _EUSART1_DefaultErrorHandler
  9853  0D43                     _EUSART1_DefaultErrorHandler:
  9854  0D43                     i1l2380:	
  9855                           ;incstack = 0
  9856                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9857                           
  9858                           
  9859                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_RxDataHandler();
  9860  0D43  318E  2642  318D   	fcall	_EUSART1_RxDataHandler
  9861  0D46                     i1l215:
  9862  0D46  0008               	return
  9863  0D47                     __end_of_EUSART1_DefaultErrorHandler:
  9864                           
  9865                           	psect	text41
  9866  0E42                     __ptext41:	
  9867 ;; *************** function _EUSART1_RxDataHandler *****************
  9868 ;; Defined at:
  9869 ;;		line 207 in file "mcc_generated_files/eusart1.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9887 ;;Total ram usage:        1 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_EUSART1_Receive_ISR
  9893 ;;		_EUSART1_DefaultErrorHandler
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           
  9898                           ;psect for function _EUSART1_RxDataHandler
  9899  0E42                     _EUSART1_RxDataHandler:
  9900  0E42                     i1l2302:	
  9901                           ;incstack = 0
  9902                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9903                           
  9904                           
  9905                           ;mcc_generated_files/eusart1.c: 209:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  9906  0E42  0142               	movlb	2	; select bank2
  9907  0E43  0819               	movf	25,w	;volatile
  9908  0E44  00F0               	movwf	??_EUSART1_RxDataHandler
  9909  0E45  087D               	movf	_eusart1RxHead,w
  9910  0E46  3EA8               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  9911  0E47  0086               	movwf	6
  9912  0E48  0187               	clrf	7
  9913  0E49  0870               	movf	??_EUSART1_RxDataHandler,w
  9914  0E4A  0081               	movwf	1
  9915  0E4B                     i1l2304:
  9916  0E4B  3001               	movlw	1
  9917  0E4C  00F0               	movwf	??_EUSART1_RxDataHandler
  9918  0E4D  0870               	movf	??_EUSART1_RxDataHandler,w
  9919  0E4E  07FD               	addwf	_eusart1RxHead,f	;volatile
  9920  0E4F                     i1l2306:
  9921                           
  9922                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  9923  0E4F  3008               	movlw	8
  9924  0E50  027D               	subwf	_eusart1RxHead,w	;volatile
  9925  0E51  1C03               	skipc
  9926  0E52  2E54               	goto	u139_21
  9927  0E53  2E55               	goto	u139_20
  9928  0E54                     u139_21:
  9929  0E54  2E56               	goto	i1l2310
  9930  0E55                     u139_20:
  9931  0E55                     i1l2308:
  9932                           
  9933                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         e
      +                          usart1RxHead = 0;
  9934  0E55  01FD               	clrf	_eusart1RxHead	;volatile
  9935  0E56                     i1l2310:
  9936                           
  9937                           ;mcc_generated_files/eusart1.c: 214:     eusart1RxCount++;
  9938  0E56  3001               	movlw	1
  9939  0E57  00F0               	movwf	??_EUSART1_RxDataHandler
  9940  0E58  0870               	movf	??_EUSART1_RxDataHandler,w
  9941  0E59  07FB               	addwf	_eusart1RxCount,f	;volatile
  9942  0E5A                     i1l206:
  9943  0E5A  0008               	return
  9944  0E5B                     __end_of_EUSART1_RxDataHandler:
  9945                           
  9946                           	psect	text42
  9947  0EEC                     __ptext42:	
  9948 ;; *************** function _EUSART1_Read *****************
  9949 ;; Defined at:
  9950 ;;		line 140 in file "mcc_generated_files/eusart1.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  readValue       1    1[COMMON] unsigned char 
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      unsigned char 
  9957 ;; Registers used:
  9958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9968 ;;Total ram usage:        2 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_rxSerialISR
  9974 ;;		_getch
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           
  9979                           ;psect for function _EUSART1_Read
  9980  0EEC                     _EUSART1_Read:
  9981  0EEC                     i1l2542:	
  9982                           ;incstack = 0
  9983                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9984                           
  9985  0EEC                     i1l2544:	
  9986                           ;mcc_generated_files/eusart1.c: 144:     while(0 == eusart1RxCount)
  9987                           
  9988                           
  9989                           ;mcc_generated_files/eusart1.c: 144:     while(0 == eusart1RxCount)
  9990  0EEC  087B               	movf	_eusart1RxCount,w	;volatile
  9991  0EED  1903               	btfsc	3,2
  9992  0EEE  2EF0               	goto	u170_21
  9993  0EEF  2EF1               	goto	u170_20
  9994  0EF0                     u170_21:
  9995  0EF0  2EEC               	goto	i1l2544
  9996  0EF1                     u170_20:
  9997  0EF1                     i1l2546:
  9998                           
  9999                           ;mcc_generated_files/eusart1.c: 148:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 10000  0EF1  087C               	movf	_eusart1RxTail,w	;volatile
 10001  0EF2  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 10002  0EF3  0086               	movwf	6
 10003  0EF4  0187               	clrf	7
 10004  0EF5  0801               	movf	1,w
 10005  0EF6  00F0               	movwf	??_EUSART1_Read
 10006  0EF7  0870               	movf	??_EUSART1_Read,w
 10007  0EF8  0141               	movlb	1	; select bank1
 10008  0EF9  00C5               	movwf	_eusart1RxLastError^(0+128)	;volatile
 10009                           
 10010                           ;mcc_generated_files/eusart1.c: 150:     readValue = eusart1RxBuffer[eusart1RxTail++];
 10011  0EFA  087C               	movf	_eusart1RxTail,w
 10012  0EFB  3EA8               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 10013  0EFC  0086               	movwf	6
 10014  0EFD  0187               	clrf	7
 10015  0EFE  0801               	movf	1,w
 10016  0EFF  00F0               	movwf	??_EUSART1_Read
 10017  0F00  0870               	movf	??_EUSART1_Read,w
 10018  0F01  00F1               	movwf	EUSART1_Read@readValue
 10019  0F02                     i1l2548:
 10020  0F02  3001               	movlw	1
 10021  0F03  00F0               	movwf	??_EUSART1_Read
 10022  0F04  0870               	movf	??_EUSART1_Read,w
 10023  0F05  07FC               	addwf	_eusart1RxTail,f	;volatile
 10024  0F06                     i1l2550:
 10025                           
 10026                           ;mcc_generated_files/eusart1.c: 151:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 10027  0F06  3008               	movlw	8
 10028  0F07  027C               	subwf	_eusart1RxTail,w	;volatile
 10029  0F08  1C03               	skipc
 10030  0F09  2F0B               	goto	u171_21
 10031  0F0A  2F0C               	goto	u171_20
 10032  0F0B                     u171_21:
 10033  0F0B  2F0D               	goto	i1l2554
 10034  0F0C                     u171_20:
 10035  0F0C                     i1l2552:
 10036                           
 10037                           ;mcc_generated_files/eusart1.c: 152:     {;mcc_generated_files/eusart1.c: 153:         e
      +                          usart1RxTail = 0;
 10038  0F0C  01FC               	clrf	_eusart1RxTail	;volatile
 10039  0F0D                     i1l2554:
 10040                           
 10041                           ;mcc_generated_files/eusart1.c: 155:     PIE3bits.RC1IE = 0;
 10042  0F0D  014E               	movlb	14	; select bank14
 10043  0F0E  1299               	bcf	25,5	;volatile
 10044  0F0F                     i1l2556:
 10045                           
 10046                           ;mcc_generated_files/eusart1.c: 156:     eusart1RxCount--;
 10047  0F0F  3001               	movlw	1
 10048  0F10  02FB               	subwf	_eusart1RxCount,f	;volatile
 10049  0F11                     i1l2558:
 10050                           
 10051                           ;mcc_generated_files/eusart1.c: 157:     PIE3bits.RC1IE = 1;
 10052  0F11  1699               	bsf	25,5	;volatile
 10053  0F12                     i1l2560:
 10054                           
 10055                           ;mcc_generated_files/eusart1.c: 159:     return readValue;
 10056  0F12  0871               	movf	EUSART1_Read@readValue,w
 10057  0F13                     i1l183:
 10058  0F13  0008               	return
 10059  0F14                     __end_of_EUSART1_Read:
 10060                           
 10061                           	psect	text43
 10062  0DFC                     __ptext43:	
 10063 ;; *************** function _TMR0_ISR *****************
 10064 ;; Defined at:
 10065 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;		None
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1    wreg      void 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, status,0, pclath, cstack
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10083 ;;Total ram usage:        0 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    2
 10086 ;; This function calls:
 10087 ;;		_TMR0_CallBack
 10088 ;; This function is called by:
 10089 ;;		_INTERRUPT_InterruptManager
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           
 10094                           ;psect for function _TMR0_ISR
 10095  0DFC                     _TMR0_ISR:
 10096  0DFC                     i1l2718:	
 10097                           ;incstack = 0
 10098                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10099                           
 10100                           
 10101                           ;mcc_generated_files/tmr0.c: 123:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 10102  0DFC  014E               	movlb	14	; select bank14
 10103  0DFD  128C               	bcf	12,5	;volatile
 10104  0DFE                     i1l2720:
 10105                           
 10106                           ;mcc_generated_files/tmr0.c: 128:     if (++CountCallBack >= 10)
 10107  0DFE  3001               	movlw	1
 10108  0DFF  0141               	movlb	1	; select bank1
 10109  0E00  07C2               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 10110  0E01  3000               	movlw	0
 10111  0E02  3DC3               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 10112  0E03  3000               	movlw	0
 10113  0E04  0243               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 10114  0E05  300A               	movlw	10
 10115  0E06  1903               	skipnz
 10116  0E07  0242               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 10117  0E08  1C03               	skipc
 10118  0E09  2E0B               	goto	u189_21
 10119  0E0A  2E0C               	goto	u189_20
 10120  0E0B                     u189_21:
 10121  0E0B  2E12               	goto	i1l458
 10122  0E0C                     u189_20:
 10123  0E0C                     i1l2722:
 10124                           
 10125                           ;mcc_generated_files/tmr0.c: 129:     {;mcc_generated_files/tmr0.c: 131:         TMR0_Ca
      +                          llBack();
 10126  0E0C  3187  27F0  318D   	fcall	_TMR0_CallBack
 10127  0E0F                     i1l2724:
 10128                           
 10129                           ;mcc_generated_files/tmr0.c: 134:         CountCallBack = 0;
 10130  0E0F  0141               	movlb	1	; select bank1
 10131  0E10  01C2               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 10132  0E11  01C3               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 10133  0E12                     i1l458:
 10134  0E12  0008               	return
 10135  0E13                     __end_of_TMR0_ISR:
 10136                           
 10137                           	psect	text44
 10138  07F0                     __ptext44:	
 10139 ;; *************** function _TMR0_CallBack *****************
 10140 ;; Defined at:
 10141 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;		None
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;		None
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg, status,2, status,0, pclath, cstack
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10159 ;;Total ram usage:        0 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; Hardware stack levels required when called:    1
 10162 ;; This function calls:
 10163 ;;		Absolute function
 10164 ;;		_TMR0_DefaultInterruptHandler
 10165 ;;		_miTimer0ISR
 10166 ;; This function is called by:
 10167 ;;		_TMR0_ISR
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           
 10172                           ;psect for function _TMR0_CallBack
 10173  07F0                     _TMR0_CallBack:
 10174  07F0                     i1l2584:	
 10175                           ;incstack = 0
 10176                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10177                           
 10178                           
 10179                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 10180  07F0  0141               	movlb	1	; select bank1
 10181  07F1  084E               	movf	_TMR0_InterruptHandler^(0+128),w
 10182  07F2  044F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 10183  07F3  1903               	btfsc	3,2
 10184  07F4  2FF6               	goto	u175_21
 10185  07F5  2FF7               	goto	u175_20
 10186  07F6                     u175_21:
 10187  07F6  2FFC               	goto	i1l462
 10188  07F7                     u175_20:
 10189  07F7                     i1l2586:
 10190                           
 10191                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 10192  07F7  084F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 10193  07F8  008A               	movwf	10
 10194  07F9  084E               	movf	_TMR0_InterruptHandler^(0+128),w
 10195  07FA  000A               	callw
 10196  07FB  3187               	pagesel	$
 10197  07FC                     i1l462:
 10198  07FC  0008               	return
 10199  07FD                     __end_of_TMR0_CallBack:
 10200                           
 10201                           	psect	text45
 10202  07FE                     __ptext45:	
 10203 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10204 ;; Defined at:
 10205 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		None
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_TMR0_Initialize
 10229 ;;		_TMR0_CallBack
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _TMR0_DefaultInterruptHandler
 10235  07FE                     _TMR0_DefaultInterruptHandler:
 10236  07FE                     i1l468:	
 10237                           ;incstack = 0
 10238                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10239                           
 10240  07FE  0008               	return
 10241  07FF                     __end_of_TMR0_DefaultInterruptHandler:
 10242                           
 10243                           	psect	text46
 10244  0DE6                     __ptext46:	
 10245 ;; *************** function _miTimer0ISR *****************
 10246 ;; Defined at:
 10247 ;;		line 73 in file "main.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		wreg
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_main
 10271 ;;		_TMR0_CallBack
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           
 10276                           ;psect for function _miTimer0ISR
 10277  0DE6                     _miTimer0ISR:
 10278  0DE6                     i1l2384:	
 10279                           ;incstack = 0
 10280                           ; Regs used in _miTimer0ISR: [wreg]
 10281                           
 10282                           
 10283                           ;main.c: 74:     cont1segA++;
 10284  0DE6  3001               	movlw	1
 10285  0DE7  0141               	movlb	1	; select bank1
 10286  0DE8  07C0               	addwf	_cont1segA^(0+128),f
 10287  0DE9  3000               	movlw	0
 10288  0DEA  3DC1               	addwfc	(_cont1segA+1)^(0+128),f
 10289                           
 10290                           ;main.c: 75:     cont1segB++;
 10291  0DEB  3001               	movlw	1
 10292  0DEC  07BE               	addwf	_cont1segB^(0+128),f
 10293  0DED  3000               	movlw	0
 10294  0DEE  3DBF               	addwfc	(_cont1segB+1)^(0+128),f
 10295                           
 10296                           ;main.c: 76:     cont1segC++;
 10297  0DEF  3001               	movlw	1
 10298  0DF0  07BC               	addwf	_cont1segC^(0+128),f
 10299  0DF1  3000               	movlw	0
 10300  0DF2  3DBD               	addwfc	(_cont1segC+1)^(0+128),f
 10301                           
 10302                           ;main.c: 77:     cont1segD++;
 10303  0DF3  3001               	movlw	1
 10304  0DF4  07BA               	addwf	_cont1segD^(0+128),f
 10305  0DF5  3000               	movlw	0
 10306  0DF6  3DBB               	addwfc	(_cont1segD+1)^(0+128),f
 10307                           
 10308                           ;main.c: 78:     cont1segE++;
 10309  0DF7  3001               	movlw	1
 10310  0DF8  07B8               	addwf	_cont1segE^(0+128),f
 10311  0DF9  3000               	movlw	0
 10312  0DFA  3DB9               	addwfc	(_cont1segE+1)^(0+128),f
 10313  0DFB                     i1l555:
 10314  0DFB  0008               	return
 10315  0DFC                     __end_of_miTimer0ISR:
 10316  007E                     btemp	set	126	;btemp
 10317  007E                     int$flags	set	126
 10318  007E                     wtemp0	set	126
 10319                           
 10320                           	psect	config
 10321                           
 10322                           ;Config register CONFIG1 @ 0x8007
 10323                           ;	External Oscillator mode selection bits
 10324                           ;	FEXTOSC = OFF, Oscillator not enabled
 10325                           ;	Power-up default value for COSC bits
 10326                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 10327                           ;	Clock Out Enable bit
 10328                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10329                           ;	Clock Switch Enable bit
 10330                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10331                           ;	Fail-Safe Clock Monitor Enable bit
 10332                           ;	FCMEN = ON, FSCM timer enabled
 10333  8007                     	org	32775
 10334  8007  3FEC               	dw	16364
 10335                           
 10336                           ;Config register CONFIG2 @ 0x8008
 10337                           ;	Master Clear Enable bit
 10338                           ;	MCLRE = ON, MCLR pin is Master Clear function
 10339                           ;	Power-up Timer Enable bit
 10340                           ;	PWRTS = OFF, PWRT disabled
 10341                           ;	Low-Power BOR enable bit
 10342                           ;	LPBOREN = OFF, ULPBOR disabled
 10343                           ;	Brown-out reset enable bits
 10344                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10345                           ;	Brown-out Reset Voltage Selection
 10346                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 10347                           ;	Zero-cross detect disable
 10348                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10349                           ;	Peripheral Pin Select one-way control
 10350                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10351                           ;	Stack Overflow/Underflow Reset Enable bit
 10352                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10353  8008                     	org	32776
 10354  8008  3FFF               	dw	16383
 10355                           
 10356                           ;Config register CONFIG3 @ 0x8009
 10357                           ;	WDT Period Select bits
 10358                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10359                           ;	WDT operating mode
 10360                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 10361                           ;	WDT Window Select bits
 10362                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10363                           ;	WDT input clock selector
 10364                           ;	WDTCCS = SC, Software Control
 10365  8009                     	org	32777
 10366  8009  3F9F               	dw	16287
 10367                           
 10368                           ;Config register CONFIG4 @ 0x800A
 10369                           ;	Boot Block Size Selection bits
 10370                           ;	BBSIZE = BB512, 512 words boot block size
 10371                           ;	Boot Block Enable bit
 10372                           ;	BBEN = OFF, Boot Block disabled
 10373                           ;	SAF Enable bit
 10374                           ;	SAFEN = OFF, SAF disabled
 10375                           ;	Application Block Write Protection bit
 10376                           ;	WRTAPP = OFF, Application Block not write protected
 10377                           ;	Boot Block Write Protection bit
 10378                           ;	WRTB = OFF, Boot Block not write protected
 10379                           ;	Configuration Register Write Protection bit
 10380                           ;	WRTC = OFF, Configuration Register not write protected
 10381                           ;	Data EEPROM write protection bit
 10382                           ;	WRTD = OFF, Data EEPROM NOT write protected
 10383                           ;	Storage Area Flash Write Protection bit
 10384                           ;	WRTSAF = OFF, SAF not write protected
 10385                           ;	Low Voltage Programming Enable bit
 10386                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10387  800A                     	org	32778
 10388  800A  3FFF               	dw	16383
 10389                           
 10390                           ;Config register CONFIG5 @ 0x800B
 10391                           ;	UserNVM Program memory code protection bit
 10392                           ;	CP = OFF, UserNVM code protection disabled
 10393  800B                     	org	32779
 10394  800B  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    0
    Data        10
    BSS         82
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     10      76
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1483_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    memset@dest	PTR void  size(1) Largest target is 8
		 -> strNum(BANK1[8]), 

    memset@s	PTR unsigned char  size(1) Largest target is 8
		 -> strNum(BANK1[8]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 8
		 -> strNum(BANK1[8]), 

    sp__memset	PTR void  size(1) Largest target is 8
		 -> strNum(BANK1[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> miTimer0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> miTimer0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rxSerialISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rxSerialISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_ADCC_GetConversionResult
    _main->_EUSART1_SetRxInterruptHandler
    _main->_TMR0_SetInterruptHandler
    _pad->_strlen
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_rxSerialISR
    _rxSerialISR->_EUSART1_Read
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9112
                                              8 BANK1      2     2      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
      _EUSART1_SetRxInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7930
                                              0 BANK1      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7309
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6871
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5180
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3122
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1380
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     988
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              5 COMMON     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              4 COMMON     1     1      0
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              4 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                    _ADCC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     468
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    2193
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
                        _rxSerialISR *
 ---------------------------------------------------------------------------------
 (11) _rxSerialISR                                         2     2      0    2193
                                              2 COMMON     2     2      0
                       _EUSART1_Read
                _EUSART1_Receive_ISR
                _EUSART1_is_rx_ready
                               _atoi
                             _memset
 ---------------------------------------------------------------------------------
 (12) _memset                                             10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (12) _atoi                                               16    14      2    1265
                                              6 COMMON     2     0      2
                                              0 BANK0     14    14      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (13) _isspace                                             5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (13) _isdigit                                             6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (12) _EUSART1_is_rx_ready                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Read                                        2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                        _miTimer0ISR *
 ---------------------------------------------------------------------------------
 (13) _miTimer0ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetConversionResult
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _EUSART1_SetRxInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _miTimer0ISR *
   _rxSerialISR *
     _EUSART1_Read
     _EUSART1_Receive_ISR
       Absolute function(Fake) *
       _EUSART1_DefaultErrorHandler *
         _EUSART1_RxDataHandler
       _EUSART1_DefaultFramingErrorHandler *
       _EUSART1_DefaultOverrunErrorHandler *
       _EUSART1_RxDataHandler *
     _EUSART1_is_rx_ready
     _atoi
       ___wmul
       _isdigit
       _isspace
     _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      C6       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      C6      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 17 18:26:06 2021

                                             _i 00C4                                    ?_miTimer0ISR 0070  
                                            l41 0DD1                                              l44 0DA0  
                                            l47 0DAA                                              l96 0F3C  
                           ___wmul@multiplicand 0072                                             l221 0D62  
                                           l312 0D87                                             l224 0D56  
                                           l306 0E74                                             l218 0D5C  
                                           l162 0F95                                             l315 0D50  
                                           l227 0D68                                             l309 0D97  
                                           l186 0DAC                                             l195 0D74  
                                           l437 0DE5                                             l189 0DB4  
                                           l465 0D6E                                             l821 02B0  
                                           l822 02C1                                             l834 0497  
                                           l835 04A8                                             _abs 0E90  
                                           _pad 0756                         __size_of_PMD_Initialize 000A  
                                           wreg 0009                                            ?_abs 0032  
                                          l1311 0FC6                                            l3000 00DD  
                                          l1304 0583                                            l2210 01BE  
                                          l1330 07EF                                            l3010 0154  
                                          l3002 00E2                                            l1315 0EAB  
                                          l2220 0215                                            l2212 01C0  
                                          l3020 0188                                            l3012 0161  
                                          l3004 0111                                            l2230 023C  
                                          l2222 021A                                            l2214 01CA  
                                          l1318 0EAB                                            l1270 07A2  
                                          l3030 01A1                                            l3022 018D  
                                          l3014 016E                                            l3006 0115  
                                          l1271 07AE                                            l1239 0E29  
                                          l2240 027E                                            l2232 0240  
                                          l2224 0224                                            l2216 01EC  
                                          l1344 0E8F                                            l3024 0192  
                                          l3032 01AA                                            l3016 017C  
                                          l3008 0119                                            l1280 00D5  
                                          l3040 04C4                                            l3200 02DD  
                                          l2242 027F                                            l2234 0244  
                                          l2226 0231                                            l2218 01F6  
                                          l1338 0F65                                            l1266 0772  
                                          l3026 0198                                            l3018 0181  
                                          l1274 0097                                            l3050 04F8  
                                          l3042 04C9                                            l3130 0FA0  
                                          l3210 0307                                            l3202 02E8  
                                          l1283 0146                                            l1275 00A0  
                                          l2500 0E5B                                            l2236 024C  
                                          l2228 0234                                            l2244 028D  
                                          l2172 0DAC                                            l3028 019D  
                                          l3060 0544                                            l3052 0511  
                                          l3044 04CD                                            l3036 04AB  
                                          l3132 0FB4                                            l3140 0E18  
                                          l3220 0328                                            l3204 02EC  
                                          l3212 030A                                            l1269 0794  
                                          l2502 0E72                                            l2510 0DDA  
                                          l2246 0292                                            l2238 026E  
                                          l2174 0DB1                                            l3062 054F  
                                          l3046 04DF                                            l3038 04BC  
                                          l3134 0FBE                                            l3126 0F98  
                                          l3230 034C                                            l3222 0333  
                                          l3214 0314                                            l3206 02F4  
                                          l1279 00BD                                            l2520 0F6F  
                                          l2512 0DDB                                            l2504 0DD2  
                                          l2176 0D70                                            l3056 052B  
                                          l3048 04F0                                            l3072 0560  
                                          l3128 0F9C                                            l3240 0370  
                                          l3232 0354                                            l3216 0318  
                                          l3224 0336                                            l3208 02FC  
                                          l1297 01BD                                            l2370 0D63  
                                          l2530 0F79                                            l2522 0F72  
                                          l2514 0DE2                                            l2506 0DD7  
                                          l3074 0579                                            l3058 053C  
                                          l3066 0555                                            l3138 0E13  
                                          l3250 0398                                            l3242 0378  
                                          l3234 035F                                            l3226 0340  
                                          l3218 0320                                            l2372 0D57  
                                          l2532 0F80                                            l2524 0F74  
                                          l2516 0F66                                            l2460 0DA1  
                                          l2508 0DD8                                            l2700 0DCB  
                                          l3068 055D                                            l3252 039C  
                                          l3244 0380                                            l3228 0344  
                                          l3236 0362                                            l2710 0D81  
                                          l2374 0D5D                                            l2534 0F87  
                                          l2526 0F76                                            l2518 0F68  
                                          l2470 0F1E                                            l2462 0F14  
                                          l2382 0D69                                            l2702 0DCE  
                                          l3254 03A4                                            l3246 038B  
                                          l3238 036C                                            l2704 0D91  
                                          l2376 0D51                                            l2536 0F93  
                                          l2528 0F78                                            l2480 0F2F  
                                          l2472 0F21                                            l2464 0F18  
                                          l3256 03AC                                            l3248 038E  
                                          l3192 02C2                                            l2714 0D4B  
                                          l2706 0D94                                            l2490 0F39  
                                          l2482 0F31                                            l2474 0F23  
                                          l2466 0F1A                                            l3258 03B7  
                                          l3194 02D3                                            l2708 0D96  
                                          l2492 0D98                                            l2484 0F33  
                                          l2476 0F2B                                            l2468 0F1C  
                                          l2900 07C9                                            l3196 02D4  
                                          l2494 0D9B                                            l2486 0F35  
                                          l2478 0F2D                                            l2902 07E6  
                                          l2910 0F50                                            l3198 02D5  
                          _ADCC_StartConversion 0D90                                            l2496 0D9C  
                                          l2488 0F37                                            l2912 0F55  
                                          l2920 0E89                                            l2498 0D9F  
                                          l2930 03EB                                            l2906 0F3F  
                                          l2914 0E77                                            l2692 0DBF  
                                          l2940 042C                                            l2932 03F5  
                                          l2924 03BD                                            l2908 0F42  
                                          l2916 0E7C                                            l2694 0DC2  
                                          l2942 0430                                            l2950 0474  
                                          l2934 0414                                            l2926 03BF  
                                          l2918 0E80                                            ?_pad 0030  
                                          l2696 0DC5                                            l2952 0479  
                                          l2944 0434                                            l2936 0421  
                                          l2928 03C9                                            l2960 076B  
                                          l2698 0DC8                                            l2946 0456  
                                          l2938 0424                                            l2970 0799  
                                          l2962 0770                                            l2954 0758  
                                          l2948 0466                                            l2892 07AF  
                                          l2964 0775                                            l2956 075D  
                                          l2980 0060                                            l2974 0E90  
                                          l2894 07B5                                            l2966 0781  
                                          l2958 0766                                            l2990 00B5  
                                          l2982 0073                                            l2976 0E9E  
                                          l2896 07BA                                            l2968 0786  
                                          l2992 00C5                                            l2984 0079  
                                          l2898 07BF                                            l2994 00CB  
                                          l2986 009C                                            l2978 0050  
                                          l2996 00D0                                            l2988 00AF  
                                          l2998 00DA                                            STR_1 1000  
                                          STR_2 1009                                            STR_3 100F  
                                          STR_4 1015                                            STR_5 101B  
                                          STR_6 1021                                            u1200 026E  
                                          u1201 026D                                            u1210 028D  
                                          u1130 01CA                                            u1211 028C  
                                          u1131 01C9                                            u1220 0292  
                                          u1060 0DB1                                            u2100 07C9  
                                          u1221 0291                                            u1205 026A  
                                          u1061 0DB0                                            u2101 07C8  
                                          u1150 01F6                                            u2110 07E6  
                                          u1151 01F5                                            u2111 07E5  
                                          u2200 0456                                            u2120 0F65  
                                          u2201 0455                                            u2121 0F64  
                                          u1170 0221                                            u2210 0474  
                                          u2130 0E89                                            u2211 0473  
                                          u2115 07E2                                            u2131 0E88  
                                          u1180 0231                                            u2220 0479  
                                          u2140 03C9                                            u2300 006C  
                                          u1181 0230                                            u2221 0478  
                                          u2205 0452                                            u2141 03C8  
                                          _LATA 0018                                            u1190 0244  
                                          u2310 0079                                            _LATB 0019  
                                          u1191 0243                                            u2311 0078  
                                          _LATC 001A                                            u2160 03F5  
                                          u2080 07B5                                            u2240 075D  
                                          u2400 017C                                            u2161 03F4  
                                          u2081 07B4                                            u2241 075C  
                                          u2401 017B                                            u2090 07BA  
                                          u2250 076B                                            u2410 0181  
                                          u2330 009C                                            u2091 07B9  
                                          u2251 076A                                            u2411 0180  
                                          u2331 009B                                            u2180 0421  
                                          u2260 0794                                            u2420 0188  
                                          u2340 00AF                                            u2181 0420  
                                          u2261 0793                                            u2421 0187  
                                          u2405 0178                                            u2341 00AE  
                                          u2190 0434                                            u2270 0799  
                                          u2430 018D                                            u2350 00CB  
                                          u2191 0433                                            u2271 0798  
                                          u2431 018C                                            u2351 00CA  
                                          u2280 0E9E                                            u2440 0198  
                                          u2360 00D0                                            u2281 0E9D  
                                          u2265 0790                                            u2441 0197  
                                          u2361 00CF                                            u2345 00AB  
                                          u2370 0154                                            u2290 006B  
                                          u2450 04BC                                            u2371 0153  
                                          u2291 0069                                            u2451 04BB  
                                          u2380 0161                                            u2460 04DF  
                                          u2700 034C                                            u2285 0E9A  
                                          u2381 0160                                            u2461 04DE  
                                          u2701 034B                                            u2390 016E  
                                          u2470 04F0                                            u2710 036C  
                                          u2391 016D                                            u2375 0150  
                                          u2471 04EF                                            u2711 036B  
                                          u2480 053C                                            u2560 0FBE  
                                          u2720 0378                                            u2481 053B  
                                          u2561 0FBD                                            u2721 0377  
                                          u2730 0398                                            u2650 02E8  
                                          u2395 016A                                            u2731 0397  
                                          u2715 0368                                            u2651 02E7  
                                          u2740 03A4                                            u2660 02F4  
                                          u2741 03A3                                            u2661 02F3  
                                          u2670 0314                                            u2735 0394  
                                          u2671 0313                                            u2655 02E4  
                                          u2680 0320                                            u2681 031F  
                                          u2690 0340                                            u2691 033F  
                                          u2675 0310                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u2695 033C                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   _EUSART1_Write 0DAB  
                                          abs@a 0032                                            _dbuf 0120  
                                          _atoi 0584                                            _main 02C2  
                                          _dtoa 004E                                   ?_EUSART1_Read 0070  
                                          _prec 00B4                                            _nout 00B0  
                                          pad@i 0034                                            pad@p 0031  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 0036                                            btemp 007E  
                                          start 0028                                           ??_abs 0034  
                                         ??_pad 0033                         __end_of_TMR0_Initialize 0DE6  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                 __end_of_OSCILLATOR_Initialize 0DA1                           _eusart1RxStatusBuffer 00A0  
                               __end_of___aodiv 02C2                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_atoi 0076  
                                         ?_main 0070                                           ?_dtoa 003A  
                                         _ADCLK 0118                                 __end_of___aomod 04A9  
                                         _ADCNT 0099                                           _ADPCH 009F  
                                         _ADREF 0116                                           _ADRPT 009A  
                                         i1l202 0FFF                                           i1l212 0D4A  
                                         i1l206 0E5A                                           i1l215 0D46  
                                         i1l209 07FD                                           i1l170 0D8F  
                                         i1l411 0026                                           i1l412 0026  
                                         i1l406 0013                                           i1l183 0F13  
                                         i1l462 07FC                                           i1l721 0EB6  
                                         i1l458 0E12                                           i1l555 0DFB  
                                         i1l723 0ECA                                           i1l468 07FE  
                                         i1l569 0755                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 0058                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0006                       ?_TMR0_SetInterruptHandler 0074  
                       ??_ADCC_IsConversionDone 0074                                __end_of_TMR0_ISR 0E13  
                                         _flags 00B6                           ?_ADCC_StartConversion 0070  
                                         _fputc 07AF                                           _fputs 0F3D  
                               __end_of_isdigit 0E42                                           atoi@n 002B  
                                         pad@fp 0038                                           atoi@s 002D  
                                         _width 00B2                                           _putch 0D6F  
                                         dtoa@d 003A                                           dtoa@i 0056  
                                         dtoa@n 004E                                           dtoa@p 0048  
                                         dtoa@s 004C                                           dtoa@w 004A  
                               __end_of_isspace 0EEC                                  ?_EUSART1_Write 0070  
                                         pclath 000A                                  ??_EUSART1_Read 0070  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 07FE     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 07FD                                 __initialization 002A  
                                  __end_of_atoi 062D                      __end_of_EUSART1_Initialize 0F96  
                                  __end_of_main 03BD                                    __end_of_dtoa 01BE  
                   ?_INTERRUPT_InterruptManager 0070                                          ??_atoi 0020  
                                        ??_main 0076                                          ??_dtoa 0042  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          ?_fputc 0020  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0028                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0070  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RC1STA 011D  
                                        _RB4PPS 1F1C                                          i1l1211 0E41  
                                        i1l1208 062C                                          i1l1226 06D0  
                                        i1l1219 0EEB                                          i1l3100 05C0  
                                        i1l2310 0E56                                          i1l2302 0E42  
                                        i1l3102 05C5                                          i1l2304 0E4B  
                                        i1l2400 0ECB                                          i1l3112 0610  
                                        i1l3104 05D8                                          _ODCONA 1F3A  
                                        i1l2306 0E4F                                          i1l2402 0ECD  
                                        i1l3114 0616                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          i1l2308 0E55  
                                        i1l2412 0E2A                                          i1l2404 0ED4  
                                        i1l3116 061C                                          i1l3108 05F5  
                                        i1l3300 0739                                          i1l2406 0EE3  
                                        i1l3118 0628                                          i1l3302 05D0  
                                        i1l3150 06E2                                          i1l2408 0EE4  
                                        i1l3080 0586                                          i1l3160 06FF  
                                        i1l3152 06E8                                          i1l3144 06D1  
                  __size_of_EUSART1_is_rx_ready 0008                                          i1l3090 05AD  
                                        i1l3082 058B                                          i1l3162 0709  
                                        i1l3154 06EF                                          i1l3146 06D4  
                                        i1l2380 0D43                                          i1l3092 05AE  
                                        i1l3084 058F                                          i1l3164 0713  
                                        i1l3172 0731                                          i1l3156 06F7  
                                        i1l3148 06DC                                          i1l3180 0006  
                                        i1l2550 0F06                                          i1l2542 0EEC  
                                        i1l2390 0EB2                                          i1l3086 0591  
                                        i1l3166 071D                                          i1l3174 074A  
                                        i1l3158 06FC                                          i1l3190 001F  
                                        i1l3182 000B                                          i1l2384 0DE6  
                                        i1l2720 0DFE                                          i1l2560 0F12  
                                        i1l2552 0F0C                                          i1l2544 0EEC  
                                        i1l2392 0EBB                                          i1l3096 05B5  
                                        i1l3088 059A                                          i1l2640 0639  
                                        i1l3168 0727                                          i1l3184 000F  
                                        i1l2722 0E0C                                          i1l2554 0F0D  
                                        i1l2546 0EF1                                          i1l2378 0D47  
                                        i1l2538 0D88                                          i1l2394 0EC0  
                                        i1l2386 0EAC                                          i1l3098 05BC  
                                        i1l2650 065C                                          i1l2642 0640  
                                        i1l2634 062E                                          i1l2570 0FD6  
                                        i1l3186 0017                                          i1l2724 0E0F  
                                        i1l2556 0F0F                                          i1l2548 0F02  
                                        i1l2396 0EC6                                          i1l2388 0EAE  
                                        i1l2660 0684                                          i1l2652 0664  
                                        i1l2644 064B                                          i1l2636 0632  
                                        i1l2580 0FF5                                          i1l2572 0FDC  
                                        i1l2564 0FC7                                          i1l3188 001B  
                                        i1l2718 0DFC                                          i1l2558 0F11  
                                        i1l2670 06B6                                          i1l2662 0697  
                                        i1l2654 066F                                          i1l2582 0FFC  
                                        i1l2574 0FE1                                          i1l2566 0FCC  
                                        i1l2584 07F0                                          i1l2672 06BB  
                                        i1l2656 067A                                          i1l2648 0655  
                                        i1l2576 0FE6                                          i1l2568 0FD1  
                                        i1l2586 07F7                                          i1l2674 06C2  
                                        i1l2666 06A1                                          i1l2578 0FEC  
                                        i1l2676 06C6                                          i1l2668 06B2  
                                        i1l2678 06CA                                          u160_20 0ED4  
                                        u160_21 0ED3                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        u161_20 0EE3                                          u161_21 0EE2  
                                        u170_20 0EF1                                          u162_20 0E3A  
                                        u250_20 05AD                                          u170_21 0EF0  
                                        u162_21 0E38                                          u250_21 05AC  
                                        u171_20 0F0C                                          u139_20 0E55  
                                        u163_20 0E3B                                          u251_20 05BB  
                                        u171_21 0F0B                                          u139_21 0E54  
                                        u251_21 05BA                                          u156_20 0EB2  
                                        u252_20 0609                                          u172_20 0FD1  
                                        u260_20 000B                                          u156_21 0EB1  
                                        u252_21 0607                                          u172_21 0FD0  
                                        u260_21 000A                                          u253_20 060A  
                                        u173_20 0FE1                                          u261_20 000F  
                                        u173_21 0FE0                                          u261_21 000E  
                                        u157_25 0EB7                                          u254_20 0616  
                                        u174_20 0FF5                                          u262_20 0017  
                                        u254_21 0615                                          u174_21 0FF4  
                                        u262_21 0016                                          u158_25 0EBC  
                                        u175_20 07F7                                          u159_20 0EC6  
                                        u255_20 061C                                          u183_20 0638  
                                        u263_20 001B                                          u175_21 07F6  
                                        u159_21 0EC5                                          u255_21 061B  
                                        u183_21 0637                                          u263_21 001A  
                                        u168_20 0D8E                                          u184_20 0654  
                                        u264_20 001F                                          u168_21 0D8C  
                                        u184_21 0653                                          u264_21 001E  
                                        u169_20 0D8F                                          u249_20 059A  
                                        u185_20 0683                                          u257_20 06DC  
                                        u249_21 0599                                          u185_21 0682  
                                        u257_21 06DB                                          u186_20 06A0  
                                        u258_20 06E8                                          u186_21 069F  
                                        u258_21 06E7                                          u187_20 06D0  
                                        u259_20 06EF                                          u187_21 06CF  
                                        u259_21 06EE                                          u189_20 0E0C  
                                        u189_21 0E0B                                          _OSCFRQ 0893  
                                        u114lld 01E9                                          u123lld 02B0  
                                        u116lld 0215                                          u223lld 0497  
                                        u215lld 03E8                                          u232lld 0097  
                                        u217lld 0414                                          _TX1REG 011A  
                                        _TX1STA 011E                      ??_ADCC_GetConversionResult 0076  
                                  vfprintf@cfmt 006E                                       ??___aodiv 0074  
                                     ??___aomod 0074                                          ___wmul 0EAC  
                      ?_EUSART1_SetErrorHandler 0074                                ?_TMR0_Initialize 0070  
                                        _memset 062D                                          _rxData 007A  
                                        _printf 0E13                                          pad@buf 0030  
                          __size_of_miTimer0ISR 0016                ??_EUSART1_SetOverrunErrorHandler 0076  
               ?_EUSART1_SetOverrunErrorHandler 0074                                    ?_rxSerialISR 0070  
                                        _strNum 00C6                                          dtoa@fp 0047  
                                        _strlen 0E75                                 _ADCC_Initialize 0E5B  
                                        fputc@c 0020                                  _PMD_Initialize 0DA1  
                                        fputs@c 002C                                          fputs@i 002D  
                                        fputs@s 002F                                       ??_isdigit 0072  
                                     ??_isspace 0072                          ??_ADCC_StartConversion 0074  
                         __end_of_TMR0_CallBack 07FD                                __end_of_vfprintf 0FC7  
                               ??_EUSART1_Write 0074        TMR0_SetInterruptHandler@InterruptHandler 0074  
                               _eusart1RxBuffer 00A8                               _SYSTEM_Initialize 0DBF  
                       __end_of__initialization 004A                              ?_SYSTEM_Initialize 0070  
                __size_of_EUSART1_RxDataHandler 0019                   __end_of_EUSART1_RxDataHandler 0E5B  
                                __pcstackCOMMON 0070                                    __pidataBANK1 0DB5  
                           ??_SYSTEM_Initialize 0076                                       ?_TMR0_ISR 0070  
                                 __end_of_fputc 07F0                                   __end_of_fputs 0F66  
                                 __end_of_putch 0D75                          __end_of_PMD_Initialize 0DAB  
                          __end_of_EUSART1_Read 0F14                           TMR0_ISR@CountCallBack 00C2  
                   __end_of_EUSART1_Receive_ISR 1000                     ADCC_StartConversion@channel 0074  
                                       ??_fputc 0023                       __end_of_SYSTEM_Initialize 0DD2  
                                       ??_fputs 0029                                         ??_putch 0075  
                                 _eusart1RxHead 007D                                   _eusart1RxTail 007C  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
               ??_EUSART1_SetRxInterruptHandler 0076                 __end_of_EUSART1_SetErrorHandler 0D57  
                                    __pmaintext 02C2                __end_of_TMR0_SetInterruptHandler 0D6F  
                                       ?___wmul 0070                                      ??_TMR0_ISR 0070  
                       __end_of_ADCC_Initialize 0E75                                      __pintentry 0004  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                       ?_memset 0070                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                         ?_printf 00E2  
                               ?_PMD_Initialize 0070                                         ?_strlen 0074  
        __end_of_EUSART1_SetFramingErrorHandler 0D5D         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 0D57                    ?_EUSART1_DefaultErrorHandler 0070  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 00DB                                         _OSCTUNE 0892  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                  __size_of_ADCC_IsConversionDone 0007  
                 __end_of_ADCC_IsConversionDone 0D88                                         ___aodiv 01BE  
                                       ___aomod 03BD                                 __size_of___wmul 001F  
                                     ?_vfprintf 0068                             _EUSART1_is_rx_ready 0D88  
                               __size_of_memset 00A4                                         __ptext1 0E13  
                                       __ptext2 0F96                                         __ptext3 04A9  
                                       __ptext4 004E                                         __ptext5 0756  
                                       __ptext6 0E75                                         __ptext7 0F3D  
                                       __ptext8 07AF                                         __ptext9 0D6F  
                               __size_of_printf 0017                                 __size_of_strlen 001B  
                         _OSCILLATOR_Initialize 0D98                                    __size_of_abs 001C  
                                  __size_of_pad 0059                                         _isdigit 0E2A  
                          __size_of_rxSerialISR 0085                              _EUSART1_Initialize 0F66  
                      ??_PIN_MANAGER_Initialize 0074                                         _isspace 0ECB  
                 ??_EUSART1_DefaultErrorHandler 0071                                         atoi@neg 0024  
                    __size_of_SYSTEM_Initialize 0013                                         clrloop0 0D76  
                          end_of_initialization 004A                            ?_EUSART1_is_rx_ready 0070  
                           ?_EUSART1_Initialize 0070                                         fputc@fp 0022  
                                       init_ram 0D7B                                         memset@c 0070  
                                       memset@k 0076                                         memset@n 0072  
                                       memset@s 0079                     _EUSART1_OverrunErrorHandler 00D2  
                                       fputs@fp 0028                                         initloop 0D7C  
         __end_of_EUSART1_SetRxInterruptHandler 0D69          __size_of_EUSART1_SetRxInterruptHandler 0006  
                 _EUSART1_SetRxInterruptHandler 0D63                               __end_of_vfpfcnvrt 0584  
                         __size_of_EUSART1_Read 0028                                ?_ADCC_Initialize 0070  
                                    ??_vfprintf 006B                            ??_EUSART1_Initialize 0076  
                                       strlen@a 0021                                         strlen@s 0022  
                      _TMR0_SetInterruptHandler 0D69                __size_of_EUSART1_SetErrorHandler 0006  
                           EUSART1_Write@txData 0074                           ??_EUSART1_is_rx_ready 0070  
                                  _EUSART1_Read 0EEC            __size_of_EUSART1_DefaultErrorHandler 0004  
                                 ??_miTimer0ISR 0070                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0067                                     vfpfcnvrt@ll 005F  
                                __end_of___wmul 0ECB                               __size_of_TMR0_ISR 0017  
                        ?_OSCILLATOR_Initialize 0070                                  __end_of_memset 06D1  
             __size_of_ADCC_GetConversionResult 0006                       ?_ADCC_GetConversionResult 0074  
                                __end_of_printf 0E2A                                  __end_of_strlen 0E90  
                           start_initialization 002A                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 0029                                     __end_of_abs 0EAC  
                                   __end_of_pad 07AF   EUSART1_SetRxInterruptHandler@interruptHandler 0074  
                 __size_of_ADCC_StartConversion 0008                                     putch@txData 0075  
                         __end_of_EUSART1_Write 0DB5                                     vfprintf@fmt 0068  
                              ??_PMD_Initialize 0074                                        ??___wmul 0074  
                         _EUSART1_RxDataHandler 0E42                          __size_of_TMR0_CallBack 000D  
                ?_EUSART1_SetRxInterruptHandler 0074                                     __pdataBANK1 00D8  
                                      ??_memset 0074                                      memset@dest 0078  
                                      ??_printf 00E6                                        ??_strlen 0020  
                                _eusart1RxCount 007B                             __end_of_miTimer0ISR 0DFC  
                            main@convertedValue 00EA                                     __pbssCOMMON 007A  
             _EUSART1_RxDefaultInterruptHandler 00D6                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00E2  
                              ___aodiv@dividend 0028                ??_EUSART1_SetFramingErrorHandler 0076  
               ?_EUSART1_SetFramingErrorHandler 0074                    __size_of_EUSART1_Receive_ISR 0039  
                                     _atoi$1450 0026                                       _atoi$1451 002A  
                                     _atoi$1452 0028                           _TMR0_InterruptHandler 00CE  
                                     __pnvBANK1 00CE                          _PIN_MANAGER_Initialize 0F14  
                                     _dtoa$1547 0045                                        ?___aodiv 0020  
                                      ?___aomod 0020                                ___aodiv@quotient 0032  
                                     _cont1segA 00C0                                       _cont1segB 00BE  
                                     _cont1segC 00BC                                       _cont1segD 00BA  
                                     _cont1segE 00B8                    ??_INTERRUPT_InterruptManager 0074  
                             __size_of_vfprintf 0031                                        _BAUD1CON 011F  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0D4B     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0070             ?_EUSART1_DefaultOverrunErrorHandler 0070  
            _EUSART1_DefaultOverrunErrorHandler 0D47                                        ?_isdigit 0070  
                          _EUSART1_ErrorHandler 00D0                                        ?_isspace 0070  
                       _EUSART1_SetErrorHandler 0D51                                   _TMR0_CallBack 07F0  
                                __size_of_fputc 0041                                  __size_of_fputs 0029  
                                __size_of_putch 0006                           _ADCC_IsConversionDone 0D81  
                             ??_TMR0_Initialize 0076                                  ___wmul@product 0074  
       EUSART1_SetErrorHandler@interruptHandler 0074                                       clear_ram0 0D75  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
           __size_of_INTERRUPT_InterruptManager 0024                      ??_TMR0_SetInterruptHandler 0076  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                                      _TMR0_ISR 0DFC                                     _miTimer0ISR 0DE6  
                                     _vfpfcnvrt 04A9                                   ??_rxSerialISR 0072  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                             ___wmul@multiplier 0070                                    _isspace$1468 0074  
                                ?_TMR0_CallBack 0070                           EUSART1_Read@readValue 0071  
                                    _ADSTATbits 0115                __end_of_ADCC_GetConversionResult 0D51  
                                    vfprintf@ap 006A                                      vfprintf@fp 006D  
                       ??_OSCILLATOR_Initialize 0074                                __size_of___aodiv 0104  
                              __size_of___aomod 00EC                     __size_of_EUSART1_Initialize 0030  
                                    ?_vfpfcnvrt 0058                                 ___aodiv@divisor 0020  
                               ___aodiv@counter 0030                       ??_EUSART1_SetErrorHandler 0076  
           __end_of_EUSART1_DefaultErrorHandler 0D47                     _EUSART1_DefaultErrorHandler 0D43  
                   __end_of_EUSART1_is_rx_ready 0D90                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 001A                                __size_of_isdigit 0018  
                           __end_of_rxSerialISR 0756                                __size_of_isspace 0021  
                                      __ptext10 0DAB                                        __ptext11 0E90  
                                      __ptext20 0F66                                        __ptext12 03BD  
                                      __ptext21 0D63                                        __ptext13 01BE  
                                      __ptext30 0FC7                                        __ptext22 0D5D  
                                      __ptext14 0DBF                                        __ptext31 06D1  
                                      __ptext23 0D57                                        __ptext15 0DD2  
                                      __ptext40 0D43                                        __ptext32 062D  
                                      __ptext24 0D51                                        __ptext16 0D69  
                                      __ptext41 0E42                                        __ptext33 0584  
                                      __ptext25 0E5B                                        __ptext17 0DA1  
                                      __ptext42 0EEC                                        __ptext34 0ECB  
                                      __ptext26 0D90                                        __ptext18 0F14  
                                      __ptext43 0DFC                                        __ptext35 0E2A  
                                      __ptext27 0D81                                        __ptext19 0D98  
                                      __ptext44 07F0                                        __ptext36 0EAC  
                                      __ptext28 0D4B                                        __ptext45 07FE  
                                      __ptext37 0D88                                        __ptext46 0DE6  
                                      __ptext38 0D47                                        __ptext39 07FD  
                        ?_ADCC_IsConversionDone 0070                                   __size_of_atoi 00A9  
                                 __size_of_main 00FB                                   __size_of_dtoa 0170  
          __end_of_TMR0_DefaultInterruptHandler 07FF           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FE                                        _periodoA 00E0  
                                      _periodoB 00DE                                        _periodoC 00DC  
                                      _periodoD 00DA                                        _periodoE 00D8  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0074  
                  __end_of_ADCC_StartConversion 0D98                                        int$flags 007E  
                                      _vfprintf 0F96              __end_of_INTERRUPT_InterruptManager 0028  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00E2  
                   _EUSART1_FramingErrorHandler 00D4                             _EUSART1_Receive_ISR 0FC7  
                              ___aomod@dividend 0028                                      _INTCONbits 000B  
                               ??_TMR0_CallBack 0070                                        isdigit@c 0070  
                                      intlevel1 0000                            ?_EUSART1_Receive_ISR 0070  
                                      isspace@c 0070                         ?_PIN_MANAGER_Initialize 0070  
        __end_of_EUSART1_SetOverrunErrorHandler 0D63         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 0D5D                   ?_TMR0_DefaultInterruptHandler 0070  
                                      printf@ap 00E9  EUSART1_SetFramingErrorHandler@interruptHandler 0074  
                      _ADCC_GetConversionResult 0D4B                                 ___aomod@divisor 0020  
                                   ??_vfpfcnvrt 005A                                 ___aomod@counter 0030  
                        __size_of_EUSART1_Write 000A                              _eusart1RxLastError 00C5  
                                 __pstringtext1 1000                                   __pstringtext2 1009  
                                 __pstringtext3 100F                                   __pstringtext4 1015  
                                 __pstringtext5 101B                                   __pstringtext6 1021  
                                 __pstringtext7 0000                                     _rxSerialISR 06D1  
                               _TMR0_Initialize 0DD2                                      _TX1STAbits 011E  
                                  ___aodiv@sign 0031                           ??_EUSART1_Receive_ISR 0071  
                __end_of_PIN_MANAGER_Initialize 0F3D                               ??_ADCC_Initialize 0074  
                       ??_EUSART1_RxDataHandler 0070                                    ___aomod@sign 0031  
